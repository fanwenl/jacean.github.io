<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jacean say Hello</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://jacean.github.io/"/>
  <updated>2016-03-16T13:24:37.266Z</updated>
  <id>http://jacean.github.io/</id>
  
  <author>
    <name>Jacean Wan</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>测试1</title>
    <link href="http://jacean.github.io/2016/03/16/%E6%B5%8B%E8%AF%951/"/>
    <id>http://jacean.github.io/2016/03/16/测试1/</id>
    <published>2016-03-16T13:24:37.000Z</published>
    <updated>2016-03-16T13:24:37.266Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Vim操作</title>
    <link href="http://jacean.github.io/2016/03/16/Vim%E6%93%8D%E4%BD%9C/"/>
    <id>http://jacean.github.io/2016/03/16/Vim操作/</id>
    <published>2016-03-16T09:32:53.000Z</published>
    <updated>2016-03-16T11:30:46.353Z</updated>
    
    <content type="html">&lt;h2 id=&quot;分屏操作&quot;&gt;&lt;a href=&quot;#分屏操作&quot; class=&quot;headerlink&quot; title=&quot;分屏操作&quot;&gt;&lt;/a&gt;分屏操作&lt;/h2&gt;&lt;h3 id=&quot;启动分屏&quot;&gt;&lt;a href=&quot;#启动分屏&quot; class=&quot;headerlink&quot; title=&quot;启动分屏&quot;&gt;&lt;/a&gt;启动分屏&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;使用大写的参数O来垂直分屏，小写o是水平分屏，n表示的是分成几个屏。&lt;blockquote&gt;
&lt;p&gt;vim -O&lt;em&gt;n&lt;/em&gt; file1 file2 …&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;关闭当前窗口&lt;blockquote&gt;
&lt;p&gt;Ctrl+W c&lt;br&gt;Ctrl+W q,关闭当前窗口，如果只剩最后一个了则退出vim&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;上下分开当前打开的文件&lt;blockquote&gt;
&lt;p&gt;Ctrl+W s&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;上下分开，并打开新文件&lt;blockquote&gt;
&lt;p&gt;:sp filename&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;左右分割当前打开的文件&lt;blockquote&gt;
&lt;p&gt;Ctrl+W v&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;左右分割，并打开新文件&lt;blockquote&gt;
&lt;p&gt;:vsp filename&lt;/p&gt;
&lt;h3 id=&quot;多屏切换光标&quot;&gt;&lt;a href=&quot;#多屏切换光标&quot; class=&quot;headerlink&quot; title=&quot;多屏切换光标&quot;&gt;&lt;/a&gt;多屏切换光标&lt;/h3&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;把光标移到右边的屏。&lt;blockquote&gt;
&lt;p&gt;Ctrl+W l&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;把光标移到左边的屏中。&lt;blockquote&gt;
&lt;p&gt;Ctrl+W h&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;把光标移到上边的屏中。&lt;blockquote&gt;
&lt;p&gt;Ctrl+W k&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;把光标移到下边的屏中。&lt;blockquote&gt;
&lt;p&gt;Ctrl+W j&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;把光标移到下一个的屏中。.&lt;blockquote&gt;
&lt;p&gt;Ctrl+W w&lt;/p&gt;
&lt;h3 id=&quot;移动分屏&quot;&gt;&lt;a href=&quot;#移动分屏&quot; class=&quot;headerlink&quot; title=&quot;移动分屏&quot;&gt;&lt;/a&gt;移动分屏&lt;/h3&gt;&lt;p&gt;这个功能还是使用了Vim的光标键，只不过都是大写。当然了，如果你的分屏很乱很复杂的话，这个功能可能会出现一些非常奇怪的症状。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;向右移动。&lt;blockquote&gt;
&lt;p&gt;Ctrl+W L&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;向左移动&lt;blockquote&gt;
&lt;p&gt;Ctrl+W H&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;向上移动&lt;blockquote&gt;
&lt;p&gt;Ctrl+W K&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;向下移动&lt;blockquote&gt;
&lt;p&gt;Ctrl+W J&lt;/p&gt;
&lt;h3 id=&quot;分屏尺寸&quot;&gt;&lt;a href=&quot;#分屏尺寸&quot; class=&quot;headerlink&quot; title=&quot;分屏尺寸&quot;&gt;&lt;/a&gt;分屏尺寸&lt;/h3&gt;&lt;p&gt;下面是改变尺寸的一些操作，主要是高度，对于宽度你可以使用[Ctrl+W &amp;lt;]或是[Ctrl+W &amp;gt;]，但这可能需要最新的版本才支持。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;让所有的屏都有一样的高度。&lt;blockquote&gt;
&lt;p&gt;Ctrl+W =&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;增加高度。&lt;blockquote&gt;
&lt;p&gt;Ctrl+W +&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;减少高度。&lt;blockquote&gt;
&lt;p&gt;Ctrl+W -&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;分屏操作&quot;&gt;&lt;a href=&quot;#分屏操作&quot; class=&quot;headerlink&quot; title=&quot;分屏操作&quot;&gt;&lt;/a&gt;分屏操作&lt;/h2&gt;&lt;h3 id=&quot;启动分屏&quot;&gt;&lt;a href=&quot;#启动分屏&quot; class=&quot;headerlink&quot; title=&quot;启动分屏&quot;&gt;&lt;/a
    
    </summary>
    
    
      <category term="Vim" scheme="http://jacean.github.io/tags/Vim/"/>
    
  </entry>
  
  <entry>
    <title>Shell入门</title>
    <link href="http://jacean.github.io/2016/03/16/Shell%E5%85%A5%E9%97%A8/"/>
    <id>http://jacean.github.io/2016/03/16/Shell入门/</id>
    <published>2016-03-16T09:12:51.000Z</published>
    <updated>2016-03-16T11:50:09.710Z</updated>
    
    <content type="html">&lt;p&gt;入门参考&lt;a href=&quot;http://c.biancheng.net/cpp/shell/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Linux Shell脚本教程：30分钟玩转Shell脚本编程&lt;/a&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Shell本身是一个用C语言编写的程序，是用户使用Unix/Linux的桥梁。&lt;br&gt;Shell既是一种命令语言，又是一种程序设计语言。作为命令语言，交互式的解释和执行用户输入的命令;作为程序设计语言，定义了各种变量和参数，并提供了许多在高级语言中才具有的控制结构，包括循环和分支。&lt;br&gt;它虽然不是Unix/Linux系统内核的一部分，但它调用了系统核心的大部分功能来执行程序、建立文件并以并行的方式协调各个程序的运行。因此，对于用户来说，shell是最重要的实用程序，深入了解和熟练掌握shell的特性极其使用方法，是用好Unix/Linux系统的关键。&lt;br&gt;可以说，shell使用的熟练程度反映了用户对Unix/Linux使用的熟练程度。&lt;br&gt;Shell脚本是解释型的，不需要编译。可通过交互式(Interactive)和批处理(Batch)两种方式执行。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;初识&quot;&gt;&lt;a href=&quot;#初识&quot; class=&quot;headerlink&quot; title=&quot;初识&quot;&gt;&lt;/a&gt;初识&lt;/h3&gt;&lt;p&gt;Linux的标准默认shell脚本解释器是bash。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;通过-#!/bin/bash-标记使用的是哪一种Shell解释器。 &lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/bin/bash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;Hello World !&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol&gt;
&lt;li&gt;执行Shell&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;chmod +x ./test.sh  #使脚本具有执行权限&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;./test.sh  #执行脚本&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;注意，一定要写成./test.sh，而不是test.sh。运行其它二进制的程序也一样，直接写test.sh，linux系统会去PATH里寻找有没有叫test.sh的，而只有/bin, /sbin, /usr/bin，/usr/sbin等在PATH里，你的当前目录通常不在PATH里，所以写成test.sh是会找不到命令的，要用./test.sh告诉系统说，就在当前目录找。&lt;br&gt;通过这种方式运行bash脚本，第一行一定要写对，好让系统查找到正确的解释器。&lt;br&gt;这里的”系统”，其实就是shell这个应用程序（想象一下Windows Explorer），但我故意写成系统，是方便理解，既然这个系统就是指shell，那么一个使用/bin/sh作为解释器的脚本是不是可以省去第一行呢？是的。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/bin/bash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;Hello&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;read PERSON&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;Nice to meet you ,$PERSON&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;jacean@jacean-Ubuntu:~$ info chmod&lt;br&gt;jacean@jacean-Ubuntu:~$ chmod +x ~/workspace/test.sh&lt;br&gt;jacean@jacean-Ubuntu:~$ ~/workspace/test.sh&lt;br&gt;Hello&lt;br&gt;wanja&lt;br&gt;Nice to meet you ,wanja&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;解释器运行&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/bin/sh test.sh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/bin/php test.php&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这种方式运行的脚本，不需要在第一行指定解释器信息，写了也没用。&lt;/p&gt;
&lt;h3 id=&quot;变量&quot;&gt;&lt;a href=&quot;#变量&quot; class=&quot;headerlink&quot; title=&quot;变量&quot;&gt;&lt;/a&gt;变量&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;定义变量&lt;br&gt;定义变量时，变量名不加美元符号（$），如：&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;variableName=&amp;quot;value&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;myUrl=&amp;quot;http://see.xidian.edu.cn/cpp/linux/&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;myNum=100&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;注意，变量名和等号之间不能有空格，这可能和你熟悉的所有编程语言都不一样。同时，变量名的命名须遵循如下规则：&lt;br&gt;首个字符必须为字母（a-z，A-Z）。&lt;br&gt;中间不能有空格，可以使用下划线（_）。&lt;br&gt;不能使用标点符号。&lt;br&gt;不能使用bash里的关键字（可用help命令查看保留关键字）。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用变量&lt;br&gt;使用一个定义过的变量，只要在变量名前面加美元符号（$）即可，如：&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;your_name=&amp;quot;mozhiyan&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo $your_name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo $&amp;#123;your_name&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;变量名外面的花括号是可选的，加不加都行，加花括号是为了帮助解释器识别变量的边界，比如下面这种情况：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;for skill in Ada Coffe Action Java &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;do&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    echo &amp;quot;I am good at $&amp;#123;skill&amp;#125;Script&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;done&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果不给skill变量加花括号，写成echo “I am good at $skillScript”，解释器就会把$skillScript当成一个变量（其值为空），代码执行结果就不是我们期望的样子了。&lt;br&gt;推荐给所有变量加上花括号，这是个好的编程习惯。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;重新定义变量&lt;br&gt;已定义的变量，可以被重新定义，如：&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;myUrl=&amp;quot;http://see.xidian.edu.cn/cpp/linux/&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo $&amp;#123;myUrl&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;myUrl=&amp;quot;http://see.xidian.edu.cn/cpp/shell/&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo $&amp;#123;myUrl&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样写是合法的，但注意，第二次赋值的时候不能写&lt;em&gt; $myUrl=”&lt;a href=&quot;http://see.xidian.edu.cn/cpp/shell/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://see.xidian.edu.cn/cpp/shell/&lt;/a&gt;“&lt;/em&gt;，使用变量的时候才加美元符（$）。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;只读变量&lt;br&gt;使用 readonly 命令可以将变量定义为只读变量，只读变量的值不能被改变。&lt;br&gt;下面的例子尝试更改只读变量，结果报错：&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/bin/bash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;myUrl=&amp;quot;http://see.xidian.edu.cn/cpp/shell/&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;readonly myUrl&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;myUrl=&amp;quot;http://see.xidian.edu.cn/cpp/danpianji/&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;运行脚本，结果如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;/bin/sh: NAME: This variable is read only.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;删除变量&lt;br&gt;使用 unset 命令可以删除变量。语法：&lt;blockquote&gt;
&lt;p&gt;unset variable_name&lt;br&gt;变量被删除后不能再次使用；unset 命令不能删除只读变量。&lt;br&gt;举个例子：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/bin/sh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;myUrl=&amp;quot;http://see.xidian.edu.cn/cpp/u/xitong/&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;unset myUrl&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo $myUrl&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面的脚本没有任何输出。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;变量类型&lt;br&gt;运行shell时，会同时存在三种变量：&lt;ul&gt;
&lt;li&gt;局部变量&lt;br&gt;局部变量在脚本或命令中定义，仅在当前shell实例中有效，其他shell启动的程序不能访问局部变量。&lt;/li&gt;
&lt;li&gt;环境变量&lt;br&gt;所有的程序，包括shell启动的程序，都能访问环境变量，有些程序需要环境变量来保证其正常运行。必要的时候shell脚本也可以定义环境变量。&lt;/li&gt;
&lt;li&gt;shell变量&lt;br&gt;shell变量是由shell程序设置的特殊变量。shell变量中有一部分是环境变量，有一部分是局部变量，这些变量保证了shell的正常运行&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;特殊变量&lt;blockquote&gt;
&lt;p&gt;$0    当前脚本的文件名&lt;br&gt;$n    传递给脚本或函数的参数。n 是一个数字，表示第几个参数。例如，第一个参数是$1，第二个参数是$2。&lt;br&gt;$#    传递给脚本或函数的参数个数。&lt;br&gt;$&lt;em&gt;    传递给脚本或函数的所有参数。&lt;br&gt;$@    传递给脚本或函数的所有参数。被双引号(“ “)包含时，与 $&lt;/em&gt; 稍有不同，下面将会讲到。&lt;br&gt;$?    上个命令的退出状态，或函数的返回值。&lt;br&gt;$$    当前Shell进程ID。对于 Shell 脚本，就是这些脚本所在的进程ID。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;$&lt;em&gt; 和 $@ 的区别&lt;br&gt;$&lt;/em&gt; 和 $@ 都表示传递给函数或脚本的所有参数，不被双引号(“ “)包含时，都以”$1” “$2” … “$n” 的形式输出所有参数。&lt;br&gt;但是当它们被双引号(“ “)包含时，”$*” 会将所有的参数作为一个整体，以”$1 $2 … $n”的形式输出所有参数；”$@” 会将各个参数分开，以”$1” “$2” … “$n” 的形式输出所有参数。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/bin/bash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;\$*=&amp;quot; $*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;\&amp;quot;\$*\&amp;quot;=&amp;quot; &amp;quot;$*&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;\$@=&amp;quot; $@&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;\&amp;quot;\$@\&amp;quot;=&amp;quot; &amp;quot;$@&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;print each param from \$*&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for var in $*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;do&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    echo &amp;quot;$var&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;done&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;print each param from \$@&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for var in $@&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;do&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    echo &amp;quot;$var&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;done&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;print each param from \&amp;quot;\$*\&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for var in &amp;quot;$*&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;do&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    echo &amp;quot;$var&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;done&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;print each param from \&amp;quot;\$@\&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for var in &amp;quot;$@&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;do&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    echo &amp;quot;$var&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;done&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;$&lt;em&gt;=  a b c d&lt;br&gt;“$&lt;/em&gt;“= a b c d&lt;br&gt;$@=  a b c d&lt;br&gt;“$@”= a b c d&lt;br&gt;print each param from $&lt;em&gt;&lt;br&gt;a&lt;br&gt;b&lt;br&gt;c&lt;br&gt;d&lt;br&gt;print each param from $@&lt;br&gt;a&lt;br&gt;b&lt;br&gt;c&lt;br&gt;d&lt;br&gt;print each param from “$&lt;/em&gt;“&lt;br&gt;a b c d&lt;br&gt;print each param from “$@”&lt;br&gt;a&lt;br&gt;b&lt;br&gt;c&lt;br&gt;d&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;命令替换&lt;br&gt;命令替换是指Shell可以先执行命令，将输出结果暂时保存，在适当的地方输出。&lt;br&gt;命令替换的语法：&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;command&lt;/code&gt;&lt;br&gt;注意是反引号，不是单引号，这个键位于 Esc 键下方。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;DATE=`date`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;Date is $DATE&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;USERS=`who | wc -l`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;Logged in user are $USERS&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UP=`date ; uptime`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;Uptime is $UP&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;运行结果：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Date is Thu Jul  2 03:59:57 MST 2009&lt;br&gt;Logged in user are 1&lt;br&gt;Uptime is Thu Jul  2 03:59:57 MST 2009&lt;br&gt;03:59:57 up 20 days, 14:03,  1 user,  load avg: 0.13, 0.07, 0.15&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;变量替换&lt;br&gt;变量替换可以根据变量的状态（是否为空、是否定义等）来改变它的值&lt;br&gt;可以使用的变量替换形式：&lt;blockquote&gt;
&lt;p&gt;${var}    变量本来的值&lt;br&gt;${var:-word}    如果变量 var 为空或已被删除(unset)，那么返回 word，但不改变 var 的值。&lt;br&gt;${var:=word}    如果变量 var 为空或已被删除(unset)，那么返回 word，并将 var 的值设置为 word。&lt;br&gt;${var:?message}    如果变量 var 为空或已被删除(unset)，那么将消息 message 送到标准错误输出，可以用来检测变量 var 是否可以被正常赋值。&lt;br&gt;若此替换出现在Shell脚本中，那么脚本将停止运行。&lt;br&gt;${var:+word}    如果变量 var 被定义，那么返回 word，但不改变 var 的值。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;运算符&quot;&gt;&lt;a href=&quot;#运算符&quot; class=&quot;headerlink&quot; title=&quot;运算符&quot;&gt;&lt;/a&gt;运算符&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;expr 是一款表达式计算工具，使用它能完成表达式的求值操作。&lt;br&gt;例如，两个数相加：&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/bin/bash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;val=`expr 2 + 2`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;Total value : $val&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;运行脚本输出：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Total value : 4&lt;br&gt;两点注意：&lt;br&gt;-表达式和运算符之间要有空格，例如 2+2 是不对的，必须写成 2 + 2，这与我们熟悉的大多数编程语言不一样。&lt;br&gt;-完整的表达式要被 &lt;code&gt; &lt;/code&gt; 包含，注意这个字符不是常用的单引号，在 Esc 键下边。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;算术运算符&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;+    加法    &lt;code&gt;expr $a + $b&lt;/code&gt; 结果为 30。&lt;/li&gt;
&lt;li&gt;-    减法    &lt;code&gt;expr $a - $b&lt;/code&gt; 结果为 10。&lt;/li&gt;
&lt;li&gt;*    乘法    &lt;code&gt;expr $a \* $b&lt;/code&gt; 结果为  200。&lt;/li&gt;
&lt;li&gt;\/    除法    &lt;code&gt;expr $b / $a&lt;/code&gt; 结果为 2。&lt;/li&gt;
&lt;li&gt;\%    取余    &lt;code&gt;expr $b % $a&lt;/code&gt; 结果为 0。&lt;/li&gt;
&lt;li&gt;\=    赋值    a=$b 将把变量 b 的值赋给 a。&lt;/li&gt;
&lt;li&gt;\=\=    相等。用于比较两个数字，相同则返回 true。    [ $a == $b ] 返回 false。&lt;/li&gt;
&lt;li&gt;!\=    不相等。用于比较两个数字，不相同则返回 true。    [ $a != $b ] 返回 true。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注意：条件表达式要放在方括号之间，并且要有空格，例如 [$a==$b] 是错误的，必须写成 [ $a == $b ]。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;关系运算符&lt;br&gt;关系运算符只支持数字，不支持字符串，除非字符串的值是数字。&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;-eq    检测两个数是否相等，相等返回 true。    [ $a -eq $b ] 返回 true。&lt;/li&gt;
&lt;li&gt;-ne    检测两个数是否相等，不相等返回 true。    [ $a -ne $b ] 返回 true。&lt;/li&gt;
&lt;li&gt;-gt    检测左边的数是否大于右边的，如果是，则返回 true。    [ $a -gt $b ] 返回 false。&lt;/li&gt;
&lt;li&gt;-lt    检测左边的数是否小于右边的，如果是，则返回 true。    [ $a -lt $b ] 返回 true。&lt;/li&gt;
&lt;li&gt;-ge    检测左边的数是否大等于右边的，如果是，则返回 true。    [ $a -ge $b ] 返回 false。&lt;/li&gt;
&lt;li&gt;-le    检测左边的数是否小于等于右边的，如果是，则返回 true。    [ $a -le $b ] 返回 true。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;布尔运算符&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;!    非运算，表达式为 true 则返回 false，否则返回 true。    [ ! false ] 返回 true。&lt;/li&gt;
&lt;li&gt;-o    或运算，有一个表达式为 true 则返回 true。    [ $a -lt 20 -o $b -gt 100 ] 返回 true。&lt;/li&gt;
&lt;li&gt;-a    与运算，两个表达式都为 true 才返回 true。    [ $a -lt 20 -a $b -gt 100 ] 返回 false。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;字符串运算符&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;=    检测两个字符串是否相等，相等返回 true。    [ $a = $b ] 返回 false。&lt;/li&gt;
&lt;li&gt;!=    检测两个字符串是否相等，不相等返回 true。    [ $a != $b ] 返回 true。&lt;/li&gt;
&lt;li&gt;-z    检测字符串长度是否为0，为0返回 true。    [ -z $a ] 返回 false。&lt;/li&gt;
&lt;li&gt;-n    检测字符串长度是否为0，不为0返回 true。    [ -z $a ] 返回 true。&lt;/li&gt;
&lt;li&gt;str    检测字符串是否为空，不为空返回 true。    [ $a ] 返回 true。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;文件测试运算符&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;-b file    检测文件是否是块设备文件，如果是，则返回 true。    [ -b $file ] 返回 false。&lt;/li&gt;
&lt;li&gt;-c file    检测文件是否是字符设备文件，如果是，则返回 true。    [ -b $file ] 返回 false。&lt;/li&gt;
&lt;li&gt;-d file    检测文件是否是目录，如果是，则返回 true。    [ -d $file ] 返回 false。&lt;/li&gt;
&lt;li&gt;-f file    检测文件是否是普通文件（既不是目录，也不是设备文件），如果是，则返回 true。    [ -f $file ] 返回 true。&lt;/li&gt;
&lt;li&gt;-g file    检测文件是否设置了 SGID 位，如果是，则返回 true。    [ -g $file ] 返回 false。&lt;/li&gt;
&lt;li&gt;-k file    检测文件是否设置了粘着位(Sticky Bit)，如果是，则返回 true。    [ -k $file ] 返回 false。&lt;/li&gt;
&lt;li&gt;-p file    检测文件是否是具名管道，如果是，则返回 true。    [ -p $file ] 返回 false。&lt;/li&gt;
&lt;li&gt;-u file    检测文件是否设置了 SUID 位，如果是，则返回 true。    [ -u $file ] 返回 false。&lt;/li&gt;
&lt;li&gt;-r file    检测文件是否可读，如果是，则返回 true。    [ -r $file ] 返回 true。&lt;/li&gt;
&lt;li&gt;-w file    检测文件是否可写，如果是，则返回 true。    [ -w $file ] 返回 true。&lt;/li&gt;
&lt;li&gt;-x file    检测文件是否可执行，如果是，则返回 true。    [ -x $file ] 返回 true。&lt;/li&gt;
&lt;li&gt;-s file    检测文件是否为空（文件大小是否大于0），不为空返回 true。    [ -s $file ] 返回 true。&lt;/li&gt;
&lt;li&gt;-e file    检测文件（包括目录）是否存在，如果是，则返回 true。    [ -e $file ] 返回 true。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;注释&quot;&gt;&lt;a href=&quot;#注释&quot; class=&quot;headerlink&quot; title=&quot;注释&quot;&gt;&lt;/a&gt;注释&lt;/h3&gt;&lt;p&gt;#开头的就是注释&lt;br&gt;不过，如果在开发过程中，遇到大段的代码需要临时注释起来，过一会儿又取消注释，怎么办呢？每一行加个#符号太费力了，可以把这一段要注释的代码用一对花括号括起来，定义成一个函数，没有地方调用这个函数，这块代码就不会执行，达到了和注释一样的效果。&lt;/p&gt;
&lt;h3 id=&quot;字符串&quot;&gt;&lt;a href=&quot;#字符串&quot; class=&quot;headerlink&quot; title=&quot;字符串&quot;&gt;&lt;/a&gt;字符串&lt;/h3&gt;&lt;p&gt;字符串是shell编程中最常用最有用的数据类型（除了数字和字符串，也没啥其它类型好用了），字符串可以用单引号，也可以用双引号，也可以不用引号。单双引号的区别跟PHP类似。&lt;br&gt;单引号&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;str=&amp;apos;this is a string&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;单引号字符串的限制：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;单引号里的任何字符都会原样输出，单引号字符串中的变量是无效的；&lt;/li&gt;
&lt;li&gt;单引号字串中不能出现单引号（对单引号使用转义符后也不行）。&lt;br&gt;双引号&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;your_name=&amp;apos;qinjx&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;str=&amp;quot;Hello, I know your are \&amp;quot;$your_name\&amp;quot;! \n&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;双引号的优点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;双引号里可以有变量&lt;/li&gt;
&lt;li&gt;双引号里可以出现转义字符&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;拼接字符串&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;your_name=&amp;quot;qinjx&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;greeting=&amp;quot;hello, &amp;quot;$your_name&amp;quot; !&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;greeting_1=&amp;quot;hello, $&amp;#123;your_name&amp;#125; !&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo $greeting $greeting_1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;获取字符串长度&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;string=&amp;quot;abcd&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo $&amp;#123;#string&amp;#125; #输出 4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;提取子字符串&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;string=&amp;quot;alibaba is a great company&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo $&amp;#123;string:1:4&amp;#125; #输出liba&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;查找子字符串&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;string=&amp;quot;alibaba is a great company&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo `expr index &amp;quot;$string&amp;quot; is`&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;数组&quot;&gt;&lt;a href=&quot;#数组&quot; class=&quot;headerlink&quot; title=&quot;数组&quot;&gt;&lt;/a&gt;数组&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;定义数组&lt;br&gt;在Shell中，用括号来表示数组，数组元素用“空格”符号分割开。定义数组的一般形式为：&lt;blockquote&gt;
&lt;p&gt;array_name=(value1 … valuen)&lt;br&gt;例如：&lt;br&gt;array_name=(value0 value1 value2 value3)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;或者&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;array_name=(&lt;br&gt;value0&lt;br&gt;value1&lt;br&gt;value2&lt;br&gt;value3&lt;br&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;还可以单独定义数组的各个分量：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;array_name[0]=value0&lt;br&gt;array_name[1]=value1&lt;br&gt;array_name[2]=value2&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;可以不使用连续的下标，而且下标的范围没有限制。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;读取数组&lt;br&gt;读取数组元素值的一般格式是：&lt;blockquote&gt;
&lt;p&gt;${array_name[index]}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;valuen=${array_name[2]}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;使用@ 或 * 可以获取数组中的所有元素，例如：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;${array_name[*]}&lt;br&gt;${array_name[@]}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;获取数组长度&lt;br&gt;获取数组长度的方法与获取字符串长度的方法相同，例如：&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# 取得数组元素的个数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;length=$&amp;#123;#array_name[@]&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 或者&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;length=$&amp;#123;#array_name[*]&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 取得数组单个元素的长度&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;lengthn=$&amp;#123;#array_name[n]&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;IF语句&quot;&gt;&lt;a href=&quot;#IF语句&quot; class=&quot;headerlink&quot; title=&quot;IF语句&quot;&gt;&lt;/a&gt;IF语句&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/bin/sh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a=10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;b=20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if [ $a == $b ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;then&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   echo &amp;quot;a is equal to b&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;elif [ $a -gt $b ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;then&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   echo &amp;quot;a is greater than b&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;elif [ $a -lt $b ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;then&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   echo &amp;quot;a is less than b&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;else&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   echo &amp;quot;None of the condition met&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fi&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;CASE语句&quot;&gt;&lt;a href=&quot;#CASE语句&quot; class=&quot;headerlink&quot; title=&quot;CASE语句&quot;&gt;&lt;/a&gt;CASE语句&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;apos;Input a number between 1 to 4&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;apos;Your number is:\c&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;read aNum&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;case $aNum in&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    1)  echo &amp;apos;You select 1&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    2)  echo &amp;apos;You select 2&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    3)  echo &amp;apos;You select 3&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    4)  echo &amp;apos;You select 4&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    *)  echo &amp;apos;You do not select a number between 1 to 4&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;esac&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#!/bin/bash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;option=&amp;quot;$&amp;#123;1&amp;#125;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;case $&amp;#123;option&amp;#125; in&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   -f) FILE=&amp;quot;$&amp;#123;2&amp;#125;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      echo &amp;quot;File name is $FILE&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      ;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   -d) DIR=&amp;quot;$&amp;#123;2&amp;#125;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      echo &amp;quot;Dir name is $DIR&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      ;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   *) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      echo &amp;quot;`basename $&amp;#123;0&amp;#125;`:usage: [-f file] | [-d directory]&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      exit 1 # Command to come out of the program with status 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      ;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;esac&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;FOR语句&quot;&gt;&lt;a href=&quot;#FOR语句&quot; class=&quot;headerlink&quot; title=&quot;FOR语句&quot;&gt;&lt;/a&gt;FOR语句&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;for loop in 1 2 3 4 5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;do&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    echo &amp;quot;The value is: $loop&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;done&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;While语句&quot;&gt;&lt;a href=&quot;#While语句&quot; class=&quot;headerlink&quot; title=&quot;While语句&quot;&gt;&lt;/a&gt;While语句&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;COUNTER=0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;while [ $COUNTER -lt 5 ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;do&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    COUNTER=&amp;apos;expr $COUNTER+1&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    echo $COUNTER&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;done&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;apos;type &amp;lt;CTRL-D&amp;gt; to terminate&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo -n &amp;apos;enter your most liked film: &amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;while read FILM&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;do&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    echo &amp;quot;Yeah! great film the $FILM&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;done&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;函数&quot;&gt;&lt;a href=&quot;#函数&quot; class=&quot;headerlink&quot; title=&quot;函数&quot;&gt;&lt;/a&gt;函数&lt;/h3&gt;&lt;p&gt;函数可以让我们将一个复杂功能划分成若干模块，让程序结构更加清晰，代码重复利用率更高。像其他编程语言一样，Shell 也支持函数。Shell 函数必须先定义后使用。&lt;/p&gt;
&lt;p&gt;Shell 函数的定义格式如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;function_name () {&lt;br&gt;    list of commands&lt;br&gt;    [ return value ]&lt;br&gt;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果你愿意，也可以在函数名前加上关键字 function：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;function function_name () {&lt;br&gt;    list of commands&lt;br&gt;    [ return value ]&lt;br&gt;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;函数返回值，可以显式增加return语句；如果不加，会将最后一条命令运行结果作为返回值。&lt;br&gt;Shell 函数返回值只能是整数，一般用来表示函数执行成功与否，0表示成功，其他值表示失败。如果 return 其他数据，比如一个字符串，往往会得到错误提示：“numeric argument required”。&lt;br&gt;如果一定要让函数返回字符串，那么可以先定义一个变量，用来接收函数的计算结果，脚本在需要的时候访问这个变量来获得函数返回值。&lt;br&gt;&lt;em&gt;调用函数只需要给出函数名，不需要加括号。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;像删除变量一样，删除函数也可以使用 unset 命令，不过要加上 .f 选项，如下所示：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;$unset .f function_name&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果你希望直接从终端调用函数，可以将函数定义在主目录下的 .profile 文件，这样每次登录后，在命令提示符后面输入函数名字就可以立即调用。&lt;/p&gt;
&lt;p&gt;在Shell中，调用函数时可以向其传递参数。在函数体内部，通过 $n 的形式来获取参数的值，例如，$1表示第一个参数，$2表示第二个参数…&lt;br&gt;注意，$10 不能获取第十个参数，获取第十个参数需要${10}。当n&amp;gt;=10时，需要使用${n}来获取参数。&lt;/p&gt;
&lt;p&gt;$#    传递给函数的参数个数。&lt;br&gt;$&lt;em&gt;    显示所有传递给函数的参数。&lt;br&gt;$@    与$&lt;/em&gt;相同，但是略有区别，请查看Shell特殊变量。&lt;br&gt;$?    函数的返回值。&lt;/p&gt;
&lt;h3 id=&quot;重定向&quot;&gt;&lt;a href=&quot;#重定向&quot; class=&quot;headerlink&quot; title=&quot;重定向&quot;&gt;&lt;/a&gt;重定向&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;command &amp;gt; file    将输出重定向到 file。&lt;/li&gt;
&lt;li&gt;command &amp;lt; file    将输入重定向到 file。&lt;/li&gt;
&lt;li&gt;command &amp;gt;&amp;gt; file    将输出以追加的方式重定向到 file。&lt;/li&gt;
&lt;li&gt;n &amp;gt; file    将文件描述符为 n 的文件重定向到 file。&lt;/li&gt;
&lt;li&gt;n &amp;gt;&amp;gt; file    将文件描述符为 n 的文件以追加的方式重定向到 file。&lt;/li&gt;
&lt;li&gt;n &amp;gt;&amp;amp; m    将输出文件 m 和 n 合并。&lt;/li&gt;
&lt;li&gt;n &amp;lt;&amp;amp; m    将输入文件 m 和 n 合并。&lt;/li&gt;
&lt;li&gt;&amp;lt;&amp;lt; tag    将开始标记 tag 和结束标记 tag 之间的内容作为输入。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;/dev/null 文件&lt;/p&gt;
&lt;p&gt;如果希望执行某个命令，但又不希望在屏幕上显示输出结果，那么可以将输出重定向到 /dev/null：&lt;br&gt;$ command &amp;gt; /dev/null&lt;br&gt;/dev/null 是一个特殊的文件，写入到它的内容都会被丢弃；如果尝试从该文件读取内容，那么什么也读不到。但是 /dev/null 文件非常有用，将命令的输出重定向到它，会起到”禁止输出“的效果。&lt;br&gt;如果希望屏蔽 stdout 和 stderr，可以这样写：&lt;br&gt;$ command &amp;gt; /dev/null 2&amp;gt;&amp;amp;1&lt;/p&gt;
&lt;h3 id=&quot;文件包含&quot;&gt;&lt;a href=&quot;#文件包含&quot; class=&quot;headerlink&quot; title=&quot;文件包含&quot;&gt;&lt;/a&gt;文件包含&lt;/h3&gt;&lt;p&gt;像其他语言一样，Shell 也可以包含外部脚本，将外部脚本的内容合并到当前脚本。&lt;/p&gt;
&lt;p&gt;Shell 中包含脚本可以使用：&lt;br&gt;. filename&lt;br&gt;或&lt;br&gt;source filename&lt;br&gt;两种方式的效果相同，简单起见，一般使用点号(.)，但是注意点号(.)和文件名中间有一空格。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;入门参考&lt;a href=&quot;http://c.biancheng.net/cpp/shell/&quot;&gt;Linux Shell脚本教程：30分钟玩转Shell脚本编程&lt;/a&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Shell本身是一个用C语言编写的程序，是用户使用Unix/Linux的桥梁。&lt;br&gt;Shell既是一种命令语言，又是一种程序设计语言。作为命令语言，交互式的解释和执行用户输入的命令;作为程序设计语言，定义了各种变量和参数，并提供了许多在高级语言中才具有的控制结构，包括循环和分支。&lt;br&gt;它虽然不是Unix/Linux系统内核的一部分，但它调用了系统核心的大部分功能来执行程序、建立文件并以并行的方式协调各个程序的运行。因此，对于用户来说，shell是最重要的实用程序，深入了解和熟练掌握shell的特性极其使用方法，是用好Unix/Linux系统的关键。&lt;br&gt;可以说，shell使用的熟练程度反映了用户对Unix/Linux使用的熟练程度。&lt;br&gt;Shell脚本是解释型的，不需要编译。可通过交互式(Interactive)和批处理(Batch)两种方式执行。&lt;br&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://jacean.github.io/tags/Linux/"/>
    
      <category term="Shell" scheme="http://jacean.github.io/tags/Shell/"/>
    
  </entry>
  
  <entry>
    <title>windows下Ubuntu虚拟机安装</title>
    <link href="http://jacean.github.io/2016/03/15/windows%E4%B8%8BUbuntu%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85/"/>
    <id>http://jacean.github.io/2016/03/15/windows下Ubuntu虚拟机安装/</id>
    <published>2016-03-15T08:57:59.000Z</published>
    <updated>2016-03-15T09:16:34.317Z</updated>
    
    <content type="html">&lt;p&gt;虽然一直是win+Ubuntu双系统，但是工作环境一直在win下，为了方便就给Ubuntu装了个虚拟机。使用VirtualBox。&lt;br&gt;记录一些问题和过程以便日后查找。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;virtualBox虚拟机不能选择64位系统&quot;&gt;&lt;a href=&quot;#virtualBox虚拟机不能选择64位系统&quot; class=&quot;headerlink&quot; title=&quot;virtualBox虚拟机不能选择64位系统:&quot;&gt;&lt;/a&gt;virtualBox虚拟机不能选择64位系统:&lt;/h2&gt;&lt;p&gt;这可能是因为windows开启了hyper-V.在windows功能中关闭就可以了.&lt;br&gt;virtualbox下安装.5.0.10，主程序安装完毕后记得安装扩展包才行.&lt;/p&gt;
&lt;h2 id=&quot;ssh登陆virtualbox安装的Ubuntu的同时也能连上互联网&quot;&gt;&lt;a href=&quot;#ssh登陆virtualbox安装的Ubuntu的同时也能连上互联网&quot; class=&quot;headerlink&quot; title=&quot;ssh登陆virtualbox安装的Ubuntu的同时也能连上互联网&quot;&gt;&lt;/a&gt;ssh登陆virtualbox安装的Ubuntu的同时也能连上互联网&lt;/h2&gt;&lt;p&gt;在全局设定中添加网卡,然后给ubuntu启用第二张网卡.第一张还是nat,第二张设置成&lt;br&gt;仅主机(Host-Only)适配器，选择新添加的网卡。&lt;br&gt;！&lt;a href=&quot;http://7xrtyi.com1.z0.glb.clouddn.com/hexoBlog_img_virtualBox-wlan-1.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;/a&gt;&lt;br&gt;然后启动ubuntu来设置网卡。&lt;br&gt;但是，在我添加完后要启动ubuntu时报错了。&lt;br&gt;&lt;img src=&quot;http://7xrtyi.com1.z0.glb.clouddn.com/hexoBlog_img_virtualBox-2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Failed to open/create the internal network ‘HostInterfaceNetworking-VirtualBox Host-Only Ethernet Adapter #3’ (VERR_INTNET_FLT_IF_NOT_FOUND).&lt;br&gt;Failed to attach the network LUN (VERR_INTNET_FLT_IF_NOT_FOUND).&lt;br&gt;错误提示如上。&lt;br&gt;解决办法，在&lt;a href=&quot;http://stackoverflow.com/questions/33725779/failed-to-open-create-the-internal-network-vagrant-on-windows10&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;stackoverflow&lt;/a&gt;上找到的。&lt;br&gt;&lt;img src=&quot;http://7xrtyi.com1.z0.glb.clouddn.com/hexoBlog_img_virtualBox-3.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;好可怜，我想评论感谢人家都不行。&lt;br&gt;网络设置参考&lt;a href=&quot;http://www.cnblogs.com/leoyoungblog/p/4927591.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;狼来了&lt;/a&gt;&lt;br&gt;-全局设定-&amp;gt;网络-&amp;gt;添加host only网络&lt;br&gt;-设置host only网络IP&lt;br&gt;&lt;img src=&quot;http://7xrtyi.com1.z0.glb.clouddn.com/hexoBlog_img_VirtualBox-4.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;-虚拟机使用2块网卡&lt;br&gt;网卡1：NAT网络地址转换&lt;br&gt;&lt;img src=&quot;http://7xrtyi.com1.z0.glb.clouddn.com/hexoBlog_img_virtualBox-5.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;网卡2：host only（为便于分辨，可选用与网卡1不同的控制芯片）&lt;br&gt;&lt;img src=&quot;http://7xrtyi.com1.z0.glb.clouddn.com/hexoBlog_img_virtualbox-6.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;虚拟机内设置网卡2静态IP，与主机host only网卡相同网段&lt;br&gt;&lt;img src=&quot;http://7xrtyi.com1.z0.glb.clouddn.com/hexoBlog_img_virtualbox-7.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;添加ssh服务：在Ubuntu终端中输入命令：sudo apt-get install ssh&lt;br&gt;添加vsftpd服务：在Ubuntu终端中输入命令：sudo apt-get install vsftpd&lt;br&gt;Netstat -tlp&lt;br&gt;查看状态&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;secureCRT中文乱码&quot;&gt;&lt;a href=&quot;#secureCRT中文乱码&quot; class=&quot;headerlink&quot; title=&quot;secureCRT中文乱码&quot;&gt;&lt;/a&gt;secureCRT中文乱码&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xrtyi.com1.z0.glb.clouddn.com/hexoBlog_img_virtualbox-8.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;选项-&amp;gt;会话选项&lt;br&gt;&lt;img src=&quot;http://7xrtyi.com1.z0.glb.clouddn.com/hexoBlog_img_virtualbox-9.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;外观-&amp;gt;字符编码，设为utf-8就可以了。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;虽然一直是win+Ubuntu双系统，但是工作环境一直在win下，为了方便就给Ubuntu装了个虚拟机。使用VirtualBox。&lt;br&gt;记录一些问题和过程以便日后查找。&lt;br&gt;
    
    </summary>
    
    
      <category term="Ubuntu" scheme="http://jacean.github.io/tags/Ubuntu/"/>
    
      <category term="VirtualBox" scheme="http://jacean.github.io/tags/VirtualBox/"/>
    
  </entry>
  
  <entry>
    <title>windows文件夹拒绝访问,特殊权限</title>
    <link href="http://jacean.github.io/2016/03/15/windows%E6%96%87%E4%BB%B6%E5%A4%B9%E6%8B%92%E7%BB%9D%E8%AE%BF%E9%97%AE-%E7%89%B9%E6%AE%8A%E6%9D%83%E9%99%90/"/>
    <id>http://jacean.github.io/2016/03/15/windows文件夹拒绝访问-特殊权限/</id>
    <published>2016-03-15T08:50:25.000Z</published>
    <updated>2016-03-15T08:53:26.507Z</updated>
    
    <content type="html">&lt;p&gt;windows在安装一些比较涉及底层的软件的时候，或是一些缓存文件，会对一些文件给予特殊权限，当我们想主动删除的时候就会遇到各种问题。这个时候，可以通过查看属性，来观察其所有者来重新设置权限，从而删除。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;有些文件或文件夹只有everyone账户的权限,而这个权限因为继承关系不能被删除,那么就在安全里面给他添加个当前账户,设为完全控制的权限,然后删除即可&lt;br&gt;之前有个cygwin64的程序安装,结果卸载后还有残余文件夹cygwin64删除不掉,总是拒绝访问.因为只有1m多所以也就没管.但今天实在是看不下去了,就想删掉.&lt;br&gt;网上有很多删除顽固文件的方法,比如批处理,dos,添加压缩文件然后选择删除源文件,但这的反应都是拒绝访问,原因就是这个文件夹有特殊权限.&lt;br&gt;右键,属性,安全.&lt;br&gt;发现里面有个特殊的账户,而且拥有这个文件夹的特殊权限,虽然我是管理员登陆,但是仍旧没法给自己添加这种特殊权限.&lt;br&gt;自己原本是微软账户登录,发现没法更改权限,就注销成了本地账户,然后在安全里更改权限.&lt;br&gt;先是删除那个奇怪的拥有特殊权限的账户,然后给其他账户加上完全控制的权限,就可以删除了.&lt;br&gt;有些说法是,特殊权限是由于父文件夹和子文件的权限不一致造成的,但我一个个更改权限发现所有文件和文件夹的权限都是那个特殊账户的.&lt;/p&gt;
&lt;p&gt;所以我的做法是,从最底层的文件开始删除账户,更改权限,然后删除就ok了.这样一个个的删除可以,或是可以把权限都改完后删除文件夹就行.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;windows在安装一些比较涉及底层的软件的时候，或是一些缓存文件，会对一些文件给予特殊权限，当我们想主动删除的时候就会遇到各种问题。这个时候，可以通过查看属性，来观察其所有者来重新设置权限，从而删除。&lt;br&gt;
    
    </summary>
    
    
      <category term="other" scheme="http://jacean.github.io/tags/other/"/>
    
      <category term="windows" scheme="http://jacean.github.io/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>浏览器首页被hao.qquu8.com/tn=……篡改</title>
    <link href="http://jacean.github.io/2016/03/15/%E6%B5%8F%E8%A7%88%E5%99%A8%E9%A6%96%E9%A1%B5%E8%A2%ABhao-qquu8-com-tn-%E2%80%A6%E2%80%A6%E7%AF%A1%E6%94%B9/"/>
    <id>http://jacean.github.io/2016/03/15/浏览器首页被hao-qquu8-com-tn-……篡改/</id>
    <published>2016-03-15T08:38:58.000Z</published>
    <updated>2016-03-15T08:49:58.692Z</updated>
    
    <content type="html">&lt;p&gt;有时候装了什么奇怪的软件可能会使自己的浏览器首页被莫名其妙的篡改。比如不干净的激活软件，或是其他下载工具。&lt;br&gt;&lt;a href=&quot;http://www.techweb.com.cn/internet/2015-07-20/2177852.shtml&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;参考文章&lt;/a&gt;,有几张图借用了参考文章里的，若有侵权请提出，立刻更改。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;刚开始,我进入注册表搜索hao123,hao.qquu8.com，把能删的都删完了，但是并没有什么卵用。后来照下边的方法才弄好.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;第一步，首先在桌面和开始菜单里查看所有IE、Chrome浏览器快捷方式属性，把目标栏里的“&lt;a href=&quot;http://hao.qquu8.com”删掉；&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://hao.qquu8.com”删掉；&lt;/a&gt;&lt;br&gt;&lt;img src=&quot;http://7xrtyi.com1.z0.glb.clouddn.com/hexoBlog_img_other-index-changed-1.jpg&quot; alt=&quot;Chrome浏览器快捷方式属性&quot;&gt;&lt;br&gt;我的这里是正常的，因为是win10，所以在开始屏幕那里右键文件位置（C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Google Chrome），那里的谷歌是好使的。&lt;br&gt;但是IE就发现问题了（C:\Users\XX\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Accessories），在快捷方式上果然有问题，怒而删之。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;em&gt;别忘了进入C:\Users\你的用户名\AppData\Roaming\Microsoft\Internet Explorer\Quick Launch文件夹，同样是查看IE和Chrome的属性，然后把其中的“&lt;a href=&quot;http://hao.qquu8.com”删掉。&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://hao.qquu8.com”删掉。&lt;/a&gt;&lt;/em&gt;&lt;br&gt;我是在这里发现了Chrome的问题，原来在这会有Chrome的快捷方式，而且还出错了，再次怒而删之！！！然后好了。&lt;br&gt;&lt;img src=&quot;http://7xrtyi.com1.z0.glb.clouddn.com/hexoBlog_img_other-index-changed-2.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;我在这一步就已经成功了.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;第二步： 按一下组合键“Win+R”调出运行命令框。在打开栏中键入regedit.exe，回车，打开注册表编辑器（若弹出用户账户控制窗口，请点击 是 继续），依次定位到：&lt;br&gt;HKEY_CURRENT_USER\Software\Policies\Microsoft&lt;br&gt;展开Microsoft，查看其下是否包含子项 Internet Explorer 若有，删除（右击Internet Explorer，选择“删除”）。&lt;br&gt;然后再依次定位到以下3个注册表项。单击Main，查看右边细节窗口中[Default_Page_URL]值和[Start Page]值是否有异常。如果被修改了，请根据自己的需要改回（右击键值，选择“修改”进行更改）。&lt;br&gt;HKEY_CURRENT&lt;em&gt;USER\SOFTWARE\Microsoft\Internet Explorer\Main&lt;br&gt;HKEY&lt;/em&gt; LOCAL_MACHINE\SOFTWARE\Microsoft\Internet Explorer\Main&lt;br&gt;HKEY_USERS\Default\Software\Microsoft\Internet Explorer\Main&lt;/li&gt;
&lt;li&gt;第三步：&lt;br&gt;完成以上工作后，将系统设置为“显示隐藏的文件、文件夹”，然后在C:\Windows目录下找到OEM文件（或文件夹），将他们删除。&lt;br&gt;这两步以防万一我也做了一遍，但是并没有遇到上面所说的情况，可能是之前删注册表给搞干净了。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;有些时候，任务栏的图标会被打上非法链接。可以在删除开始菜单的属性里的东西后取消固定后重新固定。&lt;br&gt;本质方法如下：&lt;br&gt;C:\Users\wanja\AppData\Roaming\Microsoft\Internet Explorer\Quick Launch\User Pinned\TaskBar&lt;br&gt;在这个目录下是任务栏快捷方式。属性，删除恶意指向就行。 &lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;有时候装了什么奇怪的软件可能会使自己的浏览器首页被莫名其妙的篡改。比如不干净的激活软件，或是其他下载工具。&lt;br&gt;&lt;a href=&quot;http://www.techweb.com.cn/internet/2015-07-20/2177852.shtml&quot;&gt;参考文章&lt;/a&gt;,有几张图借用了参考文章里的，若有侵权请提出，立刻更改。&lt;br&gt;
    
    </summary>
    
    
      <category term="Other" scheme="http://jacean.github.io/tags/Other/"/>
    
  </entry>
  
  <entry>
    <title>onenote笔记导出成markdown发布到Hexo</title>
    <link href="http://jacean.github.io/2016/03/15/onenote%E7%AC%94%E8%AE%B0%E5%AF%BC%E5%87%BA%E6%88%90markdown%E5%8F%91%E5%B8%83%E5%88%B0Hexo/"/>
    <id>http://jacean.github.io/2016/03/15/onenote笔记导出成markdown发布到Hexo/</id>
    <published>2016-03-15T08:32:17.000Z</published>
    <updated>2016-03-15T08:38:29.373Z</updated>
    
    <content type="html">&lt;p&gt;首先说明一点，就是我并没有找到可以直接由onenote笔记转换成markdown的方式。许多方法都是通过迂回策略，也就是先将onenote导出word，再把word转换成HTML，然后再转成markdown。&lt;br&gt;虽然有些麻烦，但还是挺好用的。需要用到unoconv和pandoc。原文&lt;a href=&quot;http://wenzhixin.net.cn/2014/01/03/convert_word_to_markdown&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ubuntu 下将 word 文件转换为 markdown&lt;/a&gt;&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;主要介绍如何将 word 文件转换为 markdown 文件。&lt;br&gt;第一步：安装 unoconv 和 pandoc&lt;br&gt;&lt;em&gt;sudo apt-get install unoconv pandoc&lt;/em&gt;&lt;br&gt;第二步：将 word 文件转换 html&lt;br&gt;&lt;em&gt;unoconv -f html -o file.html file.docx&lt;/em&gt;&lt;br&gt;-f html：指定我们要转为 html 格式（format）&lt;br&gt;-o file.html：表示输出（output）的文件名为 file.html&lt;br&gt;file.docx：表示要转换的文件为 file.docx&lt;br&gt;第三步：将 html 转换为 markdown&lt;br&gt;&lt;em&gt;pandoc -f html -t markdown -o file.md file.html&lt;/em&gt;&lt;br&gt;-f html：指定我们要从什么文件（from）转换&lt;br&gt;-t markdown：指定我们要转为 markdown 格式（to）&lt;br&gt;-o file.md：表示输出（output）的文件名为 file.md&lt;br&gt;file.docx：表示要转换的文件为 file.html&lt;br&gt;第四步：将图片拷贝到 images 中&lt;br&gt;转换出来后会有很多图片，需要将图片拷贝到 images 文件夹中， 然后在替换 md 中的 ![]( 为 ![(images/ 即可。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;但是我转换后并没有出现image，具体看代码，发现转换后的html里引用的文件都成了直接的编码表示。所以可以在网页中另存为图片了。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;首先说明一点，就是我并没有找到可以直接由onenote笔记转换成markdown的方式。许多方法都是通过迂回策略，也就是先将onenote导出word，再把word转换成HTML，然后再转成markdown。&lt;br&gt;虽然有些麻烦，但还是挺好用的。需要用到unoconv和pandoc。原文&lt;a href=&quot;http://wenzhixin.net.cn/2014/01/03/convert_word_to_markdown&quot;&gt;ubuntu 下将 word 文件转换为 markdown&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="Hexo" scheme="http://jacean.github.io/tags/Hexo/"/>
    
      <category term="Ubuntu" scheme="http://jacean.github.io/tags/Ubuntu/"/>
    
      <category term="OneNote" scheme="http://jacean.github.io/tags/OneNote/"/>
    
  </entry>
  
  <entry>
    <title>C#设置ListView行高</title>
    <link href="http://jacean.github.io/2016/03/15/C-%E8%AE%BE%E7%BD%AEListView%E8%A1%8C%E9%AB%98/"/>
    <id>http://jacean.github.io/2016/03/15/C-设置ListView行高/</id>
    <published>2016-03-15T08:28:01.000Z</published>
    <updated>2016-03-15T08:29:59.456Z</updated>
    
    <content type="html">&lt;p&gt;listView的行高没法单独设置，可以迂回策略，通过在里面放一个imageList来把行高撑大。&lt;br&gt;代码如下：&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ImageList imgList = new ImageList();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;imgList.ImageSize = new Size(1, LV_NOW_ROWHEIGHT);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;lv.SmallImageList = imgList;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样就可以了，通过调整LV_NOW_ROWHEIGHT来调整行高.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;listView的行高没法单独设置，可以迂回策略，通过在里面放一个imageList来把行高撑大。&lt;br&gt;代码如下：&lt;br&gt;
    
    </summary>
    
    
      <category term="C#" scheme="http://jacean.github.io/tags/C/"/>
    
      <category term="ListView" scheme="http://jacean.github.io/tags/ListView/"/>
    
  </entry>
  
  <entry>
    <title>C#利用反射,遍历获得一个类的所有属性名</title>
    <link href="http://jacean.github.io/2016/03/15/C-%E5%88%A9%E7%94%A8%E5%8F%8D%E5%B0%84-%E9%81%8D%E5%8E%86%E8%8E%B7%E5%BE%97%E4%B8%80%E4%B8%AA%E7%B1%BB%E7%9A%84%E6%89%80%E6%9C%89%E5%B1%9E%E6%80%A7%E5%90%8D/"/>
    <id>http://jacean.github.io/2016/03/15/C-利用反射-遍历获得一个类的所有属性名/</id>
    <published>2016-03-15T08:15:26.000Z</published>
    <updated>2016-03-15T08:26:28.678Z</updated>
    
    <content type="html">&lt;p&gt;通过反射是可以完全获取一个对象的所有可取属性，并利用这些属性实现更多操作，比如对象的序列化之类。&lt;br&gt;代码如下&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;//传入类的实例&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public static PropertyInfo[] getPropertyInfo&amp;lt;T&amp;gt;(T c)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;PropertyInfo[] ps = null;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;try&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Type type = typeof(T);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;T obj = Activator.CreateInstance(type);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ps = type.GetProperties((BindingFlags.Public | BindingFlags.Instance));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;catch (System.Exception ex)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;         &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;return ps;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//传入类的类型&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//使用&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; PropertyInfo[] pis= actFunc.getPropertyInfo(typeof(property))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; //方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; public static PropertyInfo[] getPropertyInfo(Type c)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; PropertyInfo[] ps = null;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; try&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; //Type type = typeof(c);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; object obj = Activator.CreateInstance(c);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; ps = c.GetProperties((BindingFlags.Public | BindingFlags.Instance));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; catch (System.Exception ex)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#123;         &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; return ps;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/litian/articles/2002435.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;参考文章&lt;/a&gt;&lt;br&gt;&amp;gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;private void button1_Click(object sender, EventArgs e)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          Type t = typeof(System.Drawing.Color);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          string className = t.Name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          MessageBox.Show(className);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          //获取所有方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          System.Reflection.MethodInfo[] methods = t.GetMethods();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          this.textBox1.Text = &amp;quot;&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          foreach (System.Reflection.MethodInfo method in methods)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              this.textBox1.Text += method.Name + System.Environment.NewLine;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          //获取所有成员&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          System.Reflection.MemberInfo[] members = t.GetMembers();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          //获取所有属性&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          System.Reflection.PropertyInfo[] properties = t.GetProperties();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          foreach (System.Reflection.PropertyInfo property in properties)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              this.lstColors.Items.Add(property.Name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      private void lstColors_SelectedIndexChanged(object sender, EventArgs e)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         this.pictureBox1.BackColor=  System.Drawing.Color.FromName(((ListBox)sender).Text);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;通过反射是可以完全获取一个对象的所有可取属性，并利用这些属性实现更多操作，比如对象的序列化之类。&lt;br&gt;代码如下&lt;br&gt;
    
    </summary>
    
    
      <category term="C#" scheme="http://jacean.github.io/tags/C/"/>
    
      <category term="反射" scheme="http://jacean.github.io/tags/%E5%8F%8D%E5%B0%84/"/>
    
  </entry>
  
  <entry>
    <title>无法打开物理文件 操作系统错误 5:拒绝访问 SQL Sever</title>
    <link href="http://jacean.github.io/2016/03/15/%E6%97%A0%E6%B3%95%E6%89%93%E5%BC%80%E7%89%A9%E7%90%86%E6%96%87%E4%BB%B6-%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E9%94%99%E8%AF%AF-5-%E6%8B%92%E7%BB%9D%E8%AE%BF%E9%97%AE-SQL-Sever/"/>
    <id>http://jacean.github.io/2016/03/15/无法打开物理文件-操作系统错误-5-拒绝访问-SQL-Sever/</id>
    <published>2016-03-15T08:12:52.000Z</published>
    <updated>2016-03-15T08:14:21.691Z</updated>
    
    <content type="html">&lt;p&gt;今天分离附加数据库，分离出去然后再附加，没有问题。但是一把.mdf文件拷到其它文件夹下就出错，错误如下：&lt;br&gt;无法打开物理文件 “E:\db\homework.mdf”。操作系统错误 5:”5(拒绝访问。)”。 (Microsoft SQL Server，错误: 5120)&lt;/p&gt;
&lt;p&gt;问了下朋友，朋友说找到.mdf文件改文件的安全权限。&lt;/p&gt;
&lt;p&gt;搞了半天才明白，原来是找到.mdf文件，右键-&amp;gt;属性-&amp;gt;安全-&amp;gt;选择当前用户-&amp;gt;编辑-&amp;gt;完全控制。&lt;/p&gt;
&lt;p&gt;如果还出现这种情况，记得把.log文件的安全权限也改了。&lt;br&gt;&lt;a href=&quot;http://blog.sina.com.cn/s/blog_7e0127220101b62j.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;参考文章&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;今天分离附加数据库，分离出去然后再附加，没有问题。但是一把.mdf文件拷到其它文件夹下就出错，错误如下：&lt;br&gt;无法打开物理文件 “E:\db\homework.mdf”。操作系统错误 5:”5(拒绝访问。)”。 (Microsoft SQL Server，错误: 5120
    
    </summary>
    
    
      <category term="SQL Server" scheme="http://jacean.github.io/tags/SQL-Server/"/>
    
  </entry>
  
  <entry>
    <title>自定义含ListView控件获取listView的滚动条事件</title>
    <link href="http://jacean.github.io/2016/03/15/%E8%87%AA%E5%AE%9A%E4%B9%89%E5%90%ABListView%E6%8E%A7%E4%BB%B6%E8%8E%B7%E5%8F%96listView%E7%9A%84%E6%BB%9A%E5%8A%A8%E6%9D%A1%E4%BA%8B%E4%BB%B6/"/>
    <id>http://jacean.github.io/2016/03/15/自定义含ListView控件获取listView的滚动条事件/</id>
    <published>2016-03-15T08:07:26.000Z</published>
    <updated>2016-03-15T08:12:06.983Z</updated>
    
    <content type="html">&lt;p&gt;自定义组合控件，内含有ListView控件，需要获取Listview的滚动条事件来进行操作。&lt;br&gt;事件外传，具体实现代码如下。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;‘’’C#&lt;br&gt;public partial class myListview : ListView&lt;br&gt;{&lt;br&gt;public event ScrollEventHandler Scroll;&lt;br&gt;private const int WM_HSCROLL = 0x114;&lt;br&gt;private const int WM_VSCROLL = 0x115;&lt;br&gt;private const int MOUSEWHEEL = 0x020A;&lt;br&gt;private const int KEYDOWN = 0x0100;&lt;/p&gt;
&lt;p&gt;protected virtual void OnScroll(ScrollEventArgs e)&lt;br&gt;{&lt;br&gt;ScrollEventHandler handler = this.Scroll;&lt;br&gt;if (handler != null)&lt;br&gt;{&lt;br&gt;handler(this, e);&lt;br&gt;}&lt;br&gt;}&lt;br&gt;protected override void WndProc(ref Message m)&lt;br&gt;{&lt;br&gt;base.WndProc(ref m);&lt;br&gt;if (m.Msg == MOUSEWHEEL || m.Msg == WM_VSCROLL || (m.Msg == KEYDOWN &amp;amp;&amp;amp; (m.WParam == (IntPtr)40 || m.WParam == (IntPtr)35)))&lt;br&gt;{&lt;br&gt;// Trap WM_VSCROLL&lt;br&gt;OnScroll(new ScrollEventArgs((ScrollEventType)(m.WParam.ToInt32() &amp;amp; 0xffff), 0));&lt;br&gt;}&lt;br&gt;}&lt;br&gt;}&lt;/p&gt;
&lt;p&gt;```&lt;br&gt;自定义控件的事件外传是做好自定义控件的关键，才能更好的实现逻辑。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;自定义组合控件，内含有ListView控件，需要获取Listview的滚动条事件来进行操作。&lt;br&gt;事件外传，具体实现代码如下。&lt;br&gt;
    
    </summary>
    
    
      <category term="C#" scheme="http://jacean.github.io/tags/C/"/>
    
      <category term="自定义控件" scheme="http://jacean.github.io/tags/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A7%E4%BB%B6/"/>
    
      <category term="ListView" scheme="http://jacean.github.io/tags/ListView/"/>
    
  </entry>
  
  <entry>
    <title>DocX添加多级标题</title>
    <link href="http://jacean.github.io/2016/03/15/DocX%E6%B7%BB%E5%8A%A0%E5%A4%9A%E7%BA%A7%E6%A0%87%E9%A2%98/"/>
    <id>http://jacean.github.io/2016/03/15/DocX添加多级标题/</id>
    <published>2016-03-15T07:55:51.000Z</published>
    <updated>2016-03-15T08:05:30.572Z</updated>
    
    <content type="html">&lt;p&gt;DocX实现了很多对word的需求，即使是没有直接提供的方法，也可以通过自定义来实现。&lt;br&gt;如果要添加多级标题的话，实质上就是添加一个段落，只是设置字体格式不同而已。&lt;br&gt;自定义扩展函数来实现此功能.&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;定义扩展函数添加多级标题&quot;&gt;&lt;a href=&quot;#定义扩展函数添加多级标题&quot; class=&quot;headerlink&quot; title=&quot;定义扩展函数添加多级标题&quot;&gt;&lt;/a&gt;定义扩展函数添加多级标题&lt;/h2&gt;&lt;p&gt;实现方法是给Paragraph增加一个扩展函数来设置它的格式。比如Heading1,Heading2之类。&lt;br&gt;我的插入段函数有两个重载，一个是插入正常文本，一个是插入标题，需要提供标题级数。&lt;br&gt;还有一点需要注意的是，如果在paragraph.append(content)，改成appendline的话，会多出现换行符，尽量别用就好。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public static void insertParagraph(string docx,string content,int level)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;using (DocX document = DocX.Load(docx))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; Paragraph pTitle = document.InsertParagraph();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; pTitle.Append(content).Heading(level).Color(Color.Black);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; document.Save();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public static void insertParagraph(string docx, string content)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; using (DocX document = DocX.Load(docx))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; Paragraph pTitle = document.InsertParagraph();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; pTitle.Append(content);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; document.Save();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; public static Paragraph Heading(this Paragraph paragraph,int level)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; paragraph.StyleName = &amp;quot;Heading&amp;quot;+level.ToString();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; paragraph.ListItemType = ListItemType.Numbered;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; return paragraph;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;插入效果图&lt;br&gt;&lt;img src=&quot;http://7xrtyi.com1.z0.glb.clouddn.com/hexoBlog_img_DocX-mutilevel-title.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;DocX实现了很多对word的需求，即使是没有直接提供的方法，也可以通过自定义来实现。&lt;br&gt;如果要添加多级标题的话，实质上就是添加一个段落，只是设置字体格式不同而已。&lt;br&gt;自定义扩展函数来实现此功能.&lt;br&gt;
    
    </summary>
    
    
      <category term="C#" scheme="http://jacean.github.io/tags/C/"/>
    
      <category term="DocX" scheme="http://jacean.github.io/tags/DocX/"/>
    
  </entry>
  
  <entry>
    <title>DocX给word添加目录TOC</title>
    <link href="http://jacean.github.io/2016/03/15/DocX%E7%BB%99word%E6%B7%BB%E5%8A%A0%E7%9B%AE%E5%BD%95TOC/"/>
    <id>http://jacean.github.io/2016/03/15/DocX给word添加目录TOC/</id>
    <published>2016-03-15T07:15:55.000Z</published>
    <updated>2016-03-15T07:54:14.686Z</updated>
    
    <content type="html">&lt;p&gt;DocX是一款开源的C#操作word的库，使用方便，也很轻巧，比起微软的interop使用体验要好多了。可以在不打开word的情况下直接修改word，可以完成日常所需的操作，是实现批量操作word的好帮手。&lt;br&gt;我这里主要是针对给word添加目录时遇到的一些问题记录下。刚要做目录的时候，我就想DocX应该提供了这个方面的函数。于是我就在讨论区搜索，看看别人是怎么用的。我搜索了catalog; catalogue; list; contents;，但是都没有和目录有关的东西，搞得我以为没提供，于是就又各种搜索，什么list之类的，搜着搜着就找到了一篇。&lt;br&gt;说是需要下载一个patch，但是不造在哪。还有的提供了利用其他的xml布局来帮助生成目录的。这些都不用管了，我用的是在DocX.cs里的源码里直接修改下的好方法。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://docx.codeplex.com/discussions/528384&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;答案在DocX的codeplex里&lt;/a&gt;,抄录如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Hello together, &lt;/p&gt;
&lt;p&gt;i’m sorry, i didn’t like your solution proposals as I use docx to not have a need to include the open sdk. (But it took me to this solution 95% of the way, so thanks!) &lt;/p&gt;
&lt;p&gt;I found out DocX can actually do that easily with just a few minor changes to the code. &lt;/p&gt;
&lt;p&gt;To accomplish that goal add the following lines to DocX.cs into the class:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// Activate Updating Fields on Open&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/// &amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public void UpdateFieldsOnOpen()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        XElement element = new XElement(XName.Get(&amp;quot;updateFields&amp;quot;, DocX.w.NamespaceName));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        element.Add(new XAttribute(XName.Get(&amp;quot;val&amp;quot;, DocX.w.NamespaceName), &amp;quot;true&amp;quot;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        settings.Root.AddFirst(element);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Finally you need to modify the save process slightly because docx reloads the settings part directly before saving the document.&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt; // Comment out or remove those lines:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- using (TextReader tr = new StreamReader(settingsPart.GetStream()))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;- settings = XDocument.Load(tr);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// Insert this instead:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+ if (settings == null )&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+ &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+ using (TextReader tr = new StreamReader(settingsPart.GetStream()))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+ settings = XDocument.Load(tr);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;+ &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Use these lines to use the new option:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;docx.UpdateFieldsOnOpen();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;docx.Save();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;As a result, word will tell you that some fields need updating when you open the document.&lt;br&gt;Well after you bypassed that new preview mode that they put into word to complicate usage. Which i know everybody at my workplace loves very much.&lt;br&gt;It works on my computer :).&lt;br&gt;I hope it will help YOU ALL TOO since you are great people that deserve TOCs. &lt;/p&gt;
&lt;p&gt;Best regards,&lt;/p&gt;
&lt;p&gt;shoff&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如上所述，就是在DocX.cs的源代码里改一下，在代码末尾添加:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;    &amp;lt;summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// Activate Updating Fields on Open&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    /// &amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    public void UpdateFieldsOnOpen()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        XElement element = new XElement(XName.Get(&amp;quot;updateFields&amp;quot;, DocX.w.NamespaceName));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        element.Add(new XAttribute(XName.Get(&amp;quot;val&amp;quot;, DocX.w.NamespaceName), &amp;quot;true&amp;quot;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        settings.Root.AddFirst(element);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;``` &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;然后再修改下保存的函数save(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;```C#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                         //using (TextReader tr = new StreamReader(settingsPart.GetStream()))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                         // settings = XDocument.Load(tr);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                         if (settings == null)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                         &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                       using (TextReader tr = new StreamReader(settingsPart.GetStream()))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                       settings = XDocument.Load(tr);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                         &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;把原本是注释里的代码改成现在的样子。&lt;br&gt;然后重新生成下DocX.dll。&lt;br&gt;在使用的时候自己添加个函数&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public static void update(string docx)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        using (DocX document = DocX.Load(docx))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                document.UpdateFieldsOnOpen();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                document.Save();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;让文档在打开的时候自动更新目录域。&lt;br&gt;不过这样的话你得首先有目录，我用的办法是新建一个word，给它加上目录，然后创建新word的时候把这个的目录页给插入到新文档里。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public static void loadTOC(string s, string path, string name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        if (!Directory.Exists(path))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                Directory.CreateDirectory(path);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        string docx = @path + &amp;quot;\\&amp;quot; + name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        DocX _template = DocX.Load(s);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        DocX _document = DocX.Create(docx);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        _document.InsertDocument(_template);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        _document.SaveAs(docx);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        addNewpage(docx);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;至此，目录就可以正常使用了。每次打开就会提示更新域。&lt;/p&gt;
&lt;p&gt;如上，结果今天一大早去翻看Example的时候，发现原来作者已经更新了，并且添加了操作目录的代码。使用起来也很简单。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public static void AddToc(string docx)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        using (var document = DocX.Load(docx))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                document.InsertTableOfContents(&amp;quot;目录&amp;quot;, TableOfContentsSwitches.O | TableOfContentsSwitches.U | TableOfContentsSwitches.Z | TableOfContentsSwitches.H, &amp;quot;Heading2&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                document.Save();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样就已经ok了，也不用修改什么代码了，作用和之前的那个一样。顿时心里一阵草泥马奔腾而过。&lt;br&gt;提醒：多看example里的项目，有需求先在里面找。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;DocX是一款开源的C#操作word的库，使用方便，也很轻巧，比起微软的interop使用体验要好多了。可以在不打开word的情况下直接修改word，可以完成日常所需的操作，是实现批量操作word的好帮手。&lt;br&gt;我这里主要是针对给word添加目录时遇到的一些问题记录下。刚要做目录的时候，我就想DocX应该提供了这个方面的函数。于是我就在讨论区搜索，看看别人是怎么用的。我搜索了catalog; catalogue; list; contents;，但是都没有和目录有关的东西，搞得我以为没提供，于是就又各种搜索，什么list之类的，搜着搜着就找到了一篇。&lt;br&gt;说是需要下载一个patch，但是不造在哪。还有的提供了利用其他的xml布局来帮助生成目录的。这些都不用管了，我用的是在DocX.cs里的源码里直接修改下的好方法。&lt;br&gt;
    
    </summary>
    
    
      <category term="C#" scheme="http://jacean.github.io/tags/C/"/>
    
      <category term="DocX" scheme="http://jacean.github.io/tags/DocX/"/>
    
  </entry>
  
  <entry>
    <title>ComBox数据源绑定</title>
    <link href="http://jacean.github.io/2016/03/15/ComBox%E6%95%B0%E6%8D%AE%E6%BA%90%E7%BB%91%E5%AE%9A/"/>
    <id>http://jacean.github.io/2016/03/15/ComBox数据源绑定/</id>
    <published>2016-03-15T07:08:29.000Z</published>
    <updated>2016-03-15T07:14:05.739Z</updated>
    
    <content type="html">&lt;p&gt;.NET对很多数据控件都提供了数据绑定的功能，很方便，但是在方便的时候又会有很多不便，以我的经验来看还是慎用为妙。不过在这里还是记录下ComBox的数据绑定，自动不全以及避免两个combox的数据联动。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;c#winform中，两个combox绑定到同一个数据源会联动变化。解决办法是把当前表复制，其中一个combox绑定的复制表中。&lt;/p&gt;
&lt;p&gt;‘’’C#&lt;br&gt;combox1.DataSource = datatable.Copy();&lt;/p&gt;
&lt;p&gt;comboBox1.DataSource = dt;&lt;br&gt;comboBox2.DataSource = dt;//修改此处&lt;br&gt;comboBox1.DisplayMember = “name”;&lt;br&gt;comboBox2.DisplayMember = “name”;&lt;br&gt;comboBox1.ValueMember = “name”;&lt;br&gt;comboBox2.ValueMember = “name”;&lt;br&gt;comboBox1.AutoC ompleteSource = AutoCompleteSource.ListItems;&lt;br&gt;comboBox1.AutoCompleteMode = AutoCompleteMode.SuggestAppend;&lt;br&gt;comboBox2.AutoCompleteSource = AutoCompleteSource.ListItems;&lt;br&gt;comboBox2.AutoCompleteMode = AutoCompleteMode.SuggestAppend;&lt;br&gt;//设置自动补全和从数据表中绑定&lt;/p&gt;
&lt;p&gt;//通过Linq来绑定数据&lt;br&gt;var l=listControls.Select(lc=&amp;gt;lc.Name);&lt;br&gt;cBPro.DataSource = l.ToList&lt;string&gt;();&lt;br&gt;```&lt;/string&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;.NET对很多数据控件都提供了数据绑定的功能，很方便，但是在方便的时候又会有很多不便，以我的经验来看还是慎用为妙。不过在这里还是记录下ComBox的数据绑定，自动不全以及避免两个combox的数据联动。&lt;br&gt;
    
    </summary>
    
    
      <category term="C#" scheme="http://jacean.github.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>winForm鼠标坐标</title>
    <link href="http://jacean.github.io/2016/03/15/winForm%E9%BC%A0%E6%A0%87%E5%9D%90%E6%A0%87/"/>
    <id>http://jacean.github.io/2016/03/15/winForm鼠标坐标/</id>
    <published>2016-03-15T06:57:43.000Z</published>
    <updated>2016-03-15T07:03:50.877Z</updated>
    
    <content type="html">&lt;p&gt;在C#winform中，可以用Control.MousePosition获得当前鼠标的坐标，使用PointToClient计算鼠标相对于某个控件的坐标，如下&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Point screenPoint = Control.MousePosition;//鼠标相对于屏幕左上角的坐标&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Point formPoint = this.PointToClient(Control.MousePosition);//鼠标相对于窗体左上角的坐标&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Point contextMenuPoint = contextMenuStrip1.PointToClient(Control.MousePosition); //鼠标相对于contextMenuStrip1左上角的坐标&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;this.capture = true;//使用窗口捕捉鼠标移动事件,就是让当前的鼠标所有者为窗体，不能跨越控件&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;附，参考文章&lt;a href=&quot;http://bbs.csdn.net/topics/350071938&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CSDN回答&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;鼠标移动的事件属于某个控件, 你写的代码也跟那个控件有关.如果鼠标移出那个控件怎么办, 需要 grab 住鼠标, 使得鼠标移动到外面, 控件仍旧能接收到鼠标消息.随后你就跟踪鼠标移动事件,在移动中:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// 得到窗口句柄&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;POINT windowPoint = POINT.FromPoint(this.PointToScreen(new Point(e.X, e.Y)));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;IntPtr hwnd = NativeUtils.WindowFromPoint(windowPoint);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if (hwnd != IntPtr.Zero) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 如果是托管的, 就能得到对应的 control 类对象&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 不是所有 hwnd 都是托管的哦&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Control c = Control.FromHandle(hwnd);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[DllImport(&amp;quot;user32.dll&amp;quot;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public static extern IntPtr WindowFromPoint(POINT Point);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;给你一个完整的示例：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/**********************&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* 课题：将窗体中鼠标所在控件名显示在窗体标题上&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* 作者：ZAXX&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* QQ : 94027486&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* 本课题可简单扩展：获取屏幕上鼠标所在位置的窗口句柄与类名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;**********************/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;using System;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;using System.Drawing;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;using System.Windows.Forms;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;using System.Runtime.InteropServices;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;namespace Zaxx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public partial class MouseOnControl: Form&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[DllImport(&amp;quot;User32.dll&amp;quot;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;private static extern IntPtr WindowFromPoint(Point p);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Timer timer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public MouseOnControl()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;InitializeComponent();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;timer = new Timer();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;timer.Interval = 200;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;timer.Enabled = true;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;timer.Tick += new EventHandler(timer_Tick);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;void timer_Tick(object sender, EventArgs e)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Point p = Cursor.Position;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;IntPtr h = WindowFromPoint(p);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;foreach (Control con in this.Controls)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if (con.Handle == h)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;this.Text = con.Name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;在C#winform中，可以用Control.MousePosition获得当前鼠标的坐标，使用PointToClient计算鼠标相对于某个控件的坐标，如下&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Point screenPoint = Control.MousePosition;//鼠标相对于屏幕左上角的坐标&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Point formPoint = this.PointToClient(Control.MousePosition);//鼠标相对于窗体左上角的坐标&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Point contextMenuPoint = contextMenuStrip1.PointToClient(Control.MousePosition); //鼠标相对于contextMenuStrip1左上角的坐标&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;this.capture = true;//使用窗口捕捉鼠标移动事件,就是让当前的鼠标所有者为窗体，不能跨越控件&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="C#" scheme="http://jacean.github.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>C#在拖放文件的同时检测shift键的状态</title>
    <link href="http://jacean.github.io/2016/03/15/C-%E5%9C%A8%E6%8B%96%E6%94%BE%E6%96%87%E4%BB%B6%E7%9A%84%E5%90%8C%E6%97%B6%E6%A3%80%E6%B5%8Bshift%E9%94%AE%E7%9A%84%E7%8A%B6%E6%80%81/"/>
    <id>http://jacean.github.io/2016/03/15/C-在拖放文件的同时检测shift键的状态/</id>
    <published>2016-03-15T06:53:52.000Z</published>
    <updated>2016-03-15T06:57:03.936Z</updated>
    
    <content type="html">&lt;p&gt;老板要给原来文件拖放的功能加个扩展分类，于是想在文件拖放时判断shift键的状态来区分。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;在拖放文件的同时检测shift键的状态&quot;&gt;&lt;a href=&quot;#在拖放文件的同时检测shift键的状态&quot; class=&quot;headerlink&quot; title=&quot;在拖放文件的同时检测shift键的状态&quot;&gt;&lt;/a&gt;在拖放文件的同时检测shift键的状态&lt;/h2&gt;&lt;p&gt;一般通过keydown和keyup来判断按下与否，但这都是需要控件事件触发，而在拖放的时候是没法触发key事件的，所以需要通过其他的检测。&lt;/p&gt;
&lt;p&gt;百度后，找到了这么一句：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;if (Control.ModifierKeys == Keys.Shift)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//keys Control.ModifierKeys 返回的是当前修改键的状态，ALT，SHIFT，CTRL&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; shiftDown = true;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;else&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; shiftDown = false;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在文件拖放完成的事件中执行这个就可以得到shift的状态从而区分响应。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;老板要给原来文件拖放的功能加个扩展分类，于是想在文件拖放时判断shift键的状态来区分。&lt;br&gt;
    
    </summary>
    
    
      <category term="C#" scheme="http://jacean.github.io/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>CSharp自定义控件属性面板及选择资源设置</title>
    <link href="http://jacean.github.io/2016/03/15/CSharp%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A7%E4%BB%B6%E5%B1%9E%E6%80%A7%E9%9D%A2%E6%9D%BF%E5%8F%8A%E9%80%89%E6%8B%A9%E8%B5%84%E6%BA%90%E8%AE%BE%E7%BD%AE/"/>
    <id>http://jacean.github.io/2016/03/15/CSharp自定义控件属性面板及选择资源设置/</id>
    <published>2016-03-15T06:38:16.000Z</published>
    <updated>2016-03-15T06:52:54.878Z</updated>
    
    <content type="html">&lt;p&gt;在开发winForm的时候，.net的控件总是会不够用，就需要自定义控件来定制自己的控件使用。在这里总结下C#自定义控件的一些属性设置。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;c-自定义控件属性面板及选择资源设置&quot;&gt;&lt;a href=&quot;#c-自定义控件属性面板及选择资源设置&quot; class=&quot;headerlink&quot; title=&quot;c#自定义控件属性面板及选择资源设置&quot;&gt;&lt;/a&gt;c#自定义控件属性面板及选择资源设置&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;自定义控件显示在工具箱的开关：&lt;br&gt;将true改为false就可以不显示了。&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[ToolboxItem(true)] public partial class UserControl1 : UserControl&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol&gt;
&lt;li&gt;自定义控件在工具箱中的图标显示：&lt;br&gt;可以使用已有控件的图标，&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[ToolboxBitmap(typeof(System.Windows.Forms.PictureBox))]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public partial class UserControl1 : UserControl&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果不想用系统的图标，要使用自己的图标，可以这样（这部分未测试，源于参考文章）&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[ToolboxBitmap(typeof(MyPanel), &amp;quot;WindowsApplication1.Images.MyPanel.bmp&amp;quot;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public class MyPanel : UserControl&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;不过，一定要注意路径，WindowsApplication1.Images.MyPanel.bmp表示，解决方案是WindowsApplication1，目录是Images，文件名是MyPanel.bmp，同时，这个图片必须是“嵌入的资源”（点击文件,右键,属性,有一个文件属性,其中,在生成操作中,可以选择”嵌入的资源”）&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;自定义控件在属性面板上的显示开关：&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[Browsable(true)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[Description(&amp;quot;属性描述&amp;quot;), Category(&amp;quot;属性类别&amp;quot;), DefaultValue(&amp;quot;属性默认值，重置时使用&amp;quot;)] 3 public override string Text&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;get &amp;#123; return label1.Text; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;set &amp;#123; label1.Text = value; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;category设定的是属性在属性面板上显示的类别，当使用了类别时，组件属性和事件可以按逻辑分组显示在属性浏览器中。Category(“Appearance”)就可以把属性从杂项转移到外观。&lt;br&gt;（摘抄自参考文章）用于设置默认的值，对于string,bool,int，可以直接写出来，如[DefaultValue(10)]，这是可以的，不过，不是这三种类型的话，就比较麻烦，一定要先转化为string才能设置成功。如上面的DarkGray，这是系统定义的颜色，这还是比较好处理的。不过，如果是一些自定义的颜色，如颜色是128,0,128，你应该将128转为16进制，写成0x800080，前缀0x是一定要加的。最后就这样[DefaultValue(typeof(Color), “0x800080”)]&lt;br&gt;还有一种[DefaultValue(typeof(Color), “0, 70, 213”)]&lt;br&gt;如果是字体的话需要[DefaultValue(typeof(Font), “宋体, 9pt”)]&lt;br&gt;这两种特殊情况三种方法本人均未测试。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;自定义控件属性选择资源：&lt;br&gt;如果自定义的属性不是文本等输入，是图片之类的就需要类似于picturebox的资源选择了，所以在设置属性的时候使用文件类型来定义，如选择图片的例下&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[Browsable(true)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[Description(&amp;quot;设置控件图片&amp;quot;), Category(&amp;quot;setPic&amp;quot;), DefaultValue(&amp;quot; &amp;quot;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public Bitmap setPic&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;get &amp;#123; return (Bitmap)this.pictureBox1.Image; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;set&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;this.pictureBox1.Image = value;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这样的话就会在属性面板的设置中出现选择资源的对话框来选择。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;自定义控件属性选择下拉列表：&lt;br&gt;在定义属性的时候需要先设置好枚举值，通过枚举来定义属性，如例下&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public enum indexEnum&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; a,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; b,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public indexEnum index;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[Browsable(true)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[Description(&amp;quot;设置index&amp;quot;), Category(&amp;quot;Index&amp;quot;), DefaultValue(&amp;quot;属性默认值&amp;quot;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; public indexEnum Index&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; get &amp;#123; return index; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; set &amp;#123; index = value; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;附：&lt;br&gt;参考文章&lt;a href=&quot;http://www.tuicool.com/articles/En2ANjB&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;常用Design属性 【C#】妈妈再也不用担心自定义控件如何给特殊类型的属性添加默认值了，附自定义GroupBox一枚&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;在开发winForm的时候，.net的控件总是会不够用，就需要自定义控件来定制自己的控件使用。在这里总结下C#自定义控件的一些属性设置。&lt;br&gt;
    
    </summary>
    
    
      <category term="CSharp" scheme="http://jacean.github.io/tags/CSharp/"/>
    
      <category term="自定义控件" scheme="http://jacean.github.io/tags/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A7%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>Hexo使用七牛云存储图片等文件</title>
    <link href="http://jacean.github.io/2016/03/14/Hexo%E4%BD%BF%E7%94%A8%E4%B8%83%E7%89%9B%E4%BA%91%E5%AD%98%E5%82%A8%E5%9B%BE%E7%89%87%E7%AD%89%E6%96%87%E4%BB%B6/"/>
    <id>http://jacean.github.io/2016/03/14/Hexo使用七牛云存储图片等文件/</id>
    <published>2016-03-13T16:29:36.000Z</published>
    <updated>2016-03-13T16:57:56.696Z</updated>
    
    <content type="html">&lt;p&gt;博客是绑定在gitpage上的，但是国外的网站毕竟访问慢，但是又不想再部署到其他地方，折中，将大文件使用国内的云存储来快速访问。七牛云是个不错的选择，因为目前还不是标准用户，等待验证，所以我就只把图片传上去来做个范例。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;使用七牛云加速网站图片加载&quot;&gt;&lt;a href=&quot;#使用七牛云加速网站图片加载&quot; class=&quot;headerlink&quot; title=&quot;使用七牛云加速网站图片加载&quot;&gt;&lt;/a&gt;使用七牛云加速网站图片加载&lt;/h2&gt;&lt;h3 id=&quot;注册七牛云&quot;&gt;&lt;a href=&quot;#注册七牛云&quot; class=&quot;headerlink&quot; title=&quot;注册七牛云&quot;&gt;&lt;/a&gt;注册七牛云&lt;/h3&gt;&lt;p&gt;七牛云和github有合作，可以直接使用github账号登陆，然后验证手机。身份验证之后就是标准用户，我静等验证通过。&lt;/p&gt;
&lt;h3 id=&quot;七牛云存储&quot;&gt;&lt;a href=&quot;#七牛云存储&quot; class=&quot;headerlink&quot; title=&quot;七牛云存储&quot;&gt;&lt;/a&gt;七牛云存储&lt;/h3&gt;&lt;p&gt;新建空间，然后上传图片。我暂时只能选择公共空间，建立后就进行上传文件。把自己网站的大文件，比如图片，js，css等上传，然后就会出现一个外链，利用这个外链就可以引用了。这是最简单的一种了。&lt;br&gt;比如这就是一张&lt;a href=&quot;http://www.qiniu.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;七牛&lt;/a&gt;上的图片: &lt;img src=&quot;http://7xrtyi.com1.z0.glb.clouddn.com/hexoBlog_img_qiniu.png&quot; alt=&quot;&quot;&gt;.&lt;/p&gt;
&lt;h3 id=&quot;更改yelee的链接地址&quot;&gt;&lt;a href=&quot;#更改yelee的链接地址&quot; class=&quot;headerlink&quot; title=&quot;更改yelee的链接地址&quot;&gt;&lt;/a&gt;更改yelee的链接地址&lt;/h3&gt;&lt;p&gt;yelee的文件都是分开组合的，然后引用文件是通过属性来设置引用，只要找到引用就可以更改。我暂时改了icon、apple-touch-icon和avatar。具体位置如下：&lt;br&gt;HexoBlog/themes/yelee/layout/_partial/head.ejs&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;attr&quot;&gt;theme.favicon&lt;/span&gt;)&amp;#123; %&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;&amp;lt;!--&amp;lt;link rel=&quot;icon&quot; href=&quot;&amp;lt;%- theme.root_url %&amp;gt;&amp;lt;%- theme.favicon %&amp;gt;&quot;&amp;gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;rel&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;icon&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;http://7xrtyi.com1.z0.glb.clouddn.com/hexoBlog_favicon.png&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;%&lt;/span&gt; &amp;#125; %&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;%-&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;css&lt;/span&gt;(&#39;&lt;span class=&quot;attr&quot;&gt;font-awesome&lt;/span&gt;/&lt;span class=&quot;attr&quot;&gt;css&lt;/span&gt;/&lt;span class=&quot;attr&quot;&gt;font-awesome.min&lt;/span&gt;&#39;) %&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- &amp;lt;link rel=&quot;apple-touch-icon&quot; href=&quot;&amp;lt;%- theme.root_url %&amp;gt;/apple-touch-icon.png&quot;&amp;gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;rel&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;apple-touch-icon&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;http://7xrtyi.com1.z0.glb.clouddn.com/hexoBlog_apple-touch-icon.png&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;HexoBlog/themes/yelee/layout/_partial/left-col.ejs&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;%= config.root %&amp;gt;&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;profilepic&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;comment&quot;&gt;&amp;lt;!--&amp;lt;img src=&quot;&amp;lt;%- theme.root_url %&amp;gt;&amp;lt;%=theme.avatar%&amp;gt;&quot; class=&quot;animated zoomIn&quot;&amp;gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;http://7xrtyi.com1.z0.glb.clouddn.com/hexoBlog_avatar.png&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;animated zoomIn&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;暂时就改动这些，至于字体我还不能上传，哭。。。&lt;/p&gt;
&lt;h3 id=&quot;EndToRefresh&quot;&gt;&lt;a href=&quot;#EndToRefresh&quot; class=&quot;headerlink&quot; title=&quot;EndToRefresh&quot;&gt;&lt;/a&gt;EndToRefresh&lt;/h3&gt;&lt;p&gt;&lt;em&gt;Hexo g -d&lt;/em&gt;，刷新后享受七牛云提供的飞一般的流畅！&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;博客是绑定在gitpage上的，但是国外的网站毕竟访问慢，但是又不想再部署到其他地方，折中，将大文件使用国内的云存储来快速访问。七牛云是个不错的选择，因为目前还不是标准用户，等待验证，所以我就只把图片传上去来做个范例。&lt;br&gt;
    
    </summary>
    
    
      <category term="yelee" scheme="http://jacean.github.io/tags/yelee/"/>
    
      <category term="Hexo" scheme="http://jacean.github.io/tags/Hexo/"/>
    
      <category term="七牛云" scheme="http://jacean.github.io/tags/%E4%B8%83%E7%89%9B%E4%BA%91/"/>
    
  </entry>
  
  <entry>
    <title>Hexo使用yelee主题添加swiftype搜索</title>
    <link href="http://jacean.github.io/2016/03/13/Hexo%E4%BD%BF%E7%94%A8yelee%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0swiftype%E6%90%9C%E7%B4%A2/"/>
    <id>http://jacean.github.io/2016/03/13/Hexo使用yelee主题添加swiftype搜索/</id>
    <published>2016-03-13T14:20:07.000Z</published>
    <updated>2016-03-13T16:02:05.554Z</updated>
    
    <content type="html">&lt;p&gt;yelee主题是自带有搜索框的，只是没有功能，而且要显示搜索框首先得在主题配置里打开。然后，需要的站内搜索功能可由第三方提供服务，我选择了swiftepy，还不错，现在就来说说怎么配置swiftype的搜索功能给Hexo的yelee主题。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;yelee主题使用swiftype添加站内搜索功能&quot;&gt;&lt;a href=&quot;#yelee主题使用swiftype添加站内搜索功能&quot; class=&quot;headerlink&quot; title=&quot;yelee主题使用swiftype添加站内搜索功能&quot;&gt;&lt;/a&gt;yelee主题使用swiftype添加站内搜索功能&lt;/h2&gt;&lt;h3 id=&quot;打开yelee主题的搜索框&quot;&gt;&lt;a href=&quot;#打开yelee主题的搜索框&quot; class=&quot;headerlink&quot; title=&quot;打开yelee主题的搜索框&quot;&gt;&lt;/a&gt;打开yelee主题的搜索框&lt;/h3&gt;&lt;p&gt;在theme的yelee里打开_config文件，找到searchBox，然后打开显示，如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# 是否显示边栏中的搜索框（仅样式，未添加搜索功能）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Search Box in left column&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;search_box: true&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;注册swiftype服务&quot;&gt;&lt;a href=&quot;#注册swiftype服务&quot; class=&quot;headerlink&quot; title=&quot;注册swiftype服务&quot;&gt;&lt;/a&gt;注册swiftype服务&lt;/h3&gt;&lt;p&gt;这个就直接进入&lt;a href=&quot;https://swiftype.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;swiftype&lt;/a&gt;,注create册账号，登陆，然后根据提示很容易就会设置好一个对应自己站点的Engine，注意一点是在输入网站的时候，不如我的&lt;a href=&quot;http://jacean.github.io/，一定要有最后的斜杠/。设置好后进入Install，开始配置。&quot;&gt;http://jacean.github.io/，一定要有最后的斜杠/。设置好后进入Install，开始配置。&lt;/a&gt;&lt;br&gt;安装的时候，会有一段js，但是这个js咱还先不能直接粘贴啊，得先修改下配置。点击下边的&lt;em&gt;change Configuration&lt;/em&gt;，进入后会有各种设置，选择&lt;em&gt;Search field&lt;/em&gt;，edit，是选择怎么加搜索框的。因为yelle自带搜索框，所以我们选择&lt;em&gt;yes&lt;/em&gt;，然后复制好css格式，后边要用，直接save，然后返回主配置，如果不自定义搜索结果的话直接&lt;em&gt;activate&lt;/em&gt;，这里的设置就ok了。&lt;br&gt;然后，复制好那一大段js代码，准备修改yelle。&lt;/p&gt;
&lt;h3 id=&quot;修改yelle&quot;&gt;&lt;a href=&quot;#修改yelle&quot; class=&quot;headerlink&quot; title=&quot;修改yelle&quot;&gt;&lt;/a&gt;修改yelle&lt;/h3&gt;&lt;p&gt;根据swiftype提示，要把这段js放在每个页面都能使用的位置，那自然是模板的head了。&lt;br&gt;因为Hexo是静态的，所以不要把js和css修改在生成好的html里，记得要在主题的布局文件里改。不过找search框的时候直接在网页里调试查找位置。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;添加js&lt;br&gt;HexoBlog/themes/yelee/layout/_partial/head.ejs，就在这个文件里修改，将js代码放在最后的标签之前即可。&lt;/li&gt;
&lt;li&gt;添加css&lt;br&gt;HexoBlog/themes/yelee/layout/_partial/left-col.ejs，在这个文件里找到search，代码如下&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;% if (theme.search_box)&amp;#123; %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;form&amp;gt;&amp;lt;input type=&amp;quot;text&amp;quot; class=&amp;quot;search st-default-search-input&amp;quot; placeholder=&amp;quot; Search...&amp;quot;&amp;gt;&amp;lt;/form&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;%&amp;#125;%&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;大功告成&quot;&gt;&lt;a href=&quot;#大功告成&quot; class=&quot;headerlink&quot; title=&quot;大功告成&quot;&gt;&lt;/a&gt;大功告成&lt;/h3&gt;&lt;p&gt;&lt;em&gt;hexo g -d&lt;/em&gt;重新生成部署看看吧。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;yelee主题是自带有搜索框的，只是没有功能，而且要显示搜索框首先得在主题配置里打开。然后，需要的站内搜索功能可由第三方提供服务，我选择了swiftepy，还不错，现在就来说说怎么配置swiftype的搜索功能给Hexo的yelee主题。&lt;br&gt;
    
    </summary>
    
    
      <category term="yelee" scheme="http://jacean.github.io/tags/yelee/"/>
    
      <category term="swiftype" scheme="http://jacean.github.io/tags/swiftype/"/>
    
  </entry>
  
  <entry>
    <title>Hexo自定义页面禁用主题</title>
    <link href="http://jacean.github.io/2016/03/12/Hexo%E8%87%AA%E5%AE%9A%E4%B9%89%E9%A1%B5%E9%9D%A2%E7%A6%81%E7%94%A8%E4%B8%BB%E9%A2%98/"/>
    <id>http://jacean.github.io/2016/03/12/Hexo自定义页面禁用主题/</id>
    <published>2016-03-12T04:36:06.000Z</published>
    <updated>2016-03-12T04:57:52.969Z</updated>
    
    <content type="html">&lt;p&gt;在Hexo中添加自定义的网页，很容易就会被加载主题，使自己的网页变形，所以需要禁用主题，方法是在配置中添加跳过渲染的文件。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;禁用主题添加自定义页面&quot;&gt;&lt;a href=&quot;#禁用主题添加自定义页面&quot; class=&quot;headerlink&quot; title=&quot;禁用主题添加自定义页面&quot;&gt;&lt;/a&gt;禁用主题添加自定义页面&lt;/h2&gt;&lt;p&gt;  建立好博客雏形之后，想着快要求职投简历了，不如做一份网页简历，于是打算把aboutme作为简历展示。&lt;br&gt;  先在配置中开启about，然后Hexo g，发现在目录下自动建了about的文件夹，把代码放进去之后，提交，一打开发现自定义的页面被套了主题，完全变形了。这可不好。&lt;br&gt;  于是，关闭about，直接自己建个about文件夹，结果g了后被自动删除了，这可就不开心了。&lt;br&gt;  google之，找到 &lt;a href=&quot;https://github.com/hexojs/hexo/issues/1146#issuecomment-88380140&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Xuanwo的答案&lt;/a&gt;,抄录如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;skip_render使用了minimatch，开始匹配的位置是基于你的source_dir的，一般来说，是你的source文件夹下。下面我分别列举几种常见的情况进行说明：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;请注意yml中的文件格式，输入单个数据请注意空格，输入数组请进行缩进&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;单个文件夹下全部文件：skip_render: test/*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;单个文件夹下指定类型文件：skip_render: test/*.html&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;单个文件夹下全部文件以及子目录:skip_render: test/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;多个文件夹以及各种复杂情况：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;skip_render:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    - `test1/*.html`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    - `test2/**`&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;  所以，我在config中的skip_render后加了about/&lt;em&gt;*,在source下建立about文件夹，把代码放进去，&lt;/em&gt;g -d*之后，about进入了代码库。刷新网页，然后点击about，正常了。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;在Hexo中添加自定义的网页，很容易就会被加载主题，使自己的网页变形，所以需要禁用主题，方法是在配置中添加跳过渲染的文件。&lt;br&gt;
    
    </summary>
    
    
      <category term="Hexo" scheme="http://jacean.github.io/tags/Hexo/"/>
    
  </entry>
  
</feed>
