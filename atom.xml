<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jacean say Hello</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-03-15T07:33:38.643Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Jacean Wan</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>DocX给word添加目录TOC</title>
    <link href="http://yoursite.com/2016/03/15/DocX%E7%BB%99word%E6%B7%BB%E5%8A%A0%E7%9B%AE%E5%BD%95TOC/"/>
    <id>http://yoursite.com/2016/03/15/DocX给word添加目录TOC/</id>
    <published>2016-03-15T07:15:55.000Z</published>
    <updated>2016-03-15T07:33:38.643Z</updated>
    
    <content type="html">&lt;p&gt;DocX是一款开源的C#操作word的库，使用方便，也很轻巧，比起微软的interop使用体验要好多了。可以在不打开word的情况下直接修改word，可以完成日常所需的操作，是实现批量操作word的好帮手。&lt;br&gt;我这里主要是针对给word添加目录时遇到的一些问题记录下。刚要做目录的时候，我就想DocX应该提供了这个方面的函数。于是我就在讨论区搜索，看看别人是怎么用的。我搜索了catalog; catalogue; list; contents;，但是都没有和目录有关的东西，搞得我以为没提供，于是就又各种搜索，什么list之类的，搜着搜着就找到了一篇。&lt;br&gt;说是需要下载一个patch，但是不造在哪。还有的提供了利用其他的xml布局来帮助生成目录的。这些都不用管了，我用的是在DocX.cs里的源码里直接修改下的好方法。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;http://docx.codeplex.com/discussions/528384&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;答案在DocX的codeplex里&lt;/a&gt;,抄录如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Hello together, &lt;/p&gt;
&lt;p&gt;i’m sorry, i didn’t like your solution proposals as I use docx to not have a need to include the open sdk. (But it took me to this solution 95% of the way, so thanks!) &lt;/p&gt;
&lt;p&gt;I found out DocX can actually do that easily with just a few minor changes to the code. &lt;/p&gt;
&lt;p&gt;To accomplish that goal add the following lines to DocX.cs into the class:&lt;br&gt;/// &lt;summary&gt;&lt;br&gt;/// Activate Updating Fields on Open&lt;br&gt;/// &lt;/summary&gt;&lt;br&gt;   public void UpdateFieldsOnOpen()&lt;br&gt;    {&lt;br&gt;        XElement element = new XElement(XName.Get(“updateFields”, DocX.w.NamespaceName));&lt;br&gt;        element.Add(new XAttribute(XName.Get(“val”, DocX.w.NamespaceName), “true”));&lt;br&gt;        settings.Root.AddFirst(element);&lt;br&gt;    }&lt;/p&gt;
&lt;p&gt;Finally you need to modify the save process slightly because docx reloads the settings part directly before saving the document.&lt;br&gt;// Comment out or remove those lines:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;using (TextReader tr = new StreamReader(settingsPart.GetStream()))&lt;/li&gt;
&lt;li&gt;settings = XDocument.Load(tr);&lt;br&gt;// Insert this instead:&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;if (settings == null )&lt;/li&gt;
&lt;li&gt;{&lt;/li&gt;
&lt;li&gt;using (TextReader tr = new StreamReader(settingsPart.GetStream()))&lt;/li&gt;
&lt;li&gt;settings = XDocument.Load(tr);&lt;/li&gt;
&lt;li&gt;}&lt;br&gt;Use these lines to use the new option:&lt;br&gt;docx.UpdateFieldsOnOpen();&lt;br&gt;docx.Save();&lt;br&gt;As a result, word will tell you that some fields need updating when you open the document.&lt;br&gt;Well after you bypassed that new preview mode that they put into word to complicate usage. Which i know everybody at my workplace loves very much.&lt;br&gt;It works on my computer :).&lt;br&gt;I hope it will help YOU ALL TOO since you are great people that deserve TOCs.&lt;br&gt;Best regards,&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;shoff&lt;/p&gt;
&lt;p&gt;如上所述，就是在DocX.cs的源代码里改一下，在代码末尾添加&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;                 &amp;lt;summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 /// Activate Updating Fields on Open&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 /// &amp;lt;/summary&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 public void UpdateFieldsOnOpen()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                         XElement element = new XElement(XName.Get(&amp;quot;updateFields&amp;quot;, DocX.w.NamespaceName));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                         element.Add(new XAttribute(XName.Get(&amp;quot;val&amp;quot;, DocX.w.NamespaceName), &amp;quot;true&amp;quot;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        settings.Root.AddFirst(element);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;```  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;然后再修改下保存的函数save(),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;```C#&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                         //using (TextReader tr = new StreamReader(settingsPart.GetStream()))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                         // settings = XDocument.Load(tr);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                         if (settings == null)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                         &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                       using (TextReader tr = new StreamReader(settingsPart.GetStream()))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                       settings = XDocument.Load(tr);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                         &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;把原本是注释里的代码改成现在的样子。&lt;br&gt;然后重新生成下DocX.dll。&lt;br&gt;在使用的时候自己添加个函数&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public static void update(string docx)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        using (DocX document = DocX.Load(docx))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                document.UpdateFieldsOnOpen();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                document.Save();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;让文档在打开的时候自动更新目录域。&lt;br&gt;不过这样的话你得首先有目录，我用的办法是新建一个word，给它加上目录，然后创建新word的时候把这个的目录页给插入到新文档里。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public static void loadTOC(string s, string path, string name)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        if (!Directory.Exists(path))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                Directory.CreateDirectory(path);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        string docx = @path + &amp;quot;\\&amp;quot; + name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        DocX _template = DocX.Load(s);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        DocX _document = DocX.Create(docx);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        _document.InsertDocument(_template);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        _document.SaveAs(docx);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        addNewpage(docx);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;至此，目录就可以正常使用了。每次打开就会提示更新域。&lt;/p&gt;
&lt;p&gt;如上，结果今天一大早去翻看Example的时候，发现原来作者已经更新了，并且添加了操作目录的代码。使用起来也很简单。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public static void AddToc(string docx)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                      &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        using (var document = DocX.Load(docx))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                document.InsertTableOfContents(&amp;quot;目录&amp;quot;, TableOfContentsSwitches.O | TableOfContentsSwitches.U | TableOfContentsSwitches.Z | TableOfContentsSwitches.H, &amp;quot;Heading2&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                                document.Save();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                 &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样就已经ok了，也不用修改什么代码了，作用和之前的那个一样。顿时心里一阵草泥马奔腾而过。&lt;br&gt;提醒：多看example里的项目，有需求先在里面找。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;DocX是一款开源的C#操作word的库，使用方便，也很轻巧，比起微软的interop使用体验要好多了。可以在不打开word的情况下直接修改word，可以完成日常所需的操作，是实现批量操作word的好帮手。&lt;br&gt;我这里主要是针对给word添加目录时遇到的一些问题记录下。刚要做目录的时候，我就想DocX应该提供了这个方面的函数。于是我就在讨论区搜索，看看别人是怎么用的。我搜索了catalog; catalogue; list; contents;，但是都没有和目录有关的东西，搞得我以为没提供，于是就又各种搜索，什么list之类的，搜着搜着就找到了一篇。&lt;br&gt;说是需要下载一个patch，但是不造在哪。还有的提供了利用其他的xml布局来帮助生成目录的。这些都不用管了，我用的是在DocX.cs里的源码里直接修改下的好方法。&lt;br&gt;
    
    </summary>
    
    
      <category term="C#" scheme="http://yoursite.com/tags/C/"/>
    
      <category term="DocX" scheme="http://yoursite.com/tags/DocX/"/>
    
  </entry>
  
  <entry>
    <title>ComBox数据源绑定</title>
    <link href="http://yoursite.com/2016/03/15/ComBox%E6%95%B0%E6%8D%AE%E6%BA%90%E7%BB%91%E5%AE%9A/"/>
    <id>http://yoursite.com/2016/03/15/ComBox数据源绑定/</id>
    <published>2016-03-15T07:08:29.000Z</published>
    <updated>2016-03-15T07:14:05.739Z</updated>
    
    <content type="html">&lt;p&gt;.NET对很多数据控件都提供了数据绑定的功能，很方便，但是在方便的时候又会有很多不便，以我的经验来看还是慎用为妙。不过在这里还是记录下ComBox的数据绑定，自动不全以及避免两个combox的数据联动。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;c#winform中，两个combox绑定到同一个数据源会联动变化。解决办法是把当前表复制，其中一个combox绑定的复制表中。&lt;/p&gt;
&lt;p&gt;‘’’C#&lt;br&gt;combox1.DataSource = datatable.Copy();&lt;/p&gt;
&lt;p&gt;comboBox1.DataSource = dt;&lt;br&gt;comboBox2.DataSource = dt;//修改此处&lt;br&gt;comboBox1.DisplayMember = “name”;&lt;br&gt;comboBox2.DisplayMember = “name”;&lt;br&gt;comboBox1.ValueMember = “name”;&lt;br&gt;comboBox2.ValueMember = “name”;&lt;br&gt;comboBox1.AutoC ompleteSource = AutoCompleteSource.ListItems;&lt;br&gt;comboBox1.AutoCompleteMode = AutoCompleteMode.SuggestAppend;&lt;br&gt;comboBox2.AutoCompleteSource = AutoCompleteSource.ListItems;&lt;br&gt;comboBox2.AutoCompleteMode = AutoCompleteMode.SuggestAppend;&lt;br&gt;//设置自动补全和从数据表中绑定&lt;/p&gt;
&lt;p&gt;//通过Linq来绑定数据&lt;br&gt;var l=listControls.Select(lc=&amp;gt;lc.Name);&lt;br&gt;cBPro.DataSource = l.ToList&lt;string&gt;();&lt;br&gt;```&lt;/string&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;.NET对很多数据控件都提供了数据绑定的功能，很方便，但是在方便的时候又会有很多不便，以我的经验来看还是慎用为妙。不过在这里还是记录下ComBox的数据绑定，自动不全以及避免两个combox的数据联动。&lt;br&gt;
    
    </summary>
    
    
      <category term="C#" scheme="http://yoursite.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>winForm鼠标坐标</title>
    <link href="http://yoursite.com/2016/03/15/winForm%E9%BC%A0%E6%A0%87%E5%9D%90%E6%A0%87/"/>
    <id>http://yoursite.com/2016/03/15/winForm鼠标坐标/</id>
    <published>2016-03-15T06:57:43.000Z</published>
    <updated>2016-03-15T07:03:50.877Z</updated>
    
    <content type="html">&lt;p&gt;在C#winform中，可以用Control.MousePosition获得当前鼠标的坐标，使用PointToClient计算鼠标相对于某个控件的坐标，如下&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Point screenPoint = Control.MousePosition;//鼠标相对于屏幕左上角的坐标&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Point formPoint = this.PointToClient(Control.MousePosition);//鼠标相对于窗体左上角的坐标&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Point contextMenuPoint = contextMenuStrip1.PointToClient(Control.MousePosition); //鼠标相对于contextMenuStrip1左上角的坐标&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;this.capture = true;//使用窗口捕捉鼠标移动事件,就是让当前的鼠标所有者为窗体，不能跨越控件&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;附，参考文章&lt;a href=&quot;http://bbs.csdn.net/topics/350071938&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;CSDN回答&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;鼠标移动的事件属于某个控件, 你写的代码也跟那个控件有关.如果鼠标移出那个控件怎么办, 需要 grab 住鼠标, 使得鼠标移动到外面, 控件仍旧能接收到鼠标消息.随后你就跟踪鼠标移动事件,在移动中:&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// 得到窗口句柄&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;POINT windowPoint = POINT.FromPoint(this.PointToScreen(new Point(e.X, e.Y)));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;IntPtr hwnd = NativeUtils.WindowFromPoint(windowPoint);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if (hwnd != IntPtr.Zero) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 如果是托管的, 就能得到对应的 control 类对象&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// 不是所有 hwnd 都是托管的哦&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Control c = Control.FromHandle(hwnd);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[DllImport(&amp;quot;user32.dll&amp;quot;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public static extern IntPtr WindowFromPoint(POINT Point);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;给你一个完整的示例：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/**********************&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* 课题：将窗体中鼠标所在控件名显示在窗体标题上&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* 作者：ZAXX&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* QQ : 94027486&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;* 本课题可简单扩展：获取屏幕上鼠标所在位置的窗口句柄与类名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;**********************/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;using System;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;using System.Drawing;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;using System.Windows.Forms;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;using System.Runtime.InteropServices;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;namespace Zaxx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public partial class MouseOnControl: Form&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[DllImport(&amp;quot;User32.dll&amp;quot;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;private static extern IntPtr WindowFromPoint(Point p);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Timer timer;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public MouseOnControl()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;InitializeComponent();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;timer = new Timer();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;timer.Interval = 200;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;timer.Enabled = true;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;timer.Tick += new EventHandler(timer_Tick);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;void timer_Tick(object sender, EventArgs e)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Point p = Cursor.Position;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;IntPtr h = WindowFromPoint(p);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;foreach (Control con in this.Controls)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if (con.Handle == h)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;this.Text = con.Name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;在C#winform中，可以用Control.MousePosition获得当前鼠标的坐标，使用PointToClient计算鼠标相对于某个控件的坐标，如下&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Point screenPoint = Control.MousePosition;//鼠标相对于屏幕左上角的坐标&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Point formPoint = this.PointToClient(Control.MousePosition);//鼠标相对于窗体左上角的坐标&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Point contextMenuPoint = contextMenuStrip1.PointToClient(Control.MousePosition); //鼠标相对于contextMenuStrip1左上角的坐标&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;this.capture = true;//使用窗口捕捉鼠标移动事件,就是让当前的鼠标所有者为窗体，不能跨越控件&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="C#" scheme="http://yoursite.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>C#在拖放文件的同时检测shift键的状态</title>
    <link href="http://yoursite.com/2016/03/15/C-%E5%9C%A8%E6%8B%96%E6%94%BE%E6%96%87%E4%BB%B6%E7%9A%84%E5%90%8C%E6%97%B6%E6%A3%80%E6%B5%8Bshift%E9%94%AE%E7%9A%84%E7%8A%B6%E6%80%81/"/>
    <id>http://yoursite.com/2016/03/15/C-在拖放文件的同时检测shift键的状态/</id>
    <published>2016-03-15T06:53:52.000Z</published>
    <updated>2016-03-15T06:57:03.936Z</updated>
    
    <content type="html">&lt;p&gt;老板要给原来文件拖放的功能加个扩展分类，于是想在文件拖放时判断shift键的状态来区分。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;在拖放文件的同时检测shift键的状态&quot;&gt;&lt;a href=&quot;#在拖放文件的同时检测shift键的状态&quot; class=&quot;headerlink&quot; title=&quot;在拖放文件的同时检测shift键的状态&quot;&gt;&lt;/a&gt;在拖放文件的同时检测shift键的状态&lt;/h2&gt;&lt;p&gt;一般通过keydown和keyup来判断按下与否，但这都是需要控件事件触发，而在拖放的时候是没法触发key事件的，所以需要通过其他的检测。&lt;/p&gt;
&lt;p&gt;百度后，找到了这么一句：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;if (Control.ModifierKeys == Keys.Shift)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//keys Control.ModifierKeys 返回的是当前修改键的状态，ALT，SHIFT，CTRL&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; shiftDown = true;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;else&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; shiftDown = false;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在文件拖放完成的事件中执行这个就可以得到shift的状态从而区分响应。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;老板要给原来文件拖放的功能加个扩展分类，于是想在文件拖放时判断shift键的状态来区分。&lt;br&gt;
    
    </summary>
    
    
      <category term="C#" scheme="http://yoursite.com/tags/C/"/>
    
  </entry>
  
  <entry>
    <title>CSharp自定义控件属性面板及选择资源设置</title>
    <link href="http://yoursite.com/2016/03/15/CSharp%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A7%E4%BB%B6%E5%B1%9E%E6%80%A7%E9%9D%A2%E6%9D%BF%E5%8F%8A%E9%80%89%E6%8B%A9%E8%B5%84%E6%BA%90%E8%AE%BE%E7%BD%AE/"/>
    <id>http://yoursite.com/2016/03/15/CSharp自定义控件属性面板及选择资源设置/</id>
    <published>2016-03-15T06:38:16.000Z</published>
    <updated>2016-03-15T06:52:54.878Z</updated>
    
    <content type="html">&lt;p&gt;在开发winForm的时候，.net的控件总是会不够用，就需要自定义控件来定制自己的控件使用。在这里总结下C#自定义控件的一些属性设置。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;c-自定义控件属性面板及选择资源设置&quot;&gt;&lt;a href=&quot;#c-自定义控件属性面板及选择资源设置&quot; class=&quot;headerlink&quot; title=&quot;c#自定义控件属性面板及选择资源设置&quot;&gt;&lt;/a&gt;c#自定义控件属性面板及选择资源设置&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;自定义控件显示在工具箱的开关：&lt;br&gt;将true改为false就可以不显示了。&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[ToolboxItem(true)] public partial class UserControl1 : UserControl&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol&gt;
&lt;li&gt;自定义控件在工具箱中的图标显示：&lt;br&gt;可以使用已有控件的图标，&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[ToolboxBitmap(typeof(System.Windows.Forms.PictureBox))]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public partial class UserControl1 : UserControl&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果不想用系统的图标，要使用自己的图标，可以这样（这部分未测试，源于参考文章）&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[ToolboxBitmap(typeof(MyPanel), &amp;quot;WindowsApplication1.Images.MyPanel.bmp&amp;quot;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public class MyPanel : UserControl&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;不过，一定要注意路径，WindowsApplication1.Images.MyPanel.bmp表示，解决方案是WindowsApplication1，目录是Images，文件名是MyPanel.bmp，同时，这个图片必须是“嵌入的资源”（点击文件,右键,属性,有一个文件属性,其中,在生成操作中,可以选择”嵌入的资源”）&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;自定义控件在属性面板上的显示开关：&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[Browsable(true)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[Description(&amp;quot;属性描述&amp;quot;), Category(&amp;quot;属性类别&amp;quot;), DefaultValue(&amp;quot;属性默认值，重置时使用&amp;quot;)] 3 public override string Text&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;get &amp;#123; return label1.Text; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;set &amp;#123; label1.Text = value; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;category设定的是属性在属性面板上显示的类别，当使用了类别时，组件属性和事件可以按逻辑分组显示在属性浏览器中。Category(“Appearance”)就可以把属性从杂项转移到外观。&lt;br&gt;（摘抄自参考文章）用于设置默认的值，对于string,bool,int，可以直接写出来，如[DefaultValue(10)]，这是可以的，不过，不是这三种类型的话，就比较麻烦，一定要先转化为string才能设置成功。如上面的DarkGray，这是系统定义的颜色，这还是比较好处理的。不过，如果是一些自定义的颜色，如颜色是128,0,128，你应该将128转为16进制，写成0x800080，前缀0x是一定要加的。最后就这样[DefaultValue(typeof(Color), “0x800080”)]&lt;br&gt;还有一种[DefaultValue(typeof(Color), “0, 70, 213”)]&lt;br&gt;如果是字体的话需要[DefaultValue(typeof(Font), “宋体, 9pt”)]&lt;br&gt;这两种特殊情况三种方法本人均未测试。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;自定义控件属性选择资源：&lt;br&gt;如果自定义的属性不是文本等输入，是图片之类的就需要类似于picturebox的资源选择了，所以在设置属性的时候使用文件类型来定义，如选择图片的例下&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[Browsable(true)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[Description(&amp;quot;设置控件图片&amp;quot;), Category(&amp;quot;setPic&amp;quot;), DefaultValue(&amp;quot; &amp;quot;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public Bitmap setPic&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;get &amp;#123; return (Bitmap)this.pictureBox1.Image; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;set&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;this.pictureBox1.Image = value;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;这样的话就会在属性面板的设置中出现选择资源的对话框来选择。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;自定义控件属性选择下拉列表：&lt;br&gt;在定义属性的时候需要先设置好枚举值，通过枚举来定义属性，如例下&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;public enum indexEnum&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; a,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; b,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public indexEnum index;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[Browsable(true)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[Description(&amp;quot;设置index&amp;quot;), Category(&amp;quot;Index&amp;quot;), DefaultValue(&amp;quot;属性默认值&amp;quot;)]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; public indexEnum Index&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; get &amp;#123; return index; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; set &amp;#123; index = value; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;附：&lt;br&gt;参考文章&lt;a href=&quot;http://www.tuicool.com/articles/En2ANjB&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;常用Design属性 【C#】妈妈再也不用担心自定义控件如何给特殊类型的属性添加默认值了，附自定义GroupBox一枚&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;在开发winForm的时候，.net的控件总是会不够用，就需要自定义控件来定制自己的控件使用。在这里总结下C#自定义控件的一些属性设置。&lt;br&gt;
    
    </summary>
    
    
      <category term="CSharp" scheme="http://yoursite.com/tags/CSharp/"/>
    
      <category term="自定义控件" scheme="http://yoursite.com/tags/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A7%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>Hexo使用七牛云存储图片等文件</title>
    <link href="http://yoursite.com/2016/03/14/Hexo%E4%BD%BF%E7%94%A8%E4%B8%83%E7%89%9B%E4%BA%91%E5%AD%98%E5%82%A8%E5%9B%BE%E7%89%87%E7%AD%89%E6%96%87%E4%BB%B6/"/>
    <id>http://yoursite.com/2016/03/14/Hexo使用七牛云存储图片等文件/</id>
    <published>2016-03-13T16:29:36.000Z</published>
    <updated>2016-03-13T16:57:56.696Z</updated>
    
    <content type="html">&lt;p&gt;博客是绑定在gitpage上的，但是国外的网站毕竟访问慢，但是又不想再部署到其他地方，折中，将大文件使用国内的云存储来快速访问。七牛云是个不错的选择，因为目前还不是标准用户，等待验证，所以我就只把图片传上去来做个范例。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;使用七牛云加速网站图片加载&quot;&gt;&lt;a href=&quot;#使用七牛云加速网站图片加载&quot; class=&quot;headerlink&quot; title=&quot;使用七牛云加速网站图片加载&quot;&gt;&lt;/a&gt;使用七牛云加速网站图片加载&lt;/h2&gt;&lt;h3 id=&quot;注册七牛云&quot;&gt;&lt;a href=&quot;#注册七牛云&quot; class=&quot;headerlink&quot; title=&quot;注册七牛云&quot;&gt;&lt;/a&gt;注册七牛云&lt;/h3&gt;&lt;p&gt;七牛云和github有合作，可以直接使用github账号登陆，然后验证手机。身份验证之后就是标准用户，我静等验证通过。&lt;/p&gt;
&lt;h3 id=&quot;七牛云存储&quot;&gt;&lt;a href=&quot;#七牛云存储&quot; class=&quot;headerlink&quot; title=&quot;七牛云存储&quot;&gt;&lt;/a&gt;七牛云存储&lt;/h3&gt;&lt;p&gt;新建空间，然后上传图片。我暂时只能选择公共空间，建立后就进行上传文件。把自己网站的大文件，比如图片，js，css等上传，然后就会出现一个外链，利用这个外链就可以引用了。这是最简单的一种了。&lt;br&gt;比如这就是一张&lt;a href=&quot;http://www.qiniu.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;七牛&lt;/a&gt;上的图片: &lt;img src=&quot;http://7xrtyi.com1.z0.glb.clouddn.com/hexoBlog_img_qiniu.png&quot; alt=&quot;&quot;&gt;.&lt;/p&gt;
&lt;h3 id=&quot;更改yelee的链接地址&quot;&gt;&lt;a href=&quot;#更改yelee的链接地址&quot; class=&quot;headerlink&quot; title=&quot;更改yelee的链接地址&quot;&gt;&lt;/a&gt;更改yelee的链接地址&lt;/h3&gt;&lt;p&gt;yelee的文件都是分开组合的，然后引用文件是通过属性来设置引用，只要找到引用就可以更改。我暂时改了icon、apple-touch-icon和avatar。具体位置如下：&lt;br&gt;HexoBlog/themes/yelee/layout/_partial/head.ejs&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;if&lt;/span&gt; (&lt;span class=&quot;attr&quot;&gt;theme.favicon&lt;/span&gt;)&amp;#123; %&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &lt;span class=&quot;comment&quot;&gt;&amp;lt;!--&amp;lt;link rel=&quot;icon&quot; href=&quot;&amp;lt;%- theme.root_url %&amp;gt;&amp;lt;%- theme.favicon %&amp;gt;&quot;&amp;gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;rel&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;icon&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;http://7xrtyi.com1.z0.glb.clouddn.com/hexoBlog_favicon.png&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;%&lt;/span&gt; &amp;#125; %&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;%-&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;css&lt;/span&gt;(&#39;&lt;span class=&quot;attr&quot;&gt;font-awesome&lt;/span&gt;/&lt;span class=&quot;attr&quot;&gt;css&lt;/span&gt;/&lt;span class=&quot;attr&quot;&gt;font-awesome.min&lt;/span&gt;&#39;) %&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- &amp;lt;link rel=&quot;apple-touch-icon&quot; href=&quot;&amp;lt;%- theme.root_url %&amp;gt;/apple-touch-icon.png&quot;&amp;gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;rel&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;apple-touch-icon&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;http://7xrtyi.com1.z0.glb.clouddn.com/hexoBlog_apple-touch-icon.png&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;HexoBlog/themes/yelee/layout/_partial/left-col.ejs&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;&amp;lt;%= config.root %&amp;gt;&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;profilepic&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &lt;span class=&quot;comment&quot;&gt;&amp;lt;!--&amp;lt;img src=&quot;&amp;lt;%- theme.root_url %&amp;gt;&amp;lt;%=theme.avatar%&amp;gt;&quot; class=&quot;animated zoomIn&quot;&amp;gt;--&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;img&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;http://7xrtyi.com1.z0.glb.clouddn.com/hexoBlog_avatar.png&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;class&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;animated zoomIn&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;a&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;暂时就改动这些，至于字体我还不能上传，哭。。。&lt;/p&gt;
&lt;h3 id=&quot;EndToRefresh&quot;&gt;&lt;a href=&quot;#EndToRefresh&quot; class=&quot;headerlink&quot; title=&quot;EndToRefresh&quot;&gt;&lt;/a&gt;EndToRefresh&lt;/h3&gt;&lt;p&gt;&lt;em&gt;Hexo g -d&lt;/em&gt;，刷新后享受七牛云提供的飞一般的流畅！&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;博客是绑定在gitpage上的，但是国外的网站毕竟访问慢，但是又不想再部署到其他地方，折中，将大文件使用国内的云存储来快速访问。七牛云是个不错的选择，因为目前还不是标准用户，等待验证，所以我就只把图片传上去来做个范例。&lt;br&gt;
    
    </summary>
    
    
      <category term="yelee" scheme="http://yoursite.com/tags/yelee/"/>
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
      <category term="七牛云" scheme="http://yoursite.com/tags/%E4%B8%83%E7%89%9B%E4%BA%91/"/>
    
  </entry>
  
  <entry>
    <title>Hexo使用yelee主题添加swiftype搜索</title>
    <link href="http://yoursite.com/2016/03/13/Hexo%E4%BD%BF%E7%94%A8yelee%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0swiftype%E6%90%9C%E7%B4%A2/"/>
    <id>http://yoursite.com/2016/03/13/Hexo使用yelee主题添加swiftype搜索/</id>
    <published>2016-03-13T14:20:07.000Z</published>
    <updated>2016-03-13T16:02:05.554Z</updated>
    
    <content type="html">&lt;p&gt;yelee主题是自带有搜索框的，只是没有功能，而且要显示搜索框首先得在主题配置里打开。然后，需要的站内搜索功能可由第三方提供服务，我选择了swiftepy，还不错，现在就来说说怎么配置swiftype的搜索功能给Hexo的yelee主题。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;yelee主题使用swiftype添加站内搜索功能&quot;&gt;&lt;a href=&quot;#yelee主题使用swiftype添加站内搜索功能&quot; class=&quot;headerlink&quot; title=&quot;yelee主题使用swiftype添加站内搜索功能&quot;&gt;&lt;/a&gt;yelee主题使用swiftype添加站内搜索功能&lt;/h2&gt;&lt;h3 id=&quot;打开yelee主题的搜索框&quot;&gt;&lt;a href=&quot;#打开yelee主题的搜索框&quot; class=&quot;headerlink&quot; title=&quot;打开yelee主题的搜索框&quot;&gt;&lt;/a&gt;打开yelee主题的搜索框&lt;/h3&gt;&lt;p&gt;在theme的yelee里打开_config文件，找到searchBox，然后打开显示，如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# 是否显示边栏中的搜索框（仅样式，未添加搜索功能）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# Search Box in left column&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;search_box: true&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;注册swiftype服务&quot;&gt;&lt;a href=&quot;#注册swiftype服务&quot; class=&quot;headerlink&quot; title=&quot;注册swiftype服务&quot;&gt;&lt;/a&gt;注册swiftype服务&lt;/h3&gt;&lt;p&gt;这个就直接进入&lt;a href=&quot;https://swiftype.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;swiftype&lt;/a&gt;,注create册账号，登陆，然后根据提示很容易就会设置好一个对应自己站点的Engine，注意一点是在输入网站的时候，不如我的&lt;a href=&quot;http://jacean.github.io/，一定要有最后的斜杠/。设置好后进入Install，开始配置。&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://jacean.github.io/，一定要有最后的斜杠/。设置好后进入Install，开始配置。&lt;/a&gt;&lt;br&gt;安装的时候，会有一段js，但是这个js咱还先不能直接粘贴啊，得先修改下配置。点击下边的&lt;em&gt;change Configuration&lt;/em&gt;，进入后会有各种设置，选择&lt;em&gt;Search field&lt;/em&gt;，edit，是选择怎么加搜索框的。因为yelle自带搜索框，所以我们选择&lt;em&gt;yes&lt;/em&gt;，然后复制好css格式，后边要用，直接save，然后返回主配置，如果不自定义搜索结果的话直接&lt;em&gt;activate&lt;/em&gt;，这里的设置就ok了。&lt;br&gt;然后，复制好那一大段js代码，准备修改yelle。&lt;/p&gt;
&lt;h3 id=&quot;修改yelle&quot;&gt;&lt;a href=&quot;#修改yelle&quot; class=&quot;headerlink&quot; title=&quot;修改yelle&quot;&gt;&lt;/a&gt;修改yelle&lt;/h3&gt;&lt;p&gt;根据swiftype提示，要把这段js放在每个页面都能使用的位置，那自然是模板的head了。&lt;br&gt;因为Hexo是静态的，所以不要把js和css修改在生成好的html里，记得要在主题的布局文件里改。不过找search框的时候直接在网页里调试查找位置。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;添加js&lt;br&gt;HexoBlog/themes/yelee/layout/_partial/head.ejs，就在这个文件里修改，将js代码放在最后的标签之前即可。&lt;/li&gt;
&lt;li&gt;添加css&lt;br&gt;HexoBlog/themes/yelee/layout/_partial/left-col.ejs，在这个文件里找到search，代码如下&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;% if (theme.search_box)&amp;#123; %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;form&amp;gt;&amp;lt;input type=&amp;quot;text&amp;quot; class=&amp;quot;search st-default-search-input&amp;quot; placeholder=&amp;quot; Search...&amp;quot;&amp;gt;&amp;lt;/form&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;%&amp;#125;%&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;大功告成&quot;&gt;&lt;a href=&quot;#大功告成&quot; class=&quot;headerlink&quot; title=&quot;大功告成&quot;&gt;&lt;/a&gt;大功告成&lt;/h3&gt;&lt;p&gt;&lt;em&gt;hexo g -d&lt;/em&gt;重新生成部署看看吧。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;yelee主题是自带有搜索框的，只是没有功能，而且要显示搜索框首先得在主题配置里打开。然后，需要的站内搜索功能可由第三方提供服务，我选择了swiftepy，还不错，现在就来说说怎么配置swiftype的搜索功能给Hexo的yelee主题。&lt;br&gt;
    
    </summary>
    
    
      <category term="yelee" scheme="http://yoursite.com/tags/yelee/"/>
    
      <category term="swiftype" scheme="http://yoursite.com/tags/swiftype/"/>
    
  </entry>
  
  <entry>
    <title>Hexo自定义页面禁用主题</title>
    <link href="http://yoursite.com/2016/03/12/Hexo%E8%87%AA%E5%AE%9A%E4%B9%89%E9%A1%B5%E9%9D%A2%E7%A6%81%E7%94%A8%E4%B8%BB%E9%A2%98/"/>
    <id>http://yoursite.com/2016/03/12/Hexo自定义页面禁用主题/</id>
    <published>2016-03-12T04:36:06.000Z</published>
    <updated>2016-03-12T04:57:52.969Z</updated>
    
    <content type="html">&lt;p&gt;在Hexo中添加自定义的网页，很容易就会被加载主题，使自己的网页变形，所以需要禁用主题，方法是在配置中添加跳过渲染的文件。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;禁用主题添加自定义页面&quot;&gt;&lt;a href=&quot;#禁用主题添加自定义页面&quot; class=&quot;headerlink&quot; title=&quot;禁用主题添加自定义页面&quot;&gt;&lt;/a&gt;禁用主题添加自定义页面&lt;/h2&gt;&lt;p&gt;  建立好博客雏形之后，想着快要求职投简历了，不如做一份网页简历，于是打算把aboutme作为简历展示。&lt;br&gt;  先在配置中开启about，然后Hexo g，发现在目录下自动建了about的文件夹，把代码放进去之后，提交，一打开发现自定义的页面被套了主题，完全变形了。这可不好。&lt;br&gt;  于是，关闭about，直接自己建个about文件夹，结果g了后被自动删除了，这可就不开心了。&lt;br&gt;  google之，找到 &lt;a href=&quot;https://github.com/hexojs/hexo/issues/1146#issuecomment-88380140&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Xuanwo的答案&lt;/a&gt;,抄录如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;skip_render使用了minimatch，开始匹配的位置是基于你的source_dir的，一般来说，是你的source文件夹下。下面我分别列举几种常见的情况进行说明：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;请注意yml中的文件格式，输入单个数据请注意空格，输入数组请进行缩进&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;单个文件夹下全部文件：skip_render: test/*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;单个文件夹下指定类型文件：skip_render: test/*.html&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;单个文件夹下全部文件以及子目录:skip_render: test/**&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;多个文件夹以及各种复杂情况：&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;skip_render:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    - `test1/*.html`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    - `test2/**`&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;  所以，我在config中的skip_render后加了about/&lt;em&gt;*,在source下建立about文件夹，把代码放进去，&lt;/em&gt;g -d*之后，about进入了代码库。刷新网页，然后点击about，正常了。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;在Hexo中添加自定义的网页，很容易就会被加载主题，使自己的网页变形，所以需要禁用主题，方法是在配置中添加跳过渲染的文件。&lt;br&gt;
    
    </summary>
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2016/03/11/hello-world/"/>
    <id>http://yoursite.com/2016/03/11/hello-world/</id>
    <published>2016-03-11T10:31:41.151Z</published>
    <updated>2016-03-11T10:31:41.119Z</updated>
    
    <content type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;.&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/writing.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Run-server&quot;&gt;&lt;a href=&quot;#Run-server&quot; class=&quot;headerlink&quot; title=&quot;Run server&quot;&gt;&lt;/a&gt;Run server&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/server.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Server&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Generate-static-files&quot;&gt;&lt;a href=&quot;#Generate-static-files&quot; class=&quot;headerlink&quot; title=&quot;Generate static files&quot;&gt;&lt;/a&gt;Generate static files&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo generate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/generating.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Generating&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Deploy-to-remote-sites&quot;&gt;&lt;a href=&quot;#Deploy-to-remote-sites&quot; class=&quot;headerlink&quot; title=&quot;Deploy to remote sites&quot;&gt;&lt;/a&gt;Deploy to remote sites&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/deployment.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Deployment&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;br&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>git配置ssh后提交仍需要密码</title>
    <link href="http://yoursite.com/2016/03/11/git%E9%85%8D%E7%BD%AEssh%E5%90%8E%E6%8F%90%E4%BA%A4%E4%BB%8D%E9%9C%80%E8%A6%81%E5%AF%86%E7%A0%81/"/>
    <id>http://yoursite.com/2016/03/11/git配置ssh后提交仍需要密码/</id>
    <published>2016-03-11T10:14:13.000Z</published>
    <updated>2016-03-11T10:34:56.990Z</updated>
    
    <content type="html">&lt;p&gt;每次在配置git环境的时候，都会有配置ssh秘钥的步骤，然后根据资料的提示确实配置成功了。但是，每次提交的时候仍然需要输入密码，总觉得自己配置ssh哪里可能出了问题，今天才知道原来是提交的姿势不对。&lt;br&gt;既然配置了ssh秘钥，那么在提交的时候也自然是要以ssh方式提交了。以前一直默认是https。所以，错咯，改吧。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Hexo博客ssh免密码提交&quot;&gt;&lt;a href=&quot;#Hexo博客ssh免密码提交&quot; class=&quot;headerlink&quot; title=&quot;Hexo博客ssh免密码提交&quot;&gt;&lt;/a&gt;Hexo博客ssh免密码提交&lt;/h2&gt;&lt;p&gt;  首先我找到了.deploy_git/.git/config，然后发现里面的远程链接是&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[branch &amp;quot;master&amp;quot;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    remote = https://github.com/jacean/jacean.github.io.git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    merge = refs/heads/master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;  所以我就把它改成了&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;[branch &amp;quot;master&amp;quot;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    remote = git@github.com:jacean/jacean.github.io.git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    merge = refs/heads/master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;  然后提交，刷新，发现还是不对。这可咋办，后来继续找，想起在设置和gitpage关联的时候在 _ config.yml里设置过git仓库。点开，发现里面果然也是https，于是赶紧改过来如下：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;deploy:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  type: git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  repository: git@github.com:jacean/jacean.github.io.git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  branch: master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;然后提交，果然好了，不用再输，密码了哈哈。&lt;br&gt;至于具体是哪个起作用的，把.git下的config改成https后还是不需要密码，所以，在Hex中主要是看的Hexo的设置。&lt;br&gt;但是，在其他项目中，因为我们直接是用的git，所以要想走git的ssh，还是需要把.git/config的远程连接改为ssh的模式。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;每次在配置git环境的时候，都会有配置ssh秘钥的步骤，然后根据资料的提示确实配置成功了。但是，每次提交的时候仍然需要输入密码，总觉得自己配置ssh哪里可能出了问题，今天才知道原来是提交的姿势不对。&lt;br&gt;既然配置了ssh秘钥，那么在提交的时候也自然是要以ssh方式提交了。以前一直默认是https。所以，错咯，改吧。&lt;br&gt;
    
    </summary>
    
    
      <category term="git" scheme="http://yoursite.com/tags/git/"/>
    
      <category term="hexo" scheme="http://yoursite.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Hello My HexoBlog</title>
    <link href="http://yoursite.com/2016/03/11/HelloHexo/"/>
    <id>http://yoursite.com/2016/03/11/HelloHexo/</id>
    <published>2016-03-11T02:50:42.000Z</published>
    <updated>2016-03-11T10:34:23.462Z</updated>
    
    <content type="html">&lt;h2 id=&quot;欢迎进入Hexo的世界。&quot;&gt;&lt;a href=&quot;#欢迎进入Hexo的世界。&quot; class=&quot;headerlink&quot; title=&quot;欢迎进入Hexo的世界。&quot;&gt;&lt;/a&gt;欢迎进入Hexo的世界。&lt;/h2&gt;&lt;p&gt;本博客使用Hexo构建，部署在github，访问 &lt;jacean.github.io&gt; 即可访问本站。&lt;br&gt;博主，万嘉庆，邮箱:jaceanwan@gmail.com。&lt;br&gt;这篇文章主要熟悉下markdown的语法。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/jacean.github.io&gt;&lt;/p&gt;
&lt;h2 id=&quot;MarkDown语法熟悉&quot;&gt;&lt;a href=&quot;#MarkDown语法熟悉&quot; class=&quot;headerlink&quot; title=&quot;MarkDown语法熟悉&quot;&gt;&lt;/a&gt;MarkDown语法熟悉&lt;/h2&gt;&lt;p&gt;参考文档：&lt;a href=&quot;http://www.jianshu.com/p/q81RER&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.jianshu.com/p/q81RER&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;标题语法&quot;&gt;&lt;a href=&quot;#标题语法&quot; class=&quot;headerlink&quot; title=&quot;标题语法&quot;&gt;&lt;/a&gt;标题语法&lt;/h3&gt;&lt;p&gt;  #作为标题的标志，一个即是一级标题，两个就是二级标题，直到6个。&lt;/p&gt;
&lt;h3 id=&quot;列表语法&quot;&gt;&lt;a href=&quot;#列表语法&quot; class=&quot;headerlink&quot; title=&quot;列表语法&quot;&gt;&lt;/a&gt;列表语法&lt;/h3&gt;&lt;p&gt;列表格式的话，只需要在文字前面加上 - 就可以了。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;C#&lt;/li&gt;
&lt;li&gt;C/C++&lt;/li&gt;
&lt;li&gt;Java&lt;/li&gt;
&lt;li&gt;Python&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果需要数字标号的话，直接加上1.，2.，3.即可.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;谷歌&lt;/li&gt;
&lt;li&gt;苹果&lt;/li&gt;
&lt;li&gt;微软&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;链接和图片&quot;&gt;&lt;a href=&quot;#链接和图片&quot; class=&quot;headerlink&quot; title=&quot;链接和图片&quot;&gt;&lt;/a&gt;链接和图片&lt;/h3&gt;&lt;p&gt;只需要使用“&lt;a href=&quot;链接地址&quot;&gt;显示文本&lt;/a&gt;”就可以实现超链接。比如，&lt;br&gt;&lt;a href=&quot;www.baidu.com&quot;&gt;百度&lt;/a&gt; .&lt;br&gt;插入图片也是差不多。“&lt;img src=&quot;图片链接地址&quot; alt=&quot;&quot;&gt;”。比如，&lt;br&gt;&lt;img src=&quot;http://ww4.sinaimg.cn/bmiddle/aa397b7fjw1dzplsgpdw5j.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;引用&quot;&gt;&lt;a href=&quot;#引用&quot; class=&quot;headerlink&quot; title=&quot;引用&quot;&gt;&lt;/a&gt;引用&lt;/h3&gt;&lt;p&gt;在引用的文字前面加上 &amp;gt; 就好了，不过记得中间留一个空格。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;中国人民从此站起来了！&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;粗体和斜体&quot;&gt;&lt;a href=&quot;#粗体和斜体&quot; class=&quot;headerlink&quot; title=&quot;粗体和斜体&quot;&gt;&lt;/a&gt;粗体和斜体&lt;/h3&gt;&lt;p&gt;两个&lt;em&gt;包含一段文本就是&lt;strong&gt;粗体&lt;/strong&gt;的用法，一个&lt;/em&gt;包含的就是&lt;em&gt;斜体&lt;/em&gt;了。&lt;/p&gt;
&lt;h3 id=&quot;表格&quot;&gt;&lt;a href=&quot;#表格&quot; class=&quot;headerlink&quot; title=&quot;表格&quot;&gt;&lt;/a&gt;表格&lt;/h3&gt;&lt;p&gt;主要就靠|和-来分割。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;学校&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;地点&lt;/th&gt;
&lt;th style=&quot;text-align:right&quot;&gt;专业&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;大连理工&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;辽宁大连&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;自动化&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;好像一定要对齐才行。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Tables&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;Are&lt;/th&gt;
&lt;th style=&quot;text-align:right&quot;&gt;Cool&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;col 3 is&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;right-aligned&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;$1600&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;col 2 is&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;centered&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;$12&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;zebra stripes&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;are neat&lt;/td&gt;
&lt;td style=&quot;text-align:right&quot;&gt;$1&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;加一句话，要在vim中使用系统剪切板，需要按shift+insert就行。&lt;/p&gt;
&lt;h3 id=&quot;插入代码&quot;&gt;&lt;a href=&quot;#插入代码&quot; class=&quot;headerlink&quot; title=&quot;插入代码&quot;&gt;&lt;/a&gt;插入代码&lt;/h3&gt;&lt;figure class=&quot;highlight c&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;()&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;printf&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;Hello Hexo!&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;欢迎进入Hexo的世界。&quot;&gt;&lt;a href=&quot;#欢迎进入Hexo的世界。&quot; class=&quot;headerlink&quot; title=&quot;欢迎进入Hexo的世界。&quot;&gt;&lt;/a&gt;欢迎进入Hexo的世界。&lt;/h2&gt;&lt;p&gt;本博客使用Hexo构建，部署在github，访问 &lt;jacean.github.io&gt; 即可访问本站。&lt;br&gt;博主，万嘉庆，邮箱:jaceanwan@gmail.com。&lt;br&gt;这篇文章主要熟悉下markdown的语法。&lt;br&gt;
    
    </summary>
    
    
      <category term="MarkDown" scheme="http://yoursite.com/tags/MarkDown/"/>
    
  </entry>
  
</feed>
