<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Jacean say Hello</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://jacean.github.io/"/>
  <updated>2016-03-16T16:28:41.181Z</updated>
  <id>http://jacean.github.io/</id>
  
  <author>
    <name>Jacean Wan</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>vim写markdown在浏览器实时预览</title>
    <link href="http://jacean.github.io/2016/03/17/vim%E5%86%99markdown%E5%9C%A8%E6%B5%8F%E8%A7%88%E5%99%A8%E5%AE%9E%E6%97%B6%E9%A2%84%E8%A7%88/"/>
    <id>http://jacean.github.io/2016/03/17/vim写markdown在浏览器实时预览/</id>
    <published>2016-03-16T16:24:38.000Z</published>
    <updated>2016-03-16T16:28:41.181Z</updated>
    
    <content type="html">&lt;p&gt;用了Hexo后，自然就不得不用markdown，而Ubuntu下不用Vim我不开心，于是就发现了&lt;em&gt;vim-instant-markdown&lt;/em&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;vim-instant-markdown（&lt;a href=&quot;https://github.com/suan/vim-instant-markdown&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/suan/vim-instant-markdown&lt;/a&gt; ） 的安装相比其他插件较为特殊，它由 ruby 开发，所以你的 vim 必须集成 ruby 解释器（见“1 源码安装编辑器 vim ”），并且安装 pygments.rb、redcarpet、instant-markdown-d 三个依赖库：&lt;br&gt;gem install pygments.rb&lt;br&gt;gem install redcarpet&lt;/p&gt;
&lt;h1 id=&quot;若系统提示无-npm-命令，你需要先执行-zypper-–no-refresh-install-nodejs&quot;&gt;&lt;a href=&quot;#若系统提示无-npm-命令，你需要先执行-zypper-–no-refresh-install-nodejs&quot; class=&quot;headerlink&quot; title=&quot;若系统提示无 npm 命令，你需要先执行 zypper –no-refresh install nodejs&quot;&gt;&lt;/a&gt;若系统提示无 npm 命令，你需要先执行 zypper –no-refresh install nodejs&lt;/h1&gt;&lt;p&gt;npm -g install instant-markdown-d&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;此文不全。。。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;用了Hexo后，自然就不得不用markdown，而Ubuntu下不用Vim我不开心，于是就发现了&lt;em&gt;vim-instant-markdown&lt;/em&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;vim-instant-markdown（&lt;a href=&quot;https://
    
    </summary>
    
    
      <category term="Hexo" scheme="http://jacean.github.io/tags/Hexo/"/>
    
      <category term="Vim" scheme="http://jacean.github.io/tags/Vim/"/>
    
      <category term="markdown" scheme="http://jacean.github.io/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu配置hexo和gitpage</title>
    <link href="http://jacean.github.io/2016/03/17/ubuntu%E9%85%8D%E7%BD%AEhexo%E5%92%8Cgitpage/"/>
    <id>http://jacean.github.io/2016/03/17/ubuntu配置hexo和gitpage/</id>
    <published>2016-03-16T16:10:11.000Z</published>
    <updated>2016-03-16T16:23:41.809Z</updated>
    
    <content type="html">&lt;p&gt;部署参考&lt;a href=&quot;https://hexo.io/zh-cn/docs/index.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方文档&lt;/a&gt;和&lt;a href=&quot;http://www.jianshu.com/p/465830080ea9&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;潘柏信 HEXO+Github,搭建属于自己的博客&lt;/a&gt;&lt;br&gt;按照官方文档一步步来没问题。最终完成很快的。&lt;/p&gt;
&lt;p&gt;有几个和文档不同的地方记下来。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;ol&gt;
&lt;li&gt;source下缺少_drafts&lt;blockquote&gt;
&lt;p&gt;安装 Hexo 完成后，请执行下列命令，Hexo 将会在指定文件夹中新建所需要的文件。&lt;br&gt;$ hexo init &lt;folder&gt;&lt;br&gt;$ cd &lt;folder&gt;&lt;br&gt;$ npm install&lt;br&gt;新建完成后，指定文件夹的目录如下：&lt;br&gt;.&lt;br&gt;├── _config.yml&lt;br&gt;├── package.json&lt;br&gt;├── scaffolds&lt;br&gt;├── source&lt;br&gt;| ├── _drafts&lt;br&gt;| └── _posts&lt;br&gt;└── themes&lt;/folder&gt;&lt;/folder&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;我的在source下缺少_drafts，自己新建个文件夹补上就成。需要的话在config里将drafts设为true。草稿。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;最后部署到github有点磕掺&lt;br&gt;在github新建仓库：jacean.github.io&lt;br&gt;你没有看错，仓库名就是这个，jacean换成自己的git用户名。&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# Deployment&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;## Docs: https://hexo.io/docs/deployment.html&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;deploy:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;type: git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;repository: https://github.com/jacean/jacean.github.io.git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;branch: master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;一定要写成这样，而且，注意，冒号之后有一个空格，没有空格的话就识别不出来，颜色也不对。我在这个问题上坑了好一会。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;安装主题&lt;br&gt;&lt;a href=&quot;https://hexo.io/themes/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://hexo.io/themes/&lt;/a&gt;&lt;br&gt;在这里找到喜欢的主题，点击名称进入作者的github，然后有命令提示一般。&lt;blockquote&gt;
&lt;p&gt;git clone &lt;a href=&quot;https://github.com/MOxFIVE/hexo-theme-yelee.git&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/MOxFIVE/hexo-theme-yelee.git&lt;/a&gt; themes/yelee&lt;br&gt;Change theme field in Hexo root’s _config.yml file. 修改 Hexo 根目录对应配置文件。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;theme: yelee&lt;br&gt;Update 更新&lt;/p&gt;
&lt;p&gt;cd themes/yelee&lt;br&gt;git pull&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;部署参考&lt;a href=&quot;https://hexo.io/zh-cn/docs/index.html&quot;&gt;官方文档&lt;/a&gt;和&lt;a href=&quot;http://www.jianshu.com/p/465830080ea9&quot;&gt;潘柏信 HEXO+Github,搭建属于自己的博客&lt;/a&gt;&lt;br&gt;按照官方文档一步步来没问题。最终完成很快的。&lt;/p&gt;
&lt;p&gt;有几个和文档不同的地方记下来。&lt;/p&gt;
    
    </summary>
    
    
      <category term="Hexo" scheme="http://jacean.github.io/tags/Hexo/"/>
    
      <category term="Ubuntu" scheme="http://jacean.github.io/tags/Ubuntu/"/>
    
      <category term="GitPage" scheme="http://jacean.github.io/tags/GitPage/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu无法访问双系统机子上的windows文件分区</title>
    <link href="http://jacean.github.io/2016/03/17/Ubuntu%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AE%E5%8F%8C%E7%B3%BB%E7%BB%9F%E6%9C%BA%E5%AD%90%E4%B8%8A%E7%9A%84windows%E6%96%87%E4%BB%B6%E5%88%86%E5%8C%BA/"/>
    <id>http://jacean.github.io/2016/03/17/Ubuntu无法访问双系统机子上的windows文件分区/</id>
    <published>2016-03-16T16:04:56.000Z</published>
    <updated>2016-03-16T16:09:15.703Z</updated>
    
    <content type="html">&lt;p&gt;装好Ubuntu用了几天，因为要用ps，所以回到win10，结果再回来发现无法进入windows的文件分区了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Error mounting /dev/sda1 at /media/jacean/系统保留: Command-line `mount -t “ntfs” -o “uhelper=udisks2,nodev,nosuid,uid=1000,gid=1000” “/dev/sda1” “/media/jacean/系统保留”‘ exited with non-zero exit status 14: The disk contains an unclean file system (0, 0).&lt;br&gt;Metadata kept in Windows cache, refused to mount.&lt;br&gt;Failed to mount ‘/dev/sda1’: 不允许的操作&lt;br&gt;The NTFS partition is in an unsafe state. Please resume and shutdown&lt;br&gt;Windows fully (no hibernation or fast restarting), or mount the volume&lt;br&gt;read-only with the ‘ro’ mount option.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;参考ubuntu提示和这篇&lt;a href=&quot;http://blog.sina.com.cn/s/blog_6b7bd17e0101eyz9.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;博客&lt;/a&gt;,确定问题是windows在win8以后添加的快速启动功能导致的.&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;快速启动有助于windows快速关机并迅速恢复,但是这是需要缓存当前状态,当ubuntu试图打开这些windows分区时,会发现这些缓存,认为是不安全的状态,为了不影响改变windows状态就会直接表示拒绝访问.并提示将windows完全关闭,取消快速启动.&lt;br&gt;当然,快速启动不影响重启,如果是重启的话是不会有这种问题的,只有选择关机在按电源开启才会.&lt;br&gt;&lt;img src=&quot;http://7xrtyi.com1.z0.glb.clouddn.com/hexoBlog_img_windowspower.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;有时候会发现启用快速启动的开关是灰色的没法点击,那就滚动到开头,有个&amp;lt;&amp;lt;&amp;lt;更改当前不可用设置&amp;gt;&amp;gt;&amp;gt;,把这个打开就行了,然后修改保存.大功告成.关机,开机试试.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;装好Ubuntu用了几天，因为要用ps，所以回到win10，结果再回来发现无法进入windows的文件分区了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Error mounting /dev/sda1 at /media/jacean/系统保留: Command-line `mount -t “ntfs” -o “uhelper=udisks2,nodev,nosuid,uid=1000,gid=1000” “/dev/sda1” “/media/jacean/系统保留”‘ exited with non-zero exit status 14: The disk contains an unclean file system (0, 0).&lt;br&gt;Metadata kept in Windows cache, refused to mount.&lt;br&gt;Failed to mount ‘/dev/sda1’: 不允许的操作&lt;br&gt;The NTFS partition is in an unsafe state. Please resume and shutdown&lt;br&gt;Windows fully (no hibernation or fast restarting), or mount the volume&lt;br&gt;read-only with the ‘ro’ mount option.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;参考ubuntu提示和这篇&lt;a href=&quot;http://blog.sina.com.cn/s/blog_6b7bd17e0101eyz9.html&quot;&gt;博客&lt;/a&gt;,确定问题是windows在win8以后添加的快速启动功能导致的.&lt;/p&gt;
    
    </summary>
    
    
      <category term="Ubuntu" scheme="http://jacean.github.io/tags/Ubuntu/"/>
    
      <category term="windows" scheme="http://jacean.github.io/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu15.10_VirtualBox出现virtualbox_kernel_driver_not_installed_(rc=-1908)</title>
    <link href="http://jacean.github.io/2016/03/16/Ubuntu15-10-VirtualBox%E5%87%BA%E7%8E%B0virtualbox-kernel-driver-not-installed-rc-1908/"/>
    <id>http://jacean.github.io/2016/03/16/Ubuntu15-10-VirtualBox出现virtualbox-kernel-driver-not-installed-rc-1908/</id>
    <published>2016-03-16T15:59:06.000Z</published>
    <updated>2016-03-16T16:03:35.691Z</updated>
    
    <content type="html">&lt;p&gt;就是在一个风和日丽的时候，Ubuntu提醒我更新软件，我更新了，然后我的VirtualBox就罢工了。&lt;br&gt;google答案呗，果然又在&lt;a href=&quot;http://askubuntu.com/questions/498900/vbox-on-14-04-kernel-driver-not-installed-rc-1908&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;askubuntu&lt;/a&gt;上找到了答案。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The fix for 14.04 is indeed different, but not that different:&lt;br&gt;sudo apt-get install linux-headers-generic build-essential dkms&lt;br&gt;sudo apt-get remove –purge virtualbox-dkms&lt;br&gt;sudo apt-get install virtualbox-dkms&lt;br&gt;The install virtualbox-dkms command was actually failing applying the 13.10 fix. By fully purging the package things got back to normal.&lt;br&gt;Update [17-01-2015]: In the latest iteration of this bug a restart to the system is required between the apt-get remove command and the second apt-get install.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;本来我安装的是5.0.16，结果更新后反倒成了5.0.14.然后我之前的虚拟机就打不开了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;The device helper structure version has changed.&lt;br&gt;If you have upgraded VirtualBox recently, please make sure you have terminated all VMs and upgraded any extension packs. If this error persists, try re-installing VirtualBox. (VERR_PDM_DEVHLPR3_VERSION_MISMATCH).&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;没办法，只能到官网重新下载了对应于5。0.14的扩展包安装。提示是否降级，降呗。&lt;/p&gt;
&lt;p&gt;ok，好了。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;就是在一个风和日丽的时候，Ubuntu提醒我更新软件，我更新了，然后我的VirtualBox就罢工了。&lt;br&gt;google答案呗，果然又在&lt;a href=&quot;http://askubuntu.com/questions/498900/vbox-on-14-04-kernel-driver-not-installed-rc-1908&quot;&gt;askubuntu&lt;/a&gt;上找到了答案。&lt;br&gt;
    
    </summary>
    
    
      <category term="Ubuntu" scheme="http://jacean.github.io/tags/Ubuntu/"/>
    
      <category term="VirtualBox" scheme="http://jacean.github.io/tags/VirtualBox/"/>
    
  </entry>
  
  <entry>
    <title>vim安装addons插件管理后Warning:Ignoring_unknown_addons:_winmanager</title>
    <link href="http://jacean.github.io/2016/03/16/vim%E5%AE%89%E8%A3%85addons%E6%8F%92%E4%BB%B6%E7%AE%A1%E7%90%86%E5%90%8EWarning-Ignoring-unknown-addons-winmanager/"/>
    <id>http://jacean.github.io/2016/03/16/vim安装addons插件管理后Warning-Ignoring-unknown-addons-winmanager/</id>
    <published>2016-03-16T15:55:50.000Z</published>
    <updated>2016-03-16T15:58:02.995Z</updated>
    
    <content type="html">&lt;blockquote&gt;
&lt;p&gt;jacean@jacean-Ubuntu:~$ vim-addons install winmanager&lt;br&gt;Warning: Ignoring unknown addons: winmanager&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;需要先&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;jacean@jacean-Ubuntu:~$ sudo apt-get install vim-scripts&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;OK了。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;jacean@jacean-Ubuntu:~$ vim-addons install taglist&lt;br&gt;Info: installing removed addon ‘taglist’ to /home/jacean/.vim&lt;br&gt;Info: Rebuilding tags since documentation has been modified …&lt;br&gt;Processing /home/jacean/.vim/doc/&lt;br&gt;Info: done.&lt;/p&gt;
&lt;/blockquote&gt;
</content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;jacean@jacean-Ubuntu:~$ vim-addons install winmanager&lt;br&gt;Warning: Ignoring unknown addons: winmanager&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;需要先&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;jacean@jacean-Ubuntu:~$ sudo apt-get install vim-scripts&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;OK了。&lt;br&gt;
    
    </summary>
    
    
      <category term="Vim" scheme="http://jacean.github.io/tags/Vim/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu安装Eclipse</title>
    <link href="http://jacean.github.io/2016/03/16/Ubuntu%E5%AE%89%E8%A3%85Eclipse/"/>
    <id>http://jacean.github.io/2016/03/16/Ubuntu安装Eclipse/</id>
    <published>2016-03-16T15:44:19.000Z</published>
    <updated>2016-03-16T15:54:01.998Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;http://www.jb51.net/article/55131.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;参考文章&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;首先到&lt;a href=&quot;http://www.oracle.com/technetwork/java/javase/downloads/下载jdk，我下载的是最新版jdk-8u20-linux-i586.tar.gz，下载完成使用命令&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.oracle.com/technetwork/java/javase/downloads/下载jdk，我下载的是最新版jdk-8u20-linux-i586.tar.gz，下载完成使用命令&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;sudo tar zxvf jdk-8u20-linux-i586.tar.gz&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;然后将解压好的jdk1.8.0_20文件夹复制到/usr/lib/jvm目录里&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;sudo cp -r ~/jdk1.8.0_20/ /usr/lib/jvm/&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;配置环境变量 &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;sudo gedit ~/.profile&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;在末尾加上：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;export JAVA_HOME=/usr/lib/jvm/jdk1.8.0_20&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;然后保存关闭，使用source更新下&lt;br&gt;source ~/.profile&lt;br&gt;使用env命令察看JAVA_HOME的值&lt;br&gt;env&lt;br&gt;如果显示JAVA_HOME=/usr/lib/jvm/jdk1.8.0_20，说明配置成功。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;修改系统默认的jdk，如下&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;sudo update-alternatives –install /usr/bin/java java /usr/lib/jvm/jdk1.8.0_20/bin/java 300&lt;br&gt;sudo update-alternatives –install /usr/bin/javac javac /usr/lib/jvm/jdk1.8.0_20/bin/javac 300&lt;br&gt;sudo update-alternatives –config java&lt;br&gt;sudo update-alternatives –config javac&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;查看java版本信息，&lt;br&gt;终端输入 java -version&lt;br&gt;看到如下信息，就说明修改Ok: &lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;java version “1.8.0_20”&lt;br&gt;Java(TM) SE Runtime Environment (build 1.8.0_20-b26)&lt;br&gt;Java HotSpot(TM) Client VM (build 25.20-b23, mixed mode)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;ubuntu下安装配置eclipse&lt;br&gt;去官网&lt;a href=&quot;http://developer.android.com/sdk/index.html下载了eclipse包adt-bundle-linux-x86-20140702.zip，下载后解压到你想放的文件夹中就可以了。&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://developer.android.com/sdk/index.html下载了eclipse包adt-bundle-linux-x86-20140702.zip，下载后解压到你想放的文件夹中就可以了。&lt;/a&gt;&lt;br&gt;解压命令 unzip adt-bundle-linux-x86-20140702.zip&lt;br&gt;我放在/home/kingqi/ADT目录下&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;将eclipse执行文件符号链接到/usr/local/bin。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;cd /usr/local/bin&lt;br&gt;sudo ln -s /home/kingqi/ADT/adt-bundle-linux-x86-20140702/eclipse/eclipse&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;ok，大功告成，打开终端，输入eclipse就可以启动了。&lt;br&gt;好吧，完全是转载了，出处在最前，我就再加一句。。。版本号按自己下载的来。&lt;br&gt;下载eclipse的时候，选择国内的镜像提供商下载速度快，尤其是教育网，直接用大连东软的就特别快，10多M。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://www.jb51.net/article/55131.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;参考文章&lt;/a&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;首先到&lt;a href=&quot;http://www.oracle.com
    
    </summary>
    
    
      <category term="Ubuntu" scheme="http://jacean.github.io/tags/Ubuntu/"/>
    
      <category term="Eclipse" scheme="http://jacean.github.io/tags/Eclipse/"/>
    
  </entry>
  
  <entry>
    <title>windows远程ubuntu的virtualbox中的windows虚拟机</title>
    <link href="http://jacean.github.io/2016/03/16/windows%E8%BF%9C%E7%A8%8Bubuntu%E7%9A%84virtualbox%E4%B8%AD%E7%9A%84windows%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    <id>http://jacean.github.io/2016/03/16/windows远程ubuntu的virtualbox中的windows虚拟机/</id>
    <published>2016-03-16T15:41:41.000Z</published>
    <updated>2016-03-16T15:43:02.188Z</updated>
    
    <content type="html">&lt;p&gt;想着以后要把ubuntu作为工作环境，但是windows中的C#开发还是得继续，所以就把之前windows中virtualbox的虚拟几在ubuntu中打开，我一般都是远程的，所以得把这个windows7虚拟机配置的能够在外网远程控制就好。&lt;br&gt;很简单了，在virtualBox中设置网卡为桥接，然后在win7中设置获取固定ip，然后在路由器中端口映射到这个ip，直接远程这个ip就可以了。保险的话还可以把这个ip来个mac绑定。&lt;br&gt;我把虚拟机的ip设为：192.168.xxruurx.197，开启允许远程&lt;br&gt;路由器中设置：路由器公网ip:1234===&amp;gt;192.168.xxx.197:3389&lt;br&gt;然后找一台windows电脑，mstsc后输入192.168.xxx.197:3389，就ok了。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;想着以后要把ubuntu作为工作环境，但是windows中的C#开发还是得继续，所以就把之前windows中virtualbox的虚拟几在ubuntu中打开，我一般都是远程的，所以得把这个windows7虚拟机配置的能够在外网远程控制就好。&lt;br&gt;很简单了，在virtual
    
    </summary>
    
    
      <category term="windows" scheme="http://jacean.github.io/tags/windows/"/>
    
      <category term="ubuntu" scheme="http://jacean.github.io/tags/ubuntu/"/>
    
      <category term="虚拟机" scheme="http://jacean.github.io/tags/%E8%99%9A%E6%8B%9F%E6%9C%BA/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu安装搜狗输入法不出现或是不显示输入法切换</title>
    <link href="http://jacean.github.io/2016/03/16/ubuntu%E5%AE%89%E8%A3%85%E6%90%9C%E7%8B%97%E8%BE%93%E5%85%A5%E6%B3%95%E4%B8%8D%E5%87%BA%E7%8E%B0%E6%88%96%E6%98%AF%E4%B8%8D%E6%98%BE%E7%A4%BA%E8%BE%93%E5%85%A5%E6%B3%95%E5%88%87%E6%8D%A2/"/>
    <id>http://jacean.github.io/2016/03/16/ubuntu安装搜狗输入法不出现或是不显示输入法切换/</id>
    <published>2016-03-16T15:30:18.000Z</published>
    <updated>2016-03-16T15:40:54.696Z</updated>
    
    <content type="html">&lt;p&gt;不管在什么系统下，输入法始终是和系统交互最重要的东西。&lt;br&gt;转移到Ubuntu后，自然也要换个好点的输入法，一般就选搜狗咯，毕竟bing没占这一块。。。&lt;br&gt;首先下载搜狗拼音for linux  ：&lt;a href=&quot;http://pinyin.sogou.com/linux/?r=pinyin&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://pinyin.sogou.com/linux/?r=pinyin&lt;/a&gt;&lt;br&gt;双击deb文件安装，安全性问题同意，然后再有啥的话安装、修复之类，总之显示安装完毕就成。&lt;br&gt;但是安装之后你会发现，切换输入法中还是没有搜狗 输入法，甚至连在菜单栏上显示的输入法图标都没有了。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在安装完毕搜狗输入法后你会发现同时安装了fctix的软件，这是因为Linux输入法暂时有两种框架，一种是ibus，一种是fctix，搜狗输入法属于fcitx，所以需要同时安装这个框架才行。我装的ubuntu默认的输入框架是ibus，所以首先你的切换到fcitx。&lt;br&gt;&lt;img src=&quot;http://7xrtyi.com1.z0.glb.clouddn.com/hexoBlog_img_sougou-1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xrtyi.com1.z0.glb.clouddn.com/hexoBlog_img_sougou-2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;这样的话框架就调过来了。但是这样你会发现并没有什么卵用，所以还需要接着来。&lt;br&gt;在终端：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;jacean@jacean-Ubuntu:~$ fcitx autostart&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://7xrtyi.com1.z0.glb.clouddn.com/hexoBlog_img_sougou-4.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;jacean@jacean-Ubuntu:~$ fcitx-diagnose&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;#&lt;a href=&quot;http://7xrtyi.com1.z0.glb.clouddn.com/hexoBlog_img_sougou-5.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;看到提示了吧，现在就可以开始用了，搜狗给你不一般的体验。。。。。。&lt;br&gt;&lt;img src=&quot;http://7xrtyi.com1.z0.glb.clouddn.com/hexoBlog_img_sougou-6.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;不管在什么系统下，输入法始终是和系统交互最重要的东西。&lt;br&gt;转移到Ubuntu后，自然也要换个好点的输入法，一般就选搜狗咯，毕竟bing没占这一块。。。&lt;br&gt;首先下载搜狗拼音for linux  ：&lt;a href=&quot;http://pinyin.sogou.com/linux/?r=pinyin&quot;&gt;http://pinyin.sogou.com/linux/?r=pinyin&lt;/a&gt;&lt;br&gt;双击deb文件安装，安全性问题同意，然后再有啥的话安装、修复之类，总之显示安装完毕就成。&lt;br&gt;但是安装之后你会发现，切换输入法中还是没有搜狗 输入法，甚至连在菜单栏上显示的输入法图标都没有了。&lt;br&gt;
    
    </summary>
    
    
      <category term="Ubuntu" scheme="http://jacean.github.io/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>win10安装ubuntu15.0双系统遇到(initramfs)unable_to_find_a_medium_containing_a_live_file</title>
    <link href="http://jacean.github.io/2016/03/16/win10%E5%AE%89%E8%A3%85ubuntu15-0%E5%8F%8C%E7%B3%BB%E7%BB%9F%E9%81%87%E5%88%B0-initramfs-unable-to-find-a-medium-containing-a-live-file/"/>
    <id>http://jacean.github.io/2016/03/16/win10安装ubuntu15-0双系统遇到-initramfs-unable-to-find-a-medium-containing-a-live-file/</id>
    <published>2016-03-16T15:18:24.000Z</published>
    <updated>2016-03-16T15:29:57.385Z</updated>
    
    <content type="html">&lt;p&gt;因为要把工作环境转移到Ubuntu,所以自然不能只用虚拟机了。而之前的Ubuntu麒麟系统用起来有点不爽，于是就直接重装吧，装的是15.10，但是呢，一起安装双系统，三系统一点问题都没有的我，这次遇到问题了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;(initramfs)unable to find a  medium  containing a  live  file&lt;br&gt;遇到这个问题我也头大了，因为以前装的时候都好好地，完全没啥风险，这次出问题简直始料未及啊。当下就赶紧查资料，果不其然，国内的方法都不好使或者是根本就没啥方法，于是google之。不过google也不是很给力啊，也是很多废答案。不过万幸找到了，在看完好多英文解答之后才找到的，发现原因后当时就哭了。&lt;br&gt;最终最有效最简单的办法是在&lt;a href=&quot;http://askubuntu.com/questions/15425/error-when-installing-unable-to-find-a-medium-containing-a-live-file-system&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;askubuntu&lt;/a&gt;上找到的。&lt;br&gt;For me changing from USB 3.0 socket to 2.0 helped. I’m using 10.04 Ubuntu on Asus 1015PEM.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;原来仅仅是因为我把u盘插在了3.0的口上。。。。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://askubuntu.com/questions/221835/installing-ubuntu-on-a-pre-installed-windows-with-uefi?lq=1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;有个答案特别好，完美的分析了win和Ubuntu怎么互相搞，真的特别棒，您看看吧，就看一看啊。我真的耐着性子看了这么多英文，然后发现对我的问题并没有什么卵用，不开心。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;因为要把工作环境转移到Ubuntu,所以自然不能只用虚拟机了。而之前的Ubuntu麒麟系统用起来有点不爽，于是就直接重装吧，装的是15.10，但是呢，一起安装双系统，三系统一点问题都没有的我，这次遇到问题了。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;(initramfs)u
    
    </summary>
    
    
      <category term="Ubuntu" scheme="http://jacean.github.io/tags/Ubuntu/"/>
    
      <category term="win10" scheme="http://jacean.github.io/tags/win10/"/>
    
      <category term="双系统" scheme="http://jacean.github.io/tags/%E5%8F%8C%E7%B3%BB%E7%BB%9F/"/>
    
  </entry>
  
  <entry>
    <title>自定义shell实现hexo常用命令</title>
    <link href="http://jacean.github.io/2016/03/16/%E8%87%AA%E5%AE%9A%E4%B9%89shell%E5%AE%9E%E7%8E%B0hexo%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    <id>http://jacean.github.io/2016/03/16/自定义shell实现hexo常用命令/</id>
    <published>2016-03-16T13:38:27.000Z</published>
    <updated>2016-03-16T14:38:29.384Z</updated>
    
    <content type="html">&lt;p&gt;利用Hexo搭建好博客之后，如果要新建或是生产都必须先切换到blog的根目录，然后在编辑文件的时候又得切换目录。但是一般，也就是新建直接编辑，那么多命令也是麻烦。&lt;br&gt;超过3行的持续输入已经令人产生厌烦，所以需要批处理来解决。在ubuntu下就是shell了。&lt;br&gt;于是就看了会Shell，自定义一些命令来简化操作。实现如下&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;~Hexonew 自定义shell实现hexo常用命令&lt;br&gt;change dir to /home/jacean/HexoBlog/source/_posts&lt;br&gt;INFO  Created: ~/HexoBlog/source/_posts/自定义shell实现hexo常用命令.md&lt;br&gt;hexo new 自定义shell实现hexo常用命令&lt;br&gt;gvim 自定义shell实现hexo常用命令&lt;br&gt;~hexogd&lt;br&gt;INFO  Start processing&lt;br&gt;INFO  Files loaded in 659 ms&amp;gt;&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;Shell基础&quot;&gt;&lt;a href=&quot;#Shell基础&quot; class=&quot;headerlink&quot; title=&quot;Shell基础&quot;&gt;&lt;/a&gt;Shell基础&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;http://jacean.github.io/2016/03/16/Shell%E5%85%A5%E9%97%A8/&quot;&gt;Shell入门&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Hexo命令&quot;&gt;&lt;a href=&quot;#Hexo命令&quot; class=&quot;headerlink&quot; title=&quot;Hexo命令&quot;&gt;&lt;/a&gt;Hexo命令&lt;/h2&gt;&lt;p&gt;默认Shell的解释器是bash，所以我就直接在bash的相关文件里应用更改。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在$HOME下建立文件夹&lt;em&gt;mycmd&lt;/em&gt;,在里面建立脚本文件。&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;hexonew.sh&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/bin/bash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;path=~/HexoBlog/source/_posts&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;current=$0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd $path&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;change dir to $path&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if [ $# -ge 1 ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;then&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    for f in $*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    do  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        hexo new $f&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        echo &amp;quot;hexo new $f &amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#        hexo g&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        gvim $f.md&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        echo &amp;quot;gvim $f&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    done&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;else&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    echo &amp;quot;parm error,need file1[,file2...]&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fi&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#echo &amp;quot;change dir to $current&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;cd ~&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这段代码实现的是hexo的new，new后同时编辑文件，如果是多个就同时打开编辑。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;myalias&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;alias hexogd=&amp;quot;cd ~/HexoBlog; hexo g -d;cd ~&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;alias hexog=&amp;quot;cd ~/HexoBlog; hexo g;cd ~&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;alias hexod=&amp;quot;cd ~/HexoBlog; hexo d;cd ~&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;alias hexop=&amp;quot;cd ~/HexoBlog/source/_posts&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;alias hexonew=&amp;quot;. hexonew.sh&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这段代码前3句是直接建立别名来执行命令，后一句是执行上一个hexonew.sh。那个&lt;em&gt;.&lt;/em&gt;的意思是直接在本Shell下执行，不必新开子进程。&lt;br&gt;不过现在还不好使，需要在bash那里配置下。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;配置.bashrc&lt;br&gt;bash的配置文件在etc/和home文件夹之下都有，明显就是针对用户的设置，所以我选择编辑home下的.bashrc，个人习惯。&lt;br&gt;在末尾添加&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;if [ -d &amp;quot;$HOME/mycmd&amp;quot; ]; then&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	PATH=$PATH:~/mycmd&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fi&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if [ -f &amp;quot;$HOME/mycmd/myalias&amp;quot; ]; then&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	. ~/mycmd/myalias&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fi&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;第一个是把mycmd的路径加入path，第二个是把别名文件载入，这样的话别名文件里加载的hexonew.sh也就可以直接用了。&lt;/p&gt;
&lt;p&gt;至此，大功告成，执行那几个命令都有相对实现，也不用再收到切换目录了。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;利用Hexo搭建好博客之后，如果要新建或是生产都必须先切换到blog的根目录，然后在编辑文件的时候又得切换目录。但是一般，也就是新建直接编辑，那么多命令也是麻烦。&lt;br&gt;超过3行的持续输入已经令人产生厌烦，所以需要批处理来解决。在ubuntu下就是shell了。&lt;br&gt;于是就看了会Shell，自定义一些命令来简化操作。实现如下&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;~Hexonew 自定义shell实现hexo常用命令&lt;br&gt;change dir to /home/jacean/HexoBlog/source/_posts&lt;br&gt;INFO  Created: ~/HexoBlog/source/_posts/自定义shell实现hexo常用命令.md&lt;br&gt;hexo new 自定义shell实现hexo常用命令&lt;br&gt;gvim 自定义shell实现hexo常用命令&lt;br&gt;~hexogd&lt;br&gt;INFO  Start processing&lt;br&gt;INFO  Files loaded in 659 ms&amp;gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="Shell" scheme="http://jacean.github.io/tags/Shell/"/>
    
      <category term="hexo" scheme="http://jacean.github.io/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>Vim操作</title>
    <link href="http://jacean.github.io/2016/03/16/Vim%E6%93%8D%E4%BD%9C/"/>
    <id>http://jacean.github.io/2016/03/16/Vim操作/</id>
    <published>2016-03-16T09:32:53.000Z</published>
    <updated>2016-03-16T14:40:36.412Z</updated>
    
    <content type="html">&lt;p&gt;vim是号称编辑器之神的编辑器，一段时间的使用之后我觉得我也爱上了它。&lt;br&gt;但是vim的操作技巧实在太多，得慢慢适应。所以就把一些自己不常用的操作在这里记录下，持续更新吧。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;分屏操作&quot;&gt;&lt;a href=&quot;#分屏操作&quot; class=&quot;headerlink&quot; title=&quot;分屏操作&quot;&gt;&lt;/a&gt;分屏操作&lt;/h2&gt;&lt;h3 id=&quot;启动分屏&quot;&gt;&lt;a href=&quot;#启动分屏&quot; class=&quot;headerlink&quot; title=&quot;启动分屏&quot;&gt;&lt;/a&gt;启动分屏&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;使用大写的参数O来垂直分屏，小写o是水平分屏，n表示的是分成几个屏。&lt;blockquote&gt;
&lt;p&gt;vim -O&lt;em&gt;n&lt;/em&gt; file1 file2 …&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;关闭当前窗口&lt;blockquote&gt;
&lt;p&gt;Ctrl+W c&lt;br&gt;Ctrl+W q,关闭当前窗口，如果只剩最后一个了则退出vim&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;上下分开当前打开的文件&lt;blockquote&gt;
&lt;p&gt;Ctrl+W s&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;上下分开，并打开新文件&lt;blockquote&gt;
&lt;p&gt;:sp filename&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;左右分割当前打开的文件&lt;blockquote&gt;
&lt;p&gt;Ctrl+W v&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;左右分割，并打开新文件&lt;blockquote&gt;
&lt;p&gt;:vsp filename&lt;/p&gt;
&lt;h3 id=&quot;多屏切换光标&quot;&gt;&lt;a href=&quot;#多屏切换光标&quot; class=&quot;headerlink&quot; title=&quot;多屏切换光标&quot;&gt;&lt;/a&gt;多屏切换光标&lt;/h3&gt;&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;把光标移到右边的屏。&lt;blockquote&gt;
&lt;p&gt;Ctrl+W l&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;把光标移到左边的屏中。&lt;blockquote&gt;
&lt;p&gt;Ctrl+W h&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;把光标移到上边的屏中。&lt;blockquote&gt;
&lt;p&gt;Ctrl+W k&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;把光标移到下边的屏中。&lt;blockquote&gt;
&lt;p&gt;Ctrl+W j&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;把光标移到下一个的屏中。.&lt;blockquote&gt;
&lt;p&gt;Ctrl+W w&lt;/p&gt;
&lt;h3 id=&quot;移动分屏&quot;&gt;&lt;a href=&quot;#移动分屏&quot; class=&quot;headerlink&quot; title=&quot;移动分屏&quot;&gt;&lt;/a&gt;移动分屏&lt;/h3&gt;&lt;p&gt;这个功能还是使用了Vim的光标键，只不过都是大写。当然了，如果你的分屏很乱很复杂的话，这个功能可能会出现一些非常奇怪的症状。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;向右移动。&lt;blockquote&gt;
&lt;p&gt;Ctrl+W L&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;向左移动&lt;blockquote&gt;
&lt;p&gt;Ctrl+W H&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;向上移动&lt;blockquote&gt;
&lt;p&gt;Ctrl+W K&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;向下移动&lt;blockquote&gt;
&lt;p&gt;Ctrl+W J&lt;/p&gt;
&lt;h3 id=&quot;分屏尺寸&quot;&gt;&lt;a href=&quot;#分屏尺寸&quot; class=&quot;headerlink&quot; title=&quot;分屏尺寸&quot;&gt;&lt;/a&gt;分屏尺寸&lt;/h3&gt;&lt;p&gt;下面是改变尺寸的一些操作，主要是高度，对于宽度你可以使用[Ctrl+W &amp;lt;]或是[Ctrl+W &amp;gt;]，但这可能需要最新的版本才支持。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;让所有的屏都有一样的高度。&lt;blockquote&gt;
&lt;p&gt;Ctrl+W =&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;增加高度。&lt;blockquote&gt;
&lt;p&gt;Ctrl+W +&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;li&gt;减少高度。&lt;blockquote&gt;
&lt;p&gt;Ctrl+W -&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;vim是号称编辑器之神的编辑器，一段时间的使用之后我觉得我也爱上了它。&lt;br&gt;但是vim的操作技巧实在太多，得慢慢适应。所以就把一些自己不常用的操作在这里记录下，持续更新吧。&lt;br&gt;
    
    </summary>
    
    
      <category term="Vim" scheme="http://jacean.github.io/tags/Vim/"/>
    
  </entry>
  
  <entry>
    <title>Shell入门</title>
    <link href="http://jacean.github.io/2016/03/16/Shell%E5%85%A5%E9%97%A8/"/>
    <id>http://jacean.github.io/2016/03/16/Shell入门/</id>
    <published>2016-03-16T09:12:51.000Z</published>
    <updated>2016-03-16T11:50:09.710Z</updated>
    
    <content type="html">&lt;p&gt;入门参考&lt;a href=&quot;http://c.biancheng.net/cpp/shell/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Linux Shell脚本教程：30分钟玩转Shell脚本编程&lt;/a&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Shell本身是一个用C语言编写的程序，是用户使用Unix/Linux的桥梁。&lt;br&gt;Shell既是一种命令语言，又是一种程序设计语言。作为命令语言，交互式的解释和执行用户输入的命令;作为程序设计语言，定义了各种变量和参数，并提供了许多在高级语言中才具有的控制结构，包括循环和分支。&lt;br&gt;它虽然不是Unix/Linux系统内核的一部分，但它调用了系统核心的大部分功能来执行程序、建立文件并以并行的方式协调各个程序的运行。因此，对于用户来说，shell是最重要的实用程序，深入了解和熟练掌握shell的特性极其使用方法，是用好Unix/Linux系统的关键。&lt;br&gt;可以说，shell使用的熟练程度反映了用户对Unix/Linux使用的熟练程度。&lt;br&gt;Shell脚本是解释型的，不需要编译。可通过交互式(Interactive)和批处理(Batch)两种方式执行。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;初识&quot;&gt;&lt;a href=&quot;#初识&quot; class=&quot;headerlink&quot; title=&quot;初识&quot;&gt;&lt;/a&gt;初识&lt;/h3&gt;&lt;p&gt;Linux的标准默认shell脚本解释器是bash。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;通过-#!/bin/bash-标记使用的是哪一种Shell解释器。 &lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/bin/bash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;Hello World !&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;ol&gt;
&lt;li&gt;执行Shell&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;chmod +x ./test.sh  #使脚本具有执行权限&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;./test.sh  #执行脚本&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;注意，一定要写成./test.sh，而不是test.sh。运行其它二进制的程序也一样，直接写test.sh，linux系统会去PATH里寻找有没有叫test.sh的，而只有/bin, /sbin, /usr/bin，/usr/sbin等在PATH里，你的当前目录通常不在PATH里，所以写成test.sh是会找不到命令的，要用./test.sh告诉系统说，就在当前目录找。&lt;br&gt;通过这种方式运行bash脚本，第一行一定要写对，好让系统查找到正确的解释器。&lt;br&gt;这里的”系统”，其实就是shell这个应用程序（想象一下Windows Explorer），但我故意写成系统，是方便理解，既然这个系统就是指shell，那么一个使用/bin/sh作为解释器的脚本是不是可以省去第一行呢？是的。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/bin/bash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;Hello&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;read PERSON&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;Nice to meet you ,$PERSON&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;blockquote&gt;
&lt;p&gt;jacean@jacean-Ubuntu:~$ info chmod&lt;br&gt;jacean@jacean-Ubuntu:~$ chmod +x ~/workspace/test.sh&lt;br&gt;jacean@jacean-Ubuntu:~$ ~/workspace/test.sh&lt;br&gt;Hello&lt;br&gt;wanja&lt;br&gt;Nice to meet you ,wanja&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;解释器运行&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;/bin/sh test.sh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;/bin/php test.php&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这种方式运行的脚本，不需要在第一行指定解释器信息，写了也没用。&lt;/p&gt;
&lt;h3 id=&quot;变量&quot;&gt;&lt;a href=&quot;#变量&quot; class=&quot;headerlink&quot; title=&quot;变量&quot;&gt;&lt;/a&gt;变量&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;定义变量&lt;br&gt;定义变量时，变量名不加美元符号（$），如：&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;variableName=&amp;quot;value&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;myUrl=&amp;quot;http://see.xidian.edu.cn/cpp/linux/&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;myNum=100&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;注意，变量名和等号之间不能有空格，这可能和你熟悉的所有编程语言都不一样。同时，变量名的命名须遵循如下规则：&lt;br&gt;首个字符必须为字母（a-z，A-Z）。&lt;br&gt;中间不能有空格，可以使用下划线（_）。&lt;br&gt;不能使用标点符号。&lt;br&gt;不能使用bash里的关键字（可用help命令查看保留关键字）。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;使用变量&lt;br&gt;使用一个定义过的变量，只要在变量名前面加美元符号（$）即可，如：&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;your_name=&amp;quot;mozhiyan&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo $your_name&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo $&amp;#123;your_name&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;变量名外面的花括号是可选的，加不加都行，加花括号是为了帮助解释器识别变量的边界，比如下面这种情况：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;for skill in Ada Coffe Action Java &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;do&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    echo &amp;quot;I am good at $&amp;#123;skill&amp;#125;Script&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;done&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;如果不给skill变量加花括号，写成echo “I am good at $skillScript”，解释器就会把$skillScript当成一个变量（其值为空），代码执行结果就不是我们期望的样子了。&lt;br&gt;推荐给所有变量加上花括号，这是个好的编程习惯。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;重新定义变量&lt;br&gt;已定义的变量，可以被重新定义，如：&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;myUrl=&amp;quot;http://see.xidian.edu.cn/cpp/linux/&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo $&amp;#123;myUrl&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;myUrl=&amp;quot;http://see.xidian.edu.cn/cpp/shell/&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo $&amp;#123;myUrl&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样写是合法的，但注意，第二次赋值的时候不能写&lt;em&gt; $myUrl=”&lt;a href=&quot;http://see.xidian.edu.cn/cpp/shell/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://see.xidian.edu.cn/cpp/shell/&lt;/a&gt;“&lt;/em&gt;，使用变量的时候才加美元符（$）。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;只读变量&lt;br&gt;使用 readonly 命令可以将变量定义为只读变量，只读变量的值不能被改变。&lt;br&gt;下面的例子尝试更改只读变量，结果报错：&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/bin/bash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;myUrl=&amp;quot;http://see.xidian.edu.cn/cpp/shell/&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;readonly myUrl&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;myUrl=&amp;quot;http://see.xidian.edu.cn/cpp/danpianji/&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;运行脚本，结果如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;/bin/sh: NAME: This variable is read only.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;删除变量&lt;br&gt;使用 unset 命令可以删除变量。语法：&lt;blockquote&gt;
&lt;p&gt;unset variable_name&lt;br&gt;变量被删除后不能再次使用；unset 命令不能删除只读变量。&lt;br&gt;举个例子：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/bin/sh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;myUrl=&amp;quot;http://see.xidian.edu.cn/cpp/u/xitong/&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;unset myUrl&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo $myUrl&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面的脚本没有任何输出。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;变量类型&lt;br&gt;运行shell时，会同时存在三种变量：&lt;ul&gt;
&lt;li&gt;局部变量&lt;br&gt;局部变量在脚本或命令中定义，仅在当前shell实例中有效，其他shell启动的程序不能访问局部变量。&lt;/li&gt;
&lt;li&gt;环境变量&lt;br&gt;所有的程序，包括shell启动的程序，都能访问环境变量，有些程序需要环境变量来保证其正常运行。必要的时候shell脚本也可以定义环境变量。&lt;/li&gt;
&lt;li&gt;shell变量&lt;br&gt;shell变量是由shell程序设置的特殊变量。shell变量中有一部分是环境变量，有一部分是局部变量，这些变量保证了shell的正常运行&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;特殊变量&lt;blockquote&gt;
&lt;p&gt;$0    当前脚本的文件名&lt;br&gt;$n    传递给脚本或函数的参数。n 是一个数字，表示第几个参数。例如，第一个参数是$1，第二个参数是$2。&lt;br&gt;$#    传递给脚本或函数的参数个数。&lt;br&gt;$&lt;em&gt;    传递给脚本或函数的所有参数。&lt;br&gt;$@    传递给脚本或函数的所有参数。被双引号(“ “)包含时，与 $&lt;/em&gt; 稍有不同，下面将会讲到。&lt;br&gt;$?    上个命令的退出状态，或函数的返回值。&lt;br&gt;$$    当前Shell进程ID。对于 Shell 脚本，就是这些脚本所在的进程ID。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;$&lt;em&gt; 和 $@ 的区别&lt;br&gt;$&lt;/em&gt; 和 $@ 都表示传递给函数或脚本的所有参数，不被双引号(“ “)包含时，都以”$1” “$2” … “$n” 的形式输出所有参数。&lt;br&gt;但是当它们被双引号(“ “)包含时，”$*” 会将所有的参数作为一个整体，以”$1 $2 … $n”的形式输出所有参数；”$@” 会将各个参数分开，以”$1” “$2” … “$n” 的形式输出所有参数。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/bin/bash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;\$*=&amp;quot; $*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;\&amp;quot;\$*\&amp;quot;=&amp;quot; &amp;quot;$*&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;\$@=&amp;quot; $@&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;\&amp;quot;\$@\&amp;quot;=&amp;quot; &amp;quot;$@&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;print each param from \$*&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for var in $*&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;do&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    echo &amp;quot;$var&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;done&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;print each param from \$@&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for var in $@&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;do&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    echo &amp;quot;$var&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;done&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;print each param from \&amp;quot;\$*\&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for var in &amp;quot;$*&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;do&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    echo &amp;quot;$var&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;done&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;print each param from \&amp;quot;\$@\&amp;quot;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;for var in &amp;quot;$@&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;do&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    echo &amp;quot;$var&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;done&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;$&lt;em&gt;=  a b c d&lt;br&gt;“$&lt;/em&gt;“= a b c d&lt;br&gt;$@=  a b c d&lt;br&gt;“$@”= a b c d&lt;br&gt;print each param from $&lt;em&gt;&lt;br&gt;a&lt;br&gt;b&lt;br&gt;c&lt;br&gt;d&lt;br&gt;print each param from $@&lt;br&gt;a&lt;br&gt;b&lt;br&gt;c&lt;br&gt;d&lt;br&gt;print each param from “$&lt;/em&gt;“&lt;br&gt;a b c d&lt;br&gt;print each param from “$@”&lt;br&gt;a&lt;br&gt;b&lt;br&gt;c&lt;br&gt;d&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;命令替换&lt;br&gt;命令替换是指Shell可以先执行命令，将输出结果暂时保存，在适当的地方输出。&lt;br&gt;命令替换的语法：&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;command&lt;/code&gt;&lt;br&gt;注意是反引号，不是单引号，这个键位于 Esc 键下方。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;DATE=`date`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;Date is $DATE&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;USERS=`who | wc -l`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;Logged in user are $USERS&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UP=`date ; uptime`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;Uptime is $UP&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;运行结果：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Date is Thu Jul  2 03:59:57 MST 2009&lt;br&gt;Logged in user are 1&lt;br&gt;Uptime is Thu Jul  2 03:59:57 MST 2009&lt;br&gt;03:59:57 up 20 days, 14:03,  1 user,  load avg: 0.13, 0.07, 0.15&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;变量替换&lt;br&gt;变量替换可以根据变量的状态（是否为空、是否定义等）来改变它的值&lt;br&gt;可以使用的变量替换形式：&lt;blockquote&gt;
&lt;p&gt;${var}    变量本来的值&lt;br&gt;${var:-word}    如果变量 var 为空或已被删除(unset)，那么返回 word，但不改变 var 的值。&lt;br&gt;${var:=word}    如果变量 var 为空或已被删除(unset)，那么返回 word，并将 var 的值设置为 word。&lt;br&gt;${var:?message}    如果变量 var 为空或已被删除(unset)，那么将消息 message 送到标准错误输出，可以用来检测变量 var 是否可以被正常赋值。&lt;br&gt;若此替换出现在Shell脚本中，那么脚本将停止运行。&lt;br&gt;${var:+word}    如果变量 var 被定义，那么返回 word，但不改变 var 的值。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;运算符&quot;&gt;&lt;a href=&quot;#运算符&quot; class=&quot;headerlink&quot; title=&quot;运算符&quot;&gt;&lt;/a&gt;运算符&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;expr 是一款表达式计算工具，使用它能完成表达式的求值操作。&lt;br&gt;例如，两个数相加：&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/bin/bash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;val=`expr 2 + 2`&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;quot;Total value : $val&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;运行脚本输出：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Total value : 4&lt;br&gt;两点注意：&lt;br&gt;-表达式和运算符之间要有空格，例如 2+2 是不对的，必须写成 2 + 2，这与我们熟悉的大多数编程语言不一样。&lt;br&gt;-完整的表达式要被 &lt;code&gt; &lt;/code&gt; 包含，注意这个字符不是常用的单引号，在 Esc 键下边。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;算术运算符&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;+    加法    &lt;code&gt;expr $a + $b&lt;/code&gt; 结果为 30。&lt;/li&gt;
&lt;li&gt;-    减法    &lt;code&gt;expr $a - $b&lt;/code&gt; 结果为 10。&lt;/li&gt;
&lt;li&gt;*    乘法    &lt;code&gt;expr $a \* $b&lt;/code&gt; 结果为  200。&lt;/li&gt;
&lt;li&gt;\/    除法    &lt;code&gt;expr $b / $a&lt;/code&gt; 结果为 2。&lt;/li&gt;
&lt;li&gt;\%    取余    &lt;code&gt;expr $b % $a&lt;/code&gt; 结果为 0。&lt;/li&gt;
&lt;li&gt;\=    赋值    a=$b 将把变量 b 的值赋给 a。&lt;/li&gt;
&lt;li&gt;\=\=    相等。用于比较两个数字，相同则返回 true。    [ $a == $b ] 返回 false。&lt;/li&gt;
&lt;li&gt;!\=    不相等。用于比较两个数字，不相同则返回 true。    [ $a != $b ] 返回 true。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;注意：条件表达式要放在方括号之间，并且要有空格，例如 [$a==$b] 是错误的，必须写成 [ $a == $b ]。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;关系运算符&lt;br&gt;关系运算符只支持数字，不支持字符串，除非字符串的值是数字。&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;-eq    检测两个数是否相等，相等返回 true。    [ $a -eq $b ] 返回 true。&lt;/li&gt;
&lt;li&gt;-ne    检测两个数是否相等，不相等返回 true。    [ $a -ne $b ] 返回 true。&lt;/li&gt;
&lt;li&gt;-gt    检测左边的数是否大于右边的，如果是，则返回 true。    [ $a -gt $b ] 返回 false。&lt;/li&gt;
&lt;li&gt;-lt    检测左边的数是否小于右边的，如果是，则返回 true。    [ $a -lt $b ] 返回 true。&lt;/li&gt;
&lt;li&gt;-ge    检测左边的数是否大等于右边的，如果是，则返回 true。    [ $a -ge $b ] 返回 false。&lt;/li&gt;
&lt;li&gt;-le    检测左边的数是否小于等于右边的，如果是，则返回 true。    [ $a -le $b ] 返回 true。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;布尔运算符&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;!    非运算，表达式为 true 则返回 false，否则返回 true。    [ ! false ] 返回 true。&lt;/li&gt;
&lt;li&gt;-o    或运算，有一个表达式为 true 则返回 true。    [ $a -lt 20 -o $b -gt 100 ] 返回 true。&lt;/li&gt;
&lt;li&gt;-a    与运算，两个表达式都为 true 才返回 true。    [ $a -lt 20 -a $b -gt 100 ] 返回 false。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;字符串运算符&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;=    检测两个字符串是否相等，相等返回 true。    [ $a = $b ] 返回 false。&lt;/li&gt;
&lt;li&gt;!=    检测两个字符串是否相等，不相等返回 true。    [ $a != $b ] 返回 true。&lt;/li&gt;
&lt;li&gt;-z    检测字符串长度是否为0，为0返回 true。    [ -z $a ] 返回 false。&lt;/li&gt;
&lt;li&gt;-n    检测字符串长度是否为0，不为0返回 true。    [ -z $a ] 返回 true。&lt;/li&gt;
&lt;li&gt;str    检测字符串是否为空，不为空返回 true。    [ $a ] 返回 true。&lt;/li&gt;
&lt;/ul&gt;
&lt;ol&gt;
&lt;li&gt;文件测试运算符&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;-b file    检测文件是否是块设备文件，如果是，则返回 true。    [ -b $file ] 返回 false。&lt;/li&gt;
&lt;li&gt;-c file    检测文件是否是字符设备文件，如果是，则返回 true。    [ -b $file ] 返回 false。&lt;/li&gt;
&lt;li&gt;-d file    检测文件是否是目录，如果是，则返回 true。    [ -d $file ] 返回 false。&lt;/li&gt;
&lt;li&gt;-f file    检测文件是否是普通文件（既不是目录，也不是设备文件），如果是，则返回 true。    [ -f $file ] 返回 true。&lt;/li&gt;
&lt;li&gt;-g file    检测文件是否设置了 SGID 位，如果是，则返回 true。    [ -g $file ] 返回 false。&lt;/li&gt;
&lt;li&gt;-k file    检测文件是否设置了粘着位(Sticky Bit)，如果是，则返回 true。    [ -k $file ] 返回 false。&lt;/li&gt;
&lt;li&gt;-p file    检测文件是否是具名管道，如果是，则返回 true。    [ -p $file ] 返回 false。&lt;/li&gt;
&lt;li&gt;-u file    检测文件是否设置了 SUID 位，如果是，则返回 true。    [ -u $file ] 返回 false。&lt;/li&gt;
&lt;li&gt;-r file    检测文件是否可读，如果是，则返回 true。    [ -r $file ] 返回 true。&lt;/li&gt;
&lt;li&gt;-w file    检测文件是否可写，如果是，则返回 true。    [ -w $file ] 返回 true。&lt;/li&gt;
&lt;li&gt;-x file    检测文件是否可执行，如果是，则返回 true。    [ -x $file ] 返回 true。&lt;/li&gt;
&lt;li&gt;-s file    检测文件是否为空（文件大小是否大于0），不为空返回 true。    [ -s $file ] 返回 true。&lt;/li&gt;
&lt;li&gt;-e file    检测文件（包括目录）是否存在，如果是，则返回 true。    [ -e $file ] 返回 true。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;注释&quot;&gt;&lt;a href=&quot;#注释&quot; class=&quot;headerlink&quot; title=&quot;注释&quot;&gt;&lt;/a&gt;注释&lt;/h3&gt;&lt;p&gt;#开头的就是注释&lt;br&gt;不过，如果在开发过程中，遇到大段的代码需要临时注释起来，过一会儿又取消注释，怎么办呢？每一行加个#符号太费力了，可以把这一段要注释的代码用一对花括号括起来，定义成一个函数，没有地方调用这个函数，这块代码就不会执行，达到了和注释一样的效果。&lt;/p&gt;
&lt;h3 id=&quot;字符串&quot;&gt;&lt;a href=&quot;#字符串&quot; class=&quot;headerlink&quot; title=&quot;字符串&quot;&gt;&lt;/a&gt;字符串&lt;/h3&gt;&lt;p&gt;字符串是shell编程中最常用最有用的数据类型（除了数字和字符串，也没啥其它类型好用了），字符串可以用单引号，也可以用双引号，也可以不用引号。单双引号的区别跟PHP类似。&lt;br&gt;单引号&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;str=&amp;apos;this is a string&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;单引号字符串的限制：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;单引号里的任何字符都会原样输出，单引号字符串中的变量是无效的；&lt;/li&gt;
&lt;li&gt;单引号字串中不能出现单引号（对单引号使用转义符后也不行）。&lt;br&gt;双引号&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;your_name=&amp;apos;qinjx&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;str=&amp;quot;Hello, I know your are \&amp;quot;$your_name\&amp;quot;! \n&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;双引号的优点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;双引号里可以有变量&lt;/li&gt;
&lt;li&gt;双引号里可以出现转义字符&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;拼接字符串&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;your_name=&amp;quot;qinjx&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;greeting=&amp;quot;hello, &amp;quot;$your_name&amp;quot; !&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;greeting_1=&amp;quot;hello, $&amp;#123;your_name&amp;#125; !&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo $greeting $greeting_1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;获取字符串长度&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;string=&amp;quot;abcd&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo $&amp;#123;#string&amp;#125; #输出 4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;提取子字符串&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;string=&amp;quot;alibaba is a great company&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo $&amp;#123;string:1:4&amp;#125; #输出liba&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;查找子字符串&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;string=&amp;quot;alibaba is a great company&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo `expr index &amp;quot;$string&amp;quot; is`&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;数组&quot;&gt;&lt;a href=&quot;#数组&quot; class=&quot;headerlink&quot; title=&quot;数组&quot;&gt;&lt;/a&gt;数组&lt;/h3&gt;&lt;ol&gt;
&lt;li&gt;定义数组&lt;br&gt;在Shell中，用括号来表示数组，数组元素用“空格”符号分割开。定义数组的一般形式为：&lt;blockquote&gt;
&lt;p&gt;array_name=(value1 … valuen)&lt;br&gt;例如：&lt;br&gt;array_name=(value0 value1 value2 value3)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;或者&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;array_name=(&lt;br&gt;value0&lt;br&gt;value1&lt;br&gt;value2&lt;br&gt;value3&lt;br&gt;)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;还可以单独定义数组的各个分量：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;array_name[0]=value0&lt;br&gt;array_name[1]=value1&lt;br&gt;array_name[2]=value2&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;可以不使用连续的下标，而且下标的范围没有限制。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;读取数组&lt;br&gt;读取数组元素值的一般格式是：&lt;blockquote&gt;
&lt;p&gt;${array_name[index]}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;例如：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;valuen=${array_name[2]}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;使用@ 或 * 可以获取数组中的所有元素，例如：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;${array_name[*]}&lt;br&gt;${array_name[@]}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;获取数组长度&lt;br&gt;获取数组长度的方法与获取字符串长度的方法相同，例如：&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;# 取得数组元素的个数&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;length=$&amp;#123;#array_name[@]&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 或者&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;length=$&amp;#123;#array_name[*]&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;# 取得数组单个元素的长度&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;lengthn=$&amp;#123;#array_name[n]&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;IF语句&quot;&gt;&lt;a href=&quot;#IF语句&quot; class=&quot;headerlink&quot; title=&quot;IF语句&quot;&gt;&lt;/a&gt;IF语句&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/bin/sh&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a=10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;b=20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if [ $a == $b ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;then&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   echo &amp;quot;a is equal to b&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;elif [ $a -gt $b ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;then&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   echo &amp;quot;a is greater than b&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;elif [ $a -lt $b ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;then&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   echo &amp;quot;a is less than b&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;else&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   echo &amp;quot;None of the condition met&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fi&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;CASE语句&quot;&gt;&lt;a href=&quot;#CASE语句&quot; class=&quot;headerlink&quot; title=&quot;CASE语句&quot;&gt;&lt;/a&gt;CASE语句&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;apos;Input a number between 1 to 4&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;apos;Your number is:\c&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;read aNum&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;case $aNum in&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    1)  echo &amp;apos;You select 1&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    2)  echo &amp;apos;You select 2&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    3)  echo &amp;apos;You select 3&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    4)  echo &amp;apos;You select 4&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    *)  echo &amp;apos;You do not select a number between 1 to 4&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;esac&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;#!/bin/bash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;option=&amp;quot;$&amp;#123;1&amp;#125;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;case $&amp;#123;option&amp;#125; in&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   -f) FILE=&amp;quot;$&amp;#123;2&amp;#125;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      echo &amp;quot;File name is $FILE&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      ;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   -d) DIR=&amp;quot;$&amp;#123;2&amp;#125;&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      echo &amp;quot;Dir name is $DIR&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      ;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   *) &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      echo &amp;quot;`basename $&amp;#123;0&amp;#125;`:usage: [-f file] | [-d directory]&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      exit 1 # Command to come out of the program with status 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      ;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;esac&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;FOR语句&quot;&gt;&lt;a href=&quot;#FOR语句&quot; class=&quot;headerlink&quot; title=&quot;FOR语句&quot;&gt;&lt;/a&gt;FOR语句&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;for loop in 1 2 3 4 5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;do&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    echo &amp;quot;The value is: $loop&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;done&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;While语句&quot;&gt;&lt;a href=&quot;#While语句&quot; class=&quot;headerlink&quot; title=&quot;While语句&quot;&gt;&lt;/a&gt;While语句&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;COUNTER=0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;while [ $COUNTER -lt 5 ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;do&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    COUNTER=&amp;apos;expr $COUNTER+1&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    echo $COUNTER&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;done&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo &amp;apos;type &amp;lt;CTRL-D&amp;gt; to terminate&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;echo -n &amp;apos;enter your most liked film: &amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;while read FILM&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;do&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    echo &amp;quot;Yeah! great film the $FILM&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;done&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;函数&quot;&gt;&lt;a href=&quot;#函数&quot; class=&quot;headerlink&quot; title=&quot;函数&quot;&gt;&lt;/a&gt;函数&lt;/h3&gt;&lt;p&gt;函数可以让我们将一个复杂功能划分成若干模块，让程序结构更加清晰，代码重复利用率更高。像其他编程语言一样，Shell 也支持函数。Shell 函数必须先定义后使用。&lt;/p&gt;
&lt;p&gt;Shell 函数的定义格式如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;function_name () {&lt;br&gt;    list of commands&lt;br&gt;    [ return value ]&lt;br&gt;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果你愿意，也可以在函数名前加上关键字 function：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;function function_name () {&lt;br&gt;    list of commands&lt;br&gt;    [ return value ]&lt;br&gt;}&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;函数返回值，可以显式增加return语句；如果不加，会将最后一条命令运行结果作为返回值。&lt;br&gt;Shell 函数返回值只能是整数，一般用来表示函数执行成功与否，0表示成功，其他值表示失败。如果 return 其他数据，比如一个字符串，往往会得到错误提示：“numeric argument required”。&lt;br&gt;如果一定要让函数返回字符串，那么可以先定义一个变量，用来接收函数的计算结果，脚本在需要的时候访问这个变量来获得函数返回值。&lt;br&gt;&lt;em&gt;调用函数只需要给出函数名，不需要加括号。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;像删除变量一样，删除函数也可以使用 unset 命令，不过要加上 .f 选项，如下所示：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;$unset .f function_name&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果你希望直接从终端调用函数，可以将函数定义在主目录下的 .profile 文件，这样每次登录后，在命令提示符后面输入函数名字就可以立即调用。&lt;/p&gt;
&lt;p&gt;在Shell中，调用函数时可以向其传递参数。在函数体内部，通过 $n 的形式来获取参数的值，例如，$1表示第一个参数，$2表示第二个参数…&lt;br&gt;注意，$10 不能获取第十个参数，获取第十个参数需要${10}。当n&amp;gt;=10时，需要使用${n}来获取参数。&lt;/p&gt;
&lt;p&gt;$#    传递给函数的参数个数。&lt;br&gt;$&lt;em&gt;    显示所有传递给函数的参数。&lt;br&gt;$@    与$&lt;/em&gt;相同，但是略有区别，请查看Shell特殊变量。&lt;br&gt;$?    函数的返回值。&lt;/p&gt;
&lt;h3 id=&quot;重定向&quot;&gt;&lt;a href=&quot;#重定向&quot; class=&quot;headerlink&quot; title=&quot;重定向&quot;&gt;&lt;/a&gt;重定向&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;command &amp;gt; file    将输出重定向到 file。&lt;/li&gt;
&lt;li&gt;command &amp;lt; file    将输入重定向到 file。&lt;/li&gt;
&lt;li&gt;command &amp;gt;&amp;gt; file    将输出以追加的方式重定向到 file。&lt;/li&gt;
&lt;li&gt;n &amp;gt; file    将文件描述符为 n 的文件重定向到 file。&lt;/li&gt;
&lt;li&gt;n &amp;gt;&amp;gt; file    将文件描述符为 n 的文件以追加的方式重定向到 file。&lt;/li&gt;
&lt;li&gt;n &amp;gt;&amp;amp; m    将输出文件 m 和 n 合并。&lt;/li&gt;
&lt;li&gt;n &amp;lt;&amp;amp; m    将输入文件 m 和 n 合并。&lt;/li&gt;
&lt;li&gt;&amp;lt;&amp;lt; tag    将开始标记 tag 和结束标记 tag 之间的内容作为输入。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;/dev/null 文件&lt;/p&gt;
&lt;p&gt;如果希望执行某个命令，但又不希望在屏幕上显示输出结果，那么可以将输出重定向到 /dev/null：&lt;br&gt;$ command &amp;gt; /dev/null&lt;br&gt;/dev/null 是一个特殊的文件，写入到它的内容都会被丢弃；如果尝试从该文件读取内容，那么什么也读不到。但是 /dev/null 文件非常有用，将命令的输出重定向到它，会起到”禁止输出“的效果。&lt;br&gt;如果希望屏蔽 stdout 和 stderr，可以这样写：&lt;br&gt;$ command &amp;gt; /dev/null 2&amp;gt;&amp;amp;1&lt;/p&gt;
&lt;h3 id=&quot;文件包含&quot;&gt;&lt;a href=&quot;#文件包含&quot; class=&quot;headerlink&quot; title=&quot;文件包含&quot;&gt;&lt;/a&gt;文件包含&lt;/h3&gt;&lt;p&gt;像其他语言一样，Shell 也可以包含外部脚本，将外部脚本的内容合并到当前脚本。&lt;/p&gt;
&lt;p&gt;Shell 中包含脚本可以使用：&lt;br&gt;. filename&lt;br&gt;或&lt;br&gt;source filename&lt;br&gt;两种方式的效果相同，简单起见，一般使用点号(.)，但是注意点号(.)和文件名中间有一空格。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;入门参考&lt;a href=&quot;http://c.biancheng.net/cpp/shell/&quot;&gt;Linux Shell脚本教程：30分钟玩转Shell脚本编程&lt;/a&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Shell本身是一个用C语言编写的程序，是用户使用Unix/Linux的桥梁。&lt;br&gt;Shell既是一种命令语言，又是一种程序设计语言。作为命令语言，交互式的解释和执行用户输入的命令;作为程序设计语言，定义了各种变量和参数，并提供了许多在高级语言中才具有的控制结构，包括循环和分支。&lt;br&gt;它虽然不是Unix/Linux系统内核的一部分，但它调用了系统核心的大部分功能来执行程序、建立文件并以并行的方式协调各个程序的运行。因此，对于用户来说，shell是最重要的实用程序，深入了解和熟练掌握shell的特性极其使用方法，是用好Unix/Linux系统的关键。&lt;br&gt;可以说，shell使用的熟练程度反映了用户对Unix/Linux使用的熟练程度。&lt;br&gt;Shell脚本是解释型的，不需要编译。可通过交互式(Interactive)和批处理(Batch)两种方式执行。&lt;br&gt;
    
    </summary>
    
    
      <category term="Linux" scheme="http://jacean.github.io/tags/Linux/"/>
    
      <category term="Shell" scheme="http://jacean.github.io/tags/Shell/"/>
    
  </entry>
  
  <entry>
    <title>windows下Ubuntu虚拟机安装</title>
    <link href="http://jacean.github.io/2016/03/15/windows%E4%B8%8BUbuntu%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85/"/>
    <id>http://jacean.github.io/2016/03/15/windows下Ubuntu虚拟机安装/</id>
    <published>2016-03-15T08:57:59.000Z</published>
    <updated>2016-03-15T09:16:34.317Z</updated>
    
    <content type="html">&lt;p&gt;虽然一直是win+Ubuntu双系统，但是工作环境一直在win下，为了方便就给Ubuntu装了个虚拟机。使用VirtualBox。&lt;br&gt;记录一些问题和过程以便日后查找。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;virtualBox虚拟机不能选择64位系统&quot;&gt;&lt;a href=&quot;#virtualBox虚拟机不能选择64位系统&quot; class=&quot;headerlink&quot; title=&quot;virtualBox虚拟机不能选择64位系统:&quot;&gt;&lt;/a&gt;virtualBox虚拟机不能选择64位系统:&lt;/h2&gt;&lt;p&gt;这可能是因为windows开启了hyper-V.在windows功能中关闭就可以了.&lt;br&gt;virtualbox下安装.5.0.10，主程序安装完毕后记得安装扩展包才行.&lt;/p&gt;
&lt;h2 id=&quot;ssh登陆virtualbox安装的Ubuntu的同时也能连上互联网&quot;&gt;&lt;a href=&quot;#ssh登陆virtualbox安装的Ubuntu的同时也能连上互联网&quot; class=&quot;headerlink&quot; title=&quot;ssh登陆virtualbox安装的Ubuntu的同时也能连上互联网&quot;&gt;&lt;/a&gt;ssh登陆virtualbox安装的Ubuntu的同时也能连上互联网&lt;/h2&gt;&lt;p&gt;在全局设定中添加网卡,然后给ubuntu启用第二张网卡.第一张还是nat,第二张设置成&lt;br&gt;仅主机(Host-Only)适配器，选择新添加的网卡。&lt;br&gt;！&lt;a href=&quot;http://7xrtyi.com1.z0.glb.clouddn.com/hexoBlog_img_virtualBox-wlan-1.png&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;&lt;/a&gt;&lt;br&gt;然后启动ubuntu来设置网卡。&lt;br&gt;但是，在我添加完后要启动ubuntu时报错了。&lt;br&gt;&lt;img src=&quot;http://7xrtyi.com1.z0.glb.clouddn.com/hexoBlog_img_virtualBox-2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Failed to open/create the internal network ‘HostInterfaceNetworking-VirtualBox Host-Only Ethernet Adapter #3’ (VERR_INTNET_FLT_IF_NOT_FOUND).&lt;br&gt;Failed to attach the network LUN (VERR_INTNET_FLT_IF_NOT_FOUND).&lt;br&gt;错误提示如上。&lt;br&gt;解决办法，在&lt;a href=&quot;http://stackoverflow.com/questions/33725779/failed-to-open-create-the-internal-network-vagrant-on-windows10&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;stackoverflow&lt;/a&gt;上找到的。&lt;br&gt;&lt;img src=&quot;http://7xrtyi.com1.z0.glb.clouddn.com/hexoBlog_img_virtualBox-3.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;好可怜，我想评论感谢人家都不行。&lt;br&gt;网络设置参考&lt;a href=&quot;http://www.cnblogs.com/leoyoungblog/p/4927591.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;狼来了&lt;/a&gt;&lt;br&gt;-全局设定-&amp;gt;网络-&amp;gt;添加host only网络&lt;br&gt;-设置host only网络IP&lt;br&gt;&lt;img src=&quot;http://7xrtyi.com1.z0.glb.clouddn.com/hexoBlog_img_VirtualBox-4.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;-虚拟机使用2块网卡&lt;br&gt;网卡1：NAT网络地址转换&lt;br&gt;&lt;img src=&quot;http://7xrtyi.com1.z0.glb.clouddn.com/hexoBlog_img_virtualBox-5.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;网卡2：host only（为便于分辨，可选用与网卡1不同的控制芯片）&lt;br&gt;&lt;img src=&quot;http://7xrtyi.com1.z0.glb.clouddn.com/hexoBlog_img_virtualbox-6.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;虚拟机内设置网卡2静态IP，与主机host only网卡相同网段&lt;br&gt;&lt;img src=&quot;http://7xrtyi.com1.z0.glb.clouddn.com/hexoBlog_img_virtualbox-7.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;添加ssh服务：在Ubuntu终端中输入命令：sudo apt-get install ssh&lt;br&gt;添加vsftpd服务：在Ubuntu终端中输入命令：sudo apt-get install vsftpd&lt;br&gt;Netstat -tlp&lt;br&gt;查看状态&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;secureCRT中文乱码&quot;&gt;&lt;a href=&quot;#secureCRT中文乱码&quot; class=&quot;headerlink&quot; title=&quot;secureCRT中文乱码&quot;&gt;&lt;/a&gt;secureCRT中文乱码&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://7xrtyi.com1.z0.glb.clouddn.com/hexoBlog_img_virtualbox-8.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;选项-&amp;gt;会话选项&lt;br&gt;&lt;img src=&quot;http://7xrtyi.com1.z0.glb.clouddn.com/hexoBlog_img_virtualbox-9.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;外观-&amp;gt;字符编码，设为utf-8就可以了。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;虽然一直是win+Ubuntu双系统，但是工作环境一直在win下，为了方便就给Ubuntu装了个虚拟机。使用VirtualBox。&lt;br&gt;记录一些问题和过程以便日后查找。&lt;br&gt;
    
    </summary>
    
    
      <category term="Ubuntu" scheme="http://jacean.github.io/tags/Ubuntu/"/>
    
      <category term="VirtualBox" scheme="http://jacean.github.io/tags/VirtualBox/"/>
    
  </entry>
  
  <entry>
    <title>windows文件夹拒绝访问,特殊权限</title>
    <link href="http://jacean.github.io/2016/03/15/windows%E6%96%87%E4%BB%B6%E5%A4%B9%E6%8B%92%E7%BB%9D%E8%AE%BF%E9%97%AE-%E7%89%B9%E6%AE%8A%E6%9D%83%E9%99%90/"/>
    <id>http://jacean.github.io/2016/03/15/windows文件夹拒绝访问-特殊权限/</id>
    <published>2016-03-15T08:50:25.000Z</published>
    <updated>2016-03-15T08:53:26.507Z</updated>
    
    <content type="html">&lt;p&gt;windows在安装一些比较涉及底层的软件的时候，或是一些缓存文件，会对一些文件给予特殊权限，当我们想主动删除的时候就会遇到各种问题。这个时候，可以通过查看属性，来观察其所有者来重新设置权限，从而删除。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;有些文件或文件夹只有everyone账户的权限,而这个权限因为继承关系不能被删除,那么就在安全里面给他添加个当前账户,设为完全控制的权限,然后删除即可&lt;br&gt;之前有个cygwin64的程序安装,结果卸载后还有残余文件夹cygwin64删除不掉,总是拒绝访问.因为只有1m多所以也就没管.但今天实在是看不下去了,就想删掉.&lt;br&gt;网上有很多删除顽固文件的方法,比如批处理,dos,添加压缩文件然后选择删除源文件,但这的反应都是拒绝访问,原因就是这个文件夹有特殊权限.&lt;br&gt;右键,属性,安全.&lt;br&gt;发现里面有个特殊的账户,而且拥有这个文件夹的特殊权限,虽然我是管理员登陆,但是仍旧没法给自己添加这种特殊权限.&lt;br&gt;自己原本是微软账户登录,发现没法更改权限,就注销成了本地账户,然后在安全里更改权限.&lt;br&gt;先是删除那个奇怪的拥有特殊权限的账户,然后给其他账户加上完全控制的权限,就可以删除了.&lt;br&gt;有些说法是,特殊权限是由于父文件夹和子文件的权限不一致造成的,但我一个个更改权限发现所有文件和文件夹的权限都是那个特殊账户的.&lt;/p&gt;
&lt;p&gt;所以我的做法是,从最底层的文件开始删除账户,更改权限,然后删除就ok了.这样一个个的删除可以,或是可以把权限都改完后删除文件夹就行.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;windows在安装一些比较涉及底层的软件的时候，或是一些缓存文件，会对一些文件给予特殊权限，当我们想主动删除的时候就会遇到各种问题。这个时候，可以通过查看属性，来观察其所有者来重新设置权限，从而删除。&lt;br&gt;
    
    </summary>
    
    
      <category term="windows" scheme="http://jacean.github.io/tags/windows/"/>
    
      <category term="other" scheme="http://jacean.github.io/tags/other/"/>
    
  </entry>
  
  <entry>
    <title>浏览器首页被hao.qquu8.com/tn=……篡改</title>
    <link href="http://jacean.github.io/2016/03/15/%E6%B5%8F%E8%A7%88%E5%99%A8%E9%A6%96%E9%A1%B5%E8%A2%ABhao-qquu8-com-tn-%E2%80%A6%E2%80%A6%E7%AF%A1%E6%94%B9/"/>
    <id>http://jacean.github.io/2016/03/15/浏览器首页被hao-qquu8-com-tn-……篡改/</id>
    <published>2016-03-15T08:38:58.000Z</published>
    <updated>2016-03-15T08:49:58.692Z</updated>
    
    <content type="html">&lt;p&gt;有时候装了什么奇怪的软件可能会使自己的浏览器首页被莫名其妙的篡改。比如不干净的激活软件，或是其他下载工具。&lt;br&gt;&lt;a href=&quot;http://www.techweb.com.cn/internet/2015-07-20/2177852.shtml&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;参考文章&lt;/a&gt;,有几张图借用了参考文章里的，若有侵权请提出，立刻更改。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;刚开始,我进入注册表搜索hao123,hao.qquu8.com，把能删的都删完了，但是并没有什么卵用。后来照下边的方法才弄好.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;第一步，首先在桌面和开始菜单里查看所有IE、Chrome浏览器快捷方式属性，把目标栏里的“&lt;a href=&quot;http://hao.qquu8.com”删掉；&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://hao.qquu8.com”删掉；&lt;/a&gt;&lt;br&gt;&lt;img src=&quot;http://7xrtyi.com1.z0.glb.clouddn.com/hexoBlog_img_other-index-changed-1.jpg&quot; alt=&quot;Chrome浏览器快捷方式属性&quot;&gt;&lt;br&gt;我的这里是正常的，因为是win10，所以在开始屏幕那里右键文件位置（C:\ProgramData\Microsoft\Windows\Start Menu\Programs\Google Chrome），那里的谷歌是好使的。&lt;br&gt;但是IE就发现问题了（C:\Users\XX\AppData\Roaming\Microsoft\Windows\Start Menu\Programs\Accessories），在快捷方式上果然有问题，怒而删之。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;em&gt;别忘了进入C:\Users\你的用户名\AppData\Roaming\Microsoft\Internet Explorer\Quick Launch文件夹，同样是查看IE和Chrome的属性，然后把其中的“&lt;a href=&quot;http://hao.qquu8.com”删掉。&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://hao.qquu8.com”删掉。&lt;/a&gt;&lt;/em&gt;&lt;br&gt;我是在这里发现了Chrome的问题，原来在这会有Chrome的快捷方式，而且还出错了，再次怒而删之！！！然后好了。&lt;br&gt;&lt;img src=&quot;http://7xrtyi.com1.z0.glb.clouddn.com/hexoBlog_img_other-index-changed-2.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;我在这一步就已经成功了.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;第二步： 按一下组合键“Win+R”调出运行命令框。在打开栏中键入regedit.exe，回车，打开注册表编辑器（若弹出用户账户控制窗口，请点击 是 继续），依次定位到：&lt;br&gt;HKEY_CURRENT_USER\Software\Policies\Microsoft&lt;br&gt;展开Microsoft，查看其下是否包含子项 Internet Explorer 若有，删除（右击Internet Explorer，选择“删除”）。&lt;br&gt;然后再依次定位到以下3个注册表项。单击Main，查看右边细节窗口中[Default_Page_URL]值和[Start Page]值是否有异常。如果被修改了，请根据自己的需要改回（右击键值，选择“修改”进行更改）。&lt;br&gt;HKEY_CURRENT&lt;em&gt;USER\SOFTWARE\Microsoft\Internet Explorer\Main&lt;br&gt;HKEY&lt;/em&gt; LOCAL_MACHINE\SOFTWARE\Microsoft\Internet Explorer\Main&lt;br&gt;HKEY_USERS\Default\Software\Microsoft\Internet Explorer\Main&lt;/li&gt;
&lt;li&gt;第三步：&lt;br&gt;完成以上工作后，将系统设置为“显示隐藏的文件、文件夹”，然后在C:\Windows目录下找到OEM文件（或文件夹），将他们删除。&lt;br&gt;这两步以防万一我也做了一遍，但是并没有遇到上面所说的情况，可能是之前删注册表给搞干净了。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;有些时候，任务栏的图标会被打上非法链接。可以在删除开始菜单的属性里的东西后取消固定后重新固定。&lt;br&gt;本质方法如下：&lt;br&gt;C:\Users\wanja\AppData\Roaming\Microsoft\Internet Explorer\Quick Launch\User Pinned\TaskBar&lt;br&gt;在这个目录下是任务栏快捷方式。属性，删除恶意指向就行。 &lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;有时候装了什么奇怪的软件可能会使自己的浏览器首页被莫名其妙的篡改。比如不干净的激活软件，或是其他下载工具。&lt;br&gt;&lt;a href=&quot;http://www.techweb.com.cn/internet/2015-07-20/2177852.shtml&quot;&gt;参考文章&lt;/a&gt;,有几张图借用了参考文章里的，若有侵权请提出，立刻更改。&lt;br&gt;
    
    </summary>
    
    
      <category term="Other" scheme="http://jacean.github.io/tags/Other/"/>
    
  </entry>
  
  <entry>
    <title>onenote笔记导出成markdown发布到Hexo</title>
    <link href="http://jacean.github.io/2016/03/15/onenote%E7%AC%94%E8%AE%B0%E5%AF%BC%E5%87%BA%E6%88%90markdown%E5%8F%91%E5%B8%83%E5%88%B0Hexo/"/>
    <id>http://jacean.github.io/2016/03/15/onenote笔记导出成markdown发布到Hexo/</id>
    <published>2016-03-15T08:32:17.000Z</published>
    <updated>2016-03-15T08:38:29.373Z</updated>
    
    <content type="html">&lt;p&gt;首先说明一点，就是我并没有找到可以直接由onenote笔记转换成markdown的方式。许多方法都是通过迂回策略，也就是先将onenote导出word，再把word转换成HTML，然后再转成markdown。&lt;br&gt;虽然有些麻烦，但还是挺好用的。需要用到unoconv和pandoc。原文&lt;a href=&quot;http://wenzhixin.net.cn/2014/01/03/convert_word_to_markdown&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;ubuntu 下将 word 文件转换为 markdown&lt;/a&gt;&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;主要介绍如何将 word 文件转换为 markdown 文件。&lt;br&gt;第一步：安装 unoconv 和 pandoc&lt;br&gt;&lt;em&gt;sudo apt-get install unoconv pandoc&lt;/em&gt;&lt;br&gt;第二步：将 word 文件转换 html&lt;br&gt;&lt;em&gt;unoconv -f html -o file.html file.docx&lt;/em&gt;&lt;br&gt;-f html：指定我们要转为 html 格式（format）&lt;br&gt;-o file.html：表示输出（output）的文件名为 file.html&lt;br&gt;file.docx：表示要转换的文件为 file.docx&lt;br&gt;第三步：将 html 转换为 markdown&lt;br&gt;&lt;em&gt;pandoc -f html -t markdown -o file.md file.html&lt;/em&gt;&lt;br&gt;-f html：指定我们要从什么文件（from）转换&lt;br&gt;-t markdown：指定我们要转为 markdown 格式（to）&lt;br&gt;-o file.md：表示输出（output）的文件名为 file.md&lt;br&gt;file.docx：表示要转换的文件为 file.html&lt;br&gt;第四步：将图片拷贝到 images 中&lt;br&gt;转换出来后会有很多图片，需要将图片拷贝到 images 文件夹中， 然后在替换 md 中的 ![]( 为 ![(images/ 即可。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;但是我转换后并没有出现image，具体看代码，发现转换后的html里引用的文件都成了直接的编码表示。所以可以在网页中另存为图片了。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;首先说明一点，就是我并没有找到可以直接由onenote笔记转换成markdown的方式。许多方法都是通过迂回策略，也就是先将onenote导出word，再把word转换成HTML，然后再转成markdown。&lt;br&gt;虽然有些麻烦，但还是挺好用的。需要用到unoconv和pandoc。原文&lt;a href=&quot;http://wenzhixin.net.cn/2014/01/03/convert_word_to_markdown&quot;&gt;ubuntu 下将 word 文件转换为 markdown&lt;/a&gt;&lt;br&gt;
    
    </summary>
    
    
      <category term="Hexo" scheme="http://jacean.github.io/tags/Hexo/"/>
    
      <category term="Ubuntu" scheme="http://jacean.github.io/tags/Ubuntu/"/>
    
      <category term="OneNote" scheme="http://jacean.github.io/tags/OneNote/"/>
    
  </entry>
  
  <entry>
    <title>C#设置ListView行高</title>
    <link href="http://jacean.github.io/2016/03/15/C-%E8%AE%BE%E7%BD%AEListView%E8%A1%8C%E9%AB%98/"/>
    <id>http://jacean.github.io/2016/03/15/C-设置ListView行高/</id>
    <published>2016-03-15T08:28:01.000Z</published>
    <updated>2016-03-15T08:29:59.456Z</updated>
    
    <content type="html">&lt;p&gt;listView的行高没法单独设置，可以迂回策略，通过在里面放一个imageList来把行高撑大。&lt;br&gt;代码如下：&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;ImageList imgList = new ImageList();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;imgList.ImageSize = new Size(1, LV_NOW_ROWHEIGHT);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;lv.SmallImageList = imgList;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;这样就可以了，通过调整LV_NOW_ROWHEIGHT来调整行高.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;listView的行高没法单独设置，可以迂回策略，通过在里面放一个imageList来把行高撑大。&lt;br&gt;代码如下：&lt;br&gt;
    
    </summary>
    
    
      <category term="C#" scheme="http://jacean.github.io/tags/C/"/>
    
      <category term="ListView" scheme="http://jacean.github.io/tags/ListView/"/>
    
  </entry>
  
  <entry>
    <title>C#利用反射,遍历获得一个类的所有属性名</title>
    <link href="http://jacean.github.io/2016/03/15/C-%E5%88%A9%E7%94%A8%E5%8F%8D%E5%B0%84-%E9%81%8D%E5%8E%86%E8%8E%B7%E5%BE%97%E4%B8%80%E4%B8%AA%E7%B1%BB%E7%9A%84%E6%89%80%E6%9C%89%E5%B1%9E%E6%80%A7%E5%90%8D/"/>
    <id>http://jacean.github.io/2016/03/15/C-利用反射-遍历获得一个类的所有属性名/</id>
    <published>2016-03-15T08:15:26.000Z</published>
    <updated>2016-03-15T08:26:28.678Z</updated>
    
    <content type="html">&lt;p&gt;通过反射是可以完全获取一个对象的所有可取属性，并利用这些属性实现更多操作，比如对象的序列化之类。&lt;br&gt;代码如下&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;//传入类的实例&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;public static PropertyInfo[] getPropertyInfo&amp;lt;T&amp;gt;(T c)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;PropertyInfo[] ps = null;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;try&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Type type = typeof(T);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;T obj = Activator.CreateInstance(type);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;ps = type.GetProperties((BindingFlags.Public | BindingFlags.Instance));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;catch (System.Exception ex)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;         &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;return ps;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//传入类的类型&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;//使用&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; PropertyInfo[] pis= actFunc.getPropertyInfo(typeof(property))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; //方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; public static PropertyInfo[] getPropertyInfo(Type c)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; PropertyInfo[] ps = null;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; try&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; //Type type = typeof(c);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; object obj = Activator.CreateInstance(c);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; ps = c.GetProperties((BindingFlags.Public | BindingFlags.Instance));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; catch (System.Exception ex)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#123;         &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; return ps;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/litian/articles/2002435.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;参考文章&lt;/a&gt;&lt;br&gt;&amp;gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;private void button1_Click(object sender, EventArgs e)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          Type t = typeof(System.Drawing.Color);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          string className = t.Name;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          MessageBox.Show(className);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          //获取所有方法&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          System.Reflection.MethodInfo[] methods = t.GetMethods();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          this.textBox1.Text = &amp;quot;&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          foreach (System.Reflection.MethodInfo method in methods)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              this.textBox1.Text += method.Name + System.Environment.NewLine;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          //获取所有成员&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          System.Reflection.MemberInfo[] members = t.GetMembers();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          //获取所有属性&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          System.Reflection.PropertyInfo[] properties = t.GetProperties();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          foreach (System.Reflection.PropertyInfo property in properties)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;              this.lstColors.Items.Add(property.Name);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;          &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      private void lstColors_SelectedIndexChanged(object sender, EventArgs e)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;         this.pictureBox1.BackColor=  System.Drawing.Color.FromName(((ListBox)sender).Text);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;通过反射是可以完全获取一个对象的所有可取属性，并利用这些属性实现更多操作，比如对象的序列化之类。&lt;br&gt;代码如下&lt;br&gt;
    
    </summary>
    
    
      <category term="C#" scheme="http://jacean.github.io/tags/C/"/>
    
      <category term="反射" scheme="http://jacean.github.io/tags/%E5%8F%8D%E5%B0%84/"/>
    
  </entry>
  
  <entry>
    <title>无法打开物理文件 操作系统错误 5:拒绝访问 SQL Sever</title>
    <link href="http://jacean.github.io/2016/03/15/%E6%97%A0%E6%B3%95%E6%89%93%E5%BC%80%E7%89%A9%E7%90%86%E6%96%87%E4%BB%B6-%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E9%94%99%E8%AF%AF-5-%E6%8B%92%E7%BB%9D%E8%AE%BF%E9%97%AE-SQL-Sever/"/>
    <id>http://jacean.github.io/2016/03/15/无法打开物理文件-操作系统错误-5-拒绝访问-SQL-Sever/</id>
    <published>2016-03-15T08:12:52.000Z</published>
    <updated>2016-03-15T08:14:21.691Z</updated>
    
    <content type="html">&lt;p&gt;今天分离附加数据库，分离出去然后再附加，没有问题。但是一把.mdf文件拷到其它文件夹下就出错，错误如下：&lt;br&gt;无法打开物理文件 “E:\db\homework.mdf”。操作系统错误 5:”5(拒绝访问。)”。 (Microsoft SQL Server，错误: 5120)&lt;/p&gt;
&lt;p&gt;问了下朋友，朋友说找到.mdf文件改文件的安全权限。&lt;/p&gt;
&lt;p&gt;搞了半天才明白，原来是找到.mdf文件，右键-&amp;gt;属性-&amp;gt;安全-&amp;gt;选择当前用户-&amp;gt;编辑-&amp;gt;完全控制。&lt;/p&gt;
&lt;p&gt;如果还出现这种情况，记得把.log文件的安全权限也改了。&lt;br&gt;&lt;a href=&quot;http://blog.sina.com.cn/s/blog_7e0127220101b62j.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;参考文章&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;今天分离附加数据库，分离出去然后再附加，没有问题。但是一把.mdf文件拷到其它文件夹下就出错，错误如下：&lt;br&gt;无法打开物理文件 “E:\db\homework.mdf”。操作系统错误 5:”5(拒绝访问。)”。 (Microsoft SQL Server，错误: 5120
    
    </summary>
    
    
      <category term="SQL Server" scheme="http://jacean.github.io/tags/SQL-Server/"/>
    
  </entry>
  
  <entry>
    <title>自定义含ListView控件获取listView的滚动条事件</title>
    <link href="http://jacean.github.io/2016/03/15/%E8%87%AA%E5%AE%9A%E4%B9%89%E5%90%ABListView%E6%8E%A7%E4%BB%B6%E8%8E%B7%E5%8F%96listView%E7%9A%84%E6%BB%9A%E5%8A%A8%E6%9D%A1%E4%BA%8B%E4%BB%B6/"/>
    <id>http://jacean.github.io/2016/03/15/自定义含ListView控件获取listView的滚动条事件/</id>
    <published>2016-03-15T08:07:26.000Z</published>
    <updated>2016-03-15T08:12:06.983Z</updated>
    
    <content type="html">&lt;p&gt;自定义组合控件，内含有ListView控件，需要获取Listview的滚动条事件来进行操作。&lt;br&gt;事件外传，具体实现代码如下。&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;‘’’C#&lt;br&gt;public partial class myListview : ListView&lt;br&gt;{&lt;br&gt;public event ScrollEventHandler Scroll;&lt;br&gt;private const int WM_HSCROLL = 0x114;&lt;br&gt;private const int WM_VSCROLL = 0x115;&lt;br&gt;private const int MOUSEWHEEL = 0x020A;&lt;br&gt;private const int KEYDOWN = 0x0100;&lt;/p&gt;
&lt;p&gt;protected virtual void OnScroll(ScrollEventArgs e)&lt;br&gt;{&lt;br&gt;ScrollEventHandler handler = this.Scroll;&lt;br&gt;if (handler != null)&lt;br&gt;{&lt;br&gt;handler(this, e);&lt;br&gt;}&lt;br&gt;}&lt;br&gt;protected override void WndProc(ref Message m)&lt;br&gt;{&lt;br&gt;base.WndProc(ref m);&lt;br&gt;if (m.Msg == MOUSEWHEEL || m.Msg == WM_VSCROLL || (m.Msg == KEYDOWN &amp;amp;&amp;amp; (m.WParam == (IntPtr)40 || m.WParam == (IntPtr)35)))&lt;br&gt;{&lt;br&gt;// Trap WM_VSCROLL&lt;br&gt;OnScroll(new ScrollEventArgs((ScrollEventType)(m.WParam.ToInt32() &amp;amp; 0xffff), 0));&lt;br&gt;}&lt;br&gt;}&lt;br&gt;}&lt;/p&gt;
&lt;p&gt;```&lt;br&gt;自定义控件的事件外传是做好自定义控件的关键，才能更好的实现逻辑。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;自定义组合控件，内含有ListView控件，需要获取Listview的滚动条事件来进行操作。&lt;br&gt;事件外传，具体实现代码如下。&lt;br&gt;
    
    </summary>
    
    
      <category term="C#" scheme="http://jacean.github.io/tags/C/"/>
    
      <category term="ListView" scheme="http://jacean.github.io/tags/ListView/"/>
    
      <category term="自定义控件" scheme="http://jacean.github.io/tags/%E8%87%AA%E5%AE%9A%E4%B9%89%E6%8E%A7%E4%BB%B6/"/>
    
  </entry>
  
</feed>
